{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col rounded-xl border py-6 gap-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-regularm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,2EACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-4\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,2QAAC,qMAAkB;QACjB,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,2QAAC,qMAAkB;QACjB,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,2QAAC,wMAAqB;QACpB,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,qoBACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,2QAAC,wMAAqB;QACpB,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-white bg-black h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,2QAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,2QAAC;YACC,aAAU;YACV,WAAW,IAAA,sJAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/organization/organization-team.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'\nimport { Badge } from '@/components/ui/badge'\nimport { Input } from '@/components/ui/input'\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table'\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger } from '@/components/ui/dropdown-menu'\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Label } from '@/components/ui/label'\nimport { Textarea } from '@/components/ui/textarea'\nimport { \n  Users, \n  UserPlus, \n  Mail, \n  MoreVertical, \n  Crown, \n  Shield, \n  User, \n  Search,\n  Filter,\n  Edit,\n  Trash2,\n  Clock,\n  MapPin,\n  Phone\n} from 'lucide-react'\n\n// Team member interface based on dummy data schema\ninterface TeamMember {\n  id: string\n  name: string\n  email: string\n  role: 'owner' | 'admin' | 'member'\n  status: 'active' | 'pending' | 'inactive'\n  avatarUrl?: string\n  joinedAt: string\n  lastActive?: string\n  department?: string\n  location?: string\n  phone?: string\n  projects: string[]\n}\n\n// Dummy team data\nconst teamMembers: TeamMember[] = [\n  {\n    id: 'u1',\n    name: 'Alice Johnson',\n    email: 'alice@company.com',\n    role: 'owner',\n    status: 'active',\n    avatarUrl: '/avatars/alice.png',\n    joinedAt: '2024-01-15T09:00:00Z',\n    lastActive: '2 minutes ago',\n    department: 'Management',\n    location: 'San Francisco, CA',\n    phone: '+1 (555) 123-4567',\n    projects: ['p1', 'p2', 'p3']\n  },\n  {\n    id: 'u2',\n    name: 'Bob Smith',\n    email: 'bob@company.com',\n    role: 'admin',\n    status: 'active',\n    avatarUrl: '/avatars/bob.png',\n    joinedAt: '2024-02-01T10:00:00Z',\n    lastActive: '1 hour ago',\n    department: 'Engineering',\n    location: 'New York, NY',\n    phone: '+1 (555) 234-5678',\n    projects: ['p1', 'p4']\n  },\n  {\n    id: 'u3',\n    name: 'Carol Davis',\n    email: 'carol@company.com',\n    role: 'member',\n    status: 'active',\n    avatarUrl: '/avatars/carol.png',\n    joinedAt: '2024-02-15T11:00:00Z',\n    lastActive: '3 hours ago',\n    department: 'Design',\n    location: 'Los Angeles, CA',\n    phone: '+1 (555) 345-6789',\n    projects: ['p2', 'p3']\n  },\n  {\n    id: 'u4',\n    name: 'David Wilson',\n    email: 'david@company.com',\n    role: 'member',\n    status: 'pending',\n    joinedAt: '2024-03-01T12:00:00Z',\n    department: 'Marketing',\n    location: 'Chicago, IL',\n    projects: ['p4']\n  },\n  {\n    id: 'u5',\n    name: 'Emma Brown',\n    email: 'emma@company.com',\n    role: 'member',\n    status: 'inactive',\n    avatarUrl: '/avatars/emma.png',\n    joinedAt: '2024-01-20T08:00:00Z',\n    lastActive: '2 weeks ago',\n    department: 'Engineering',\n    location: 'Austin, TX',\n    projects: []\n  }\n]\n\nexport function OrganizationTeam() {\n  const [searchTerm, setSearchTerm] = useState('')\n  const [filterRole, setFilterRole] = useState<string>('all')\n  const [filterStatus, setFilterStatus] = useState<string>('all')\n  const [inviteDialogOpen, setInviteDialogOpen] = useState(false)\n  const [editMemberDialogOpen, setEditMemberDialogOpen] = useState(false)\n  const [selectedMember, setSelectedMember] = useState<TeamMember | null>(null)\n\n  // Filter team members based on search and filters\n  const filteredMembers = teamMembers.filter(member => {\n    const matchesSearch = member.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         member.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         (member.department?.toLowerCase().includes(searchTerm.toLowerCase()) ?? false)\n    \n    const matchesRole = filterRole === 'all' || member.role === filterRole\n    const matchesStatus = filterStatus === 'all' || member.status === filterStatus\n    \n    return matchesSearch && matchesRole && matchesStatus\n  })\n\n  const getRoleIcon = (role: string) => {\n    switch (role) {\n      case 'owner':\n        return <Crown className=\"h-4 w-4 text-yellow-500\" />\n      case 'admin':\n        return <Shield className=\"h-4 w-4 text-blue-500\" />\n      default:\n        return <User className=\"h-4 w-4 text-gray-500\" />\n    }\n  }\n\n  const getRoleBadge = (role: string) => {\n    switch (role) {\n      case 'owner':\n        return <Badge variant=\"default\" className=\"bg-yellow-100 text-yellow-800\">Owner</Badge>\n      case 'admin':\n        return <Badge variant=\"default\" className=\"bg-blue-100 text-blue-800\">Admin</Badge>\n      default:\n        return <Badge variant=\"secondary\">Member</Badge>\n    }\n  }\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'active':\n        return <Badge variant=\"default\" className=\"bg-green-100 text-green-800\">Active</Badge>\n      case 'pending':\n        return <Badge variant=\"default\" className=\"bg-yellow-100 text-yellow-800\">Pending</Badge>\n      case 'inactive':\n        return <Badge variant=\"secondary\">Inactive</Badge>\n      default:\n        return <Badge variant=\"secondary\">{status}</Badge>\n    }\n  }\n\n  const getInitials = (name: string) => {\n    return name.split(' ').map(n => n[0]).join('').toUpperCase().slice(0, 2)\n  }\n\n  const handleEditMember = (member: TeamMember) => {\n    setSelectedMember(member)\n    setEditMemberDialogOpen(true)\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Team Overview Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"p-2 bg-blue-100 rounded-lg\">\n                <Users className=\"h-6 w-6 text-blue-600\" />\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">Total Members</p>\n                <p className=\"text-2xl font-bold\">{teamMembers.length}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"p-2 bg-green-100 rounded-lg\">\n                <Shield className=\"h-6 w-6 text-green-600\" />\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">Active Members</p>\n                <p className=\"text-2xl font-bold\">{teamMembers.filter(m => m.status === 'active').length}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"p-2 bg-yellow-100 rounded-lg\">\n                <Clock className=\"h-6 w-6 text-yellow-600\" />\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">Pending Invites</p>\n                <p className=\"text-2xl font-bold\">{teamMembers.filter(m => m.status === 'pending').length}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"p-2 bg-purple-100 rounded-lg\">\n                <Crown className=\"h-6 w-6 text-purple-600\" />\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">Administrators</p>\n                <p className=\"text-2xl font-bold\">{teamMembers.filter(m => m.role === 'admin' || m.role === 'owner').length}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Search and Filters */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <CardTitle>Team Members</CardTitle>\n              <CardDescription>Manage team members, roles, and permissions</CardDescription>\n            </div>\n            <Dialog open={inviteDialogOpen} onOpenChange={setInviteDialogOpen}>\n              <DialogTrigger asChild>\n                <Button>\n                  <UserPlus className=\"h-4 w-4 mr-2\" />\n                  Invite Member\n                </Button>\n              </DialogTrigger>\n              <DialogContent>\n                <DialogHeader>\n                  <DialogTitle>Invite Team Member</DialogTitle>\n                  <DialogDescription>Send an invitation to join your organization</DialogDescription>\n                </DialogHeader>\n                <div className=\"space-y-4\">\n                  <div>\n                    <Label htmlFor=\"email\">Email Address</Label>\n                    <Input id=\"email\" placeholder=\"colleague@company.com\" />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"role\">Role</Label>\n                    <Select defaultValue=\"member\">\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"member\">Member</SelectItem>\n                        <SelectItem value=\"admin\">Administrator</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div>\n                    <Label htmlFor=\"message\">Personal Message (Optional)</Label>\n                    <Textarea id=\"message\" placeholder=\"Welcome to our team!\" />\n                  </div>\n                </div>\n                <DialogFooter>\n                  <Button variant=\"outline\" onClick={() => setInviteDialogOpen(false)}>Cancel</Button>\n                  <Button onClick={() => setInviteDialogOpen(false)}>Send Invitation</Button>\n                </DialogFooter>\n              </DialogContent>\n            </Dialog>\n          </div>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"flex items-center gap-4\">\n            <div className=\"relative flex-1\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-4 w-4\" />\n              <Input\n                placeholder=\"Search members...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-10\"\n              />\n            </div>\n            <Select value={filterRole} onValueChange={setFilterRole}>\n              <SelectTrigger className=\"w-40\">\n                <Filter className=\"h-4 w-4 mr-2\" />\n                <SelectValue placeholder=\"Role\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Roles</SelectItem>\n                <SelectItem value=\"owner\">Owner</SelectItem>\n                <SelectItem value=\"admin\">Admin</SelectItem>\n                <SelectItem value=\"member\">Member</SelectItem>\n              </SelectContent>\n            </Select>\n            <Select value={filterStatus} onValueChange={setFilterStatus}>\n              <SelectTrigger className=\"w-40\">\n                <Filter className=\"h-4 w-4 mr-2\" />\n                <SelectValue placeholder=\"Status\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Status</SelectItem>\n                <SelectItem value=\"active\">Active</SelectItem>\n                <SelectItem value=\"pending\">Pending</SelectItem>\n                <SelectItem value=\"inactive\">Inactive</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Team Members Table */}\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Member</TableHead>\n                <TableHead>Role</TableHead>\n                <TableHead>Status</TableHead>\n                <TableHead>Department</TableHead>\n                <TableHead>Last Active</TableHead>\n                <TableHead>Projects</TableHead>\n                <TableHead className=\"w-[70px]\"></TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {filteredMembers.map((member) => (\n                <TableRow key={member.id}>\n                  <TableCell>\n                    <div className=\"flex items-center gap-3\">\n                      <Avatar className=\"h-10 w-10\">\n                        <AvatarImage src={member.avatarUrl} />\n                        <AvatarFallback>{getInitials(member.name)}</AvatarFallback>\n                      </Avatar>\n                      <div>\n                        <div className=\"font-medium\">{member.name}</div>\n                        <div className=\"text-sm text-muted-foreground\">{member.email}</div>\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"flex items-center gap-2\">\n                      {getRoleIcon(member.role)}\n                      {getRoleBadge(member.role)}\n                    </div>\n                  </TableCell>\n                  <TableCell>{getStatusBadge(member.status)}</TableCell>\n                  <TableCell>\n                    <div className=\"text-sm\">\n                      {member.department || 'Not specified'}\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"text-sm text-muted-foreground\">\n                      {member.lastActive || 'Never'}\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"flex gap-1\">\n                      {member.projects.slice(0, 2).map((projectId, index) => (\n                        <Badge key={index} variant=\"outline\" className=\"text-xs\">\n                          Project {projectId.slice(-1)}\n                        </Badge>\n                      ))}\n                      {member.projects.length > 2 && (\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          +{member.projects.length - 2}\n                        </Badge>\n                      )}\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <DropdownMenu>\n                      <DropdownMenuTrigger asChild>\n                        <Button variant=\"ghost\" size=\"sm\">\n                          <MoreVertical className=\"h-4 w-4\" />\n                        </Button>\n                      </DropdownMenuTrigger>\n                      <DropdownMenuContent align=\"end\">\n                        <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                        <DropdownMenuSeparator />\n                        <DropdownMenuItem onClick={() => handleEditMember(member)}>\n                          <Edit className=\"h-4 w-4 mr-2\" />\n                          Edit Member\n                        </DropdownMenuItem>\n                        <DropdownMenuItem>\n                          <Mail className=\"h-4 w-4 mr-2\" />\n                          Send Message\n                        </DropdownMenuItem>\n                        <DropdownMenuSeparator />\n                        <DropdownMenuItem className=\"text-red-600\">\n                          <Trash2 className=\"h-4 w-4 mr-2\" />\n                          Remove Member\n                        </DropdownMenuItem>\n                      </DropdownMenuContent>\n                    </DropdownMenu>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </CardContent>\n      </Card>\n\n      {/* Edit Member Dialog */}\n      <Dialog open={editMemberDialogOpen} onOpenChange={setEditMemberDialogOpen}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle>Edit Team Member</DialogTitle>\n            <DialogDescription>Update member information and permissions</DialogDescription>\n          </DialogHeader>\n          {selectedMember && (\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center gap-4\">\n                <Avatar className=\"h-16 w-16\">\n                  <AvatarImage src={selectedMember.avatarUrl} />\n                  <AvatarFallback>{getInitials(selectedMember.name)}</AvatarFallback>\n                </Avatar>\n                <div>\n                  <h3 className=\"font-semibold\">{selectedMember.name}</h3>\n                  <p className=\"text-sm text-muted-foreground\">{selectedMember.email}</p>\n                </div>\n              </div>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"member-role\">Role</Label>\n                  <Select defaultValue={selectedMember.role}>\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"member\">Member</SelectItem>\n                      <SelectItem value=\"admin\">Administrator</SelectItem>\n                      <SelectItem value=\"owner\">Owner</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div>\n                  <Label htmlFor=\"member-department\">Department</Label>\n                  <Input defaultValue={selectedMember.department} />\n                </div>\n                <div>\n                  <Label htmlFor=\"member-location\">Location</Label>\n                  <Input defaultValue={selectedMember.location} />\n                </div>\n                <div>\n                  <Label htmlFor=\"member-phone\">Phone</Label>\n                  <Input defaultValue={selectedMember.phone} />\n                </div>\n              </div>\n            </div>\n          )}\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setEditMemberDialogOpen(false)}>Cancel</Button>\n            <Button onClick={() => setEditMemberDialogOpen(false)}>Save Changes</Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;;;;;;;;;;;;;;;AA+CA,kBAAkB;AAClB,MAAM,cAA4B;IAChC;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,MAAM;QACN,QAAQ;QACR,WAAW;QACX,UAAU;QACV,YAAY;QACZ,YAAY;QACZ,UAAU;QACV,OAAO;QACP,UAAU;YAAC;YAAM;YAAM;SAAK;IAC9B;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,MAAM;QACN,QAAQ;QACR,WAAW;QACX,UAAU;QACV,YAAY;QACZ,YAAY;QACZ,UAAU;QACV,OAAO;QACP,UAAU;YAAC;YAAM;SAAK;IACxB;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,MAAM;QACN,QAAQ;QACR,WAAW;QACX,UAAU;QACV,YAAY;QACZ,YAAY;QACZ,UAAU;QACV,OAAO;QACP,UAAU;YAAC;YAAM;SAAK;IACxB;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,MAAM;QACN,QAAQ;QACR,UAAU;QACV,YAAY;QACZ,UAAU;QACV,UAAU;YAAC;SAAK;IAClB;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,MAAM;QACN,QAAQ;QACR,WAAW;QACX,UAAU;QACV,YAAY;QACZ,YAAY;QACZ,UAAU;QACV,UAAU,EAAE;IACd;CACD;AAEM,SAAS;IACd,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,8OAAQ,EAAC;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,8OAAQ,EAAS;IACrD,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,8OAAQ,EAAS;IACzD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,8OAAQ,EAAC;IACzD,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,IAAA,8OAAQ,EAAC;IACjE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,IAAA,8OAAQ,EAAoB;IAExE,kDAAkD;IAClD,MAAM,kBAAkB,YAAY,MAAM,CAAC,CAAA;QACzC,MAAM,gBAAgB,OAAO,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW,OAC1D,OAAO,KAAK,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW,OAC1D,CAAC,OAAO,UAAU,EAAE,cAAc,SAAS,WAAW,WAAW,OAAO,KAAK;QAElG,MAAM,cAAc,eAAe,SAAS,OAAO,IAAI,KAAK;QAC5D,MAAM,gBAAgB,iBAAiB,SAAS,OAAO,MAAM,KAAK;QAElE,OAAO,iBAAiB,eAAe;IACzC;IAEA,MAAM,cAAc,CAAC;QACnB,OAAQ;YACN,KAAK;gBACH,qBAAO,2QAAC,0OAAK;oBAAC,WAAU;;;;;;YAC1B,KAAK;gBACH,qBAAO,2QAAC,6OAAM;oBAAC,WAAU;;;;;;YAC3B;gBACE,qBAAO,2QAAC,uOAAI;oBAAC,WAAU;;;;;;QAC3B;IACF;IAEA,MAAM,eAAe,CAAC;QACpB,OAAQ;YACN,KAAK;gBACH,qBAAO,2QAAC,uKAAK;oBAAC,SAAQ;oBAAU,WAAU;8BAAgC;;;;;;YAC5E,KAAK;gBACH,qBAAO,2QAAC,uKAAK;oBAAC,SAAQ;oBAAU,WAAU;8BAA4B;;;;;;YACxE;gBACE,qBAAO,2QAAC,uKAAK;oBAAC,SAAQ;8BAAY;;;;;;QACtC;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,OAAQ;YACN,KAAK;gBACH,qBAAO,2QAAC,uKAAK;oBAAC,SAAQ;oBAAU,WAAU;8BAA8B;;;;;;YAC1E,KAAK;gBACH,qBAAO,2QAAC,uKAAK;oBAAC,SAAQ;oBAAU,WAAU;8BAAgC;;;;;;YAC5E,KAAK;gBACH,qBAAO,2QAAC,uKAAK;oBAAC,SAAQ;8BAAY;;;;;;YACpC;gBACE,qBAAO,2QAAC,uKAAK;oBAAC,SAAQ;8BAAa;;;;;;QACvC;IACF;IAEA,MAAM,cAAc,CAAC;QACnB,OAAO,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,CAAA,IAAK,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,WAAW,GAAG,KAAK,CAAC,GAAG;IACxE;IAEA,MAAM,mBAAmB,CAAC;QACxB,kBAAkB;QAClB,wBAAwB;IAC1B;IAEA,qBACE,2QAAC;QAAI,WAAU;;0BAEb,2QAAC;gBAAI,WAAU;;kCACb,2QAAC,qKAAI;kCACH,cAAA,2QAAC,4KAAW;4BAAC,WAAU;sCACrB,cAAA,2QAAC;gCAAI,WAAU;;kDACb,2QAAC;wCAAI,WAAU;kDACb,cAAA,2QAAC,0OAAK;4CAAC,WAAU;;;;;;;;;;;kDAEnB,2QAAC;;0DACC,2QAAC;gDAAE,WAAU;0DAA4C;;;;;;0DACzD,2QAAC;gDAAE,WAAU;0DAAsB,YAAY,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAM7D,2QAAC,qKAAI;kCACH,cAAA,2QAAC,4KAAW;4BAAC,WAAU;sCACrB,cAAA,2QAAC;gCAAI,WAAU;;kDACb,2QAAC;wCAAI,WAAU;kDACb,cAAA,2QAAC,6OAAM;4CAAC,WAAU;;;;;;;;;;;kDAEpB,2QAAC;;0DACC,2QAAC;gDAAE,WAAU;0DAA4C;;;;;;0DACzD,2QAAC;gDAAE,WAAU;0DAAsB,YAAY,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,UAAU,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAMhG,2QAAC,qKAAI;kCACH,cAAA,2QAAC,4KAAW;4BAAC,WAAU;sCACrB,cAAA,2QAAC;gCAAI,WAAU;;kDACb,2QAAC;wCAAI,WAAU;kDACb,cAAA,2QAAC,0OAAK;4CAAC,WAAU;;;;;;;;;;;kDAEnB,2QAAC;;0DACC,2QAAC;gDAAE,WAAU;0DAA4C;;;;;;0DACzD,2QAAC;gDAAE,WAAU;0DAAsB,YAAY,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,WAAW,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAMjG,2QAAC,qKAAI;kCACH,cAAA,2QAAC,4KAAW;4BAAC,WAAU;sCACrB,cAAA,2QAAC;gCAAI,WAAU;;kDACb,2QAAC;wCAAI,WAAU;kDACb,cAAA,2QAAC,0OAAK;4CAAC,WAAU;;;;;;;;;;;kDAEnB,2QAAC;;0DACC,2QAAC;gDAAE,WAAU;0DAA4C;;;;;;0DACzD,2QAAC;gDAAE,WAAU;0DAAsB,YAAY,MAAM,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,WAAW,EAAE,IAAI,KAAK,SAAS,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQrH,2QAAC,qKAAI;;kCACH,2QAAC,2KAAU;kCACT,cAAA,2QAAC;4BAAI,WAAU;;8CACb,2QAAC;;sDACC,2QAAC,0KAAS;sDAAC;;;;;;sDACX,2QAAC,gLAAe;sDAAC;;;;;;;;;;;;8CAEnB,2QAAC,yKAAM;oCAAC,MAAM;oCAAkB,cAAc;;sDAC5C,2QAAC,gLAAa;4CAAC,OAAO;sDACpB,cAAA,2QAAC,yKAAM;;kEACL,2QAAC,uPAAQ;wDAAC,WAAU;;;;;;oDAAiB;;;;;;;;;;;;sDAIzC,2QAAC,gLAAa;;8DACZ,2QAAC,+KAAY;;sEACX,2QAAC,8KAAW;sEAAC;;;;;;sEACb,2QAAC,oLAAiB;sEAAC;;;;;;;;;;;;8DAErB,2QAAC;oDAAI,WAAU;;sEACb,2QAAC;;8EACC,2QAAC,uKAAK;oEAAC,SAAQ;8EAAQ;;;;;;8EACvB,2QAAC,uKAAK;oEAAC,IAAG;oEAAQ,aAAY;;;;;;;;;;;;sEAEhC,2QAAC;;8EACC,2QAAC,uKAAK;oEAAC,SAAQ;8EAAO;;;;;;8EACtB,2QAAC,yKAAM;oEAAC,cAAa;;sFACnB,2QAAC,gLAAa;sFACZ,cAAA,2QAAC,8KAAW;;;;;;;;;;sFAEd,2QAAC,gLAAa;;8FACZ,2QAAC,6KAAU;oFAAC,OAAM;8FAAS;;;;;;8FAC3B,2QAAC,6KAAU;oFAAC,OAAM;8FAAQ;;;;;;;;;;;;;;;;;;;;;;;;sEAIhC,2QAAC;;8EACC,2QAAC,uKAAK;oEAAC,SAAQ;8EAAU;;;;;;8EACzB,2QAAC,6KAAQ;oEAAC,IAAG;oEAAU,aAAY;;;;;;;;;;;;;;;;;;8DAGvC,2QAAC,+KAAY;;sEACX,2QAAC,yKAAM;4DAAC,SAAQ;4DAAU,SAAS,IAAM,oBAAoB;sEAAQ;;;;;;sEACrE,2QAAC,yKAAM;4DAAC,SAAS,IAAM,oBAAoB;sEAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAM7D,2QAAC,4KAAW;wBAAC,WAAU;;0CACrB,2QAAC;gCAAI,WAAU;;kDACb,2QAAC;wCAAI,WAAU;;0DACb,2QAAC,6OAAM;gDAAC,WAAU;;;;;;0DAClB,2QAAC,uKAAK;gDACJ,aAAY;gDACZ,OAAO;gDACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;gDAC7C,WAAU;;;;;;;;;;;;kDAGd,2QAAC,yKAAM;wCAAC,OAAO;wCAAY,eAAe;;0DACxC,2QAAC,gLAAa;gDAAC,WAAU;;kEACvB,2QAAC,6OAAM;wDAAC,WAAU;;;;;;kEAClB,2QAAC,8KAAW;wDAAC,aAAY;;;;;;;;;;;;0DAE3B,2QAAC,gLAAa;;kEACZ,2QAAC,6KAAU;wDAAC,OAAM;kEAAM;;;;;;kEACxB,2QAAC,6KAAU;wDAAC,OAAM;kEAAQ;;;;;;kEAC1B,2QAAC,6KAAU;wDAAC,OAAM;kEAAQ;;;;;;kEAC1B,2QAAC,6KAAU;wDAAC,OAAM;kEAAS;;;;;;;;;;;;;;;;;;kDAG/B,2QAAC,yKAAM;wCAAC,OAAO;wCAAc,eAAe;;0DAC1C,2QAAC,gLAAa;gDAAC,WAAU;;kEACvB,2QAAC,6OAAM;wDAAC,WAAU;;;;;;kEAClB,2QAAC,8KAAW;wDAAC,aAAY;;;;;;;;;;;;0DAE3B,2QAAC,gLAAa;;kEACZ,2QAAC,6KAAU;wDAAC,OAAM;kEAAM;;;;;;kEACxB,2QAAC,6KAAU;wDAAC,OAAM;kEAAS;;;;;;kEAC3B,2QAAC,6KAAU;wDAAC,OAAM;kEAAU;;;;;;kEAC5B,2QAAC,6KAAU;wDAAC,OAAM;kEAAW;;;;;;;;;;;;;;;;;;;;;;;;0CAMnC,2QAAC,uKAAK;;kDACJ,2QAAC,6KAAW;kDACV,cAAA,2QAAC,0KAAQ;;8DACP,2QAAC,2KAAS;8DAAC;;;;;;8DACX,2QAAC,2KAAS;8DAAC;;;;;;8DACX,2QAAC,2KAAS;8DAAC;;;;;;8DACX,2QAAC,2KAAS;8DAAC;;;;;;8DACX,2QAAC,2KAAS;8DAAC;;;;;;8DACX,2QAAC,2KAAS;8DAAC;;;;;;8DACX,2QAAC,2KAAS;oDAAC,WAAU;;;;;;;;;;;;;;;;;kDAGzB,2QAAC,2KAAS;kDACP,gBAAgB,GAAG,CAAC,CAAC,uBACpB,2QAAC,0KAAQ;;kEACP,2QAAC,2KAAS;kEACR,cAAA,2QAAC;4DAAI,WAAU;;8EACb,2QAAC,yKAAM;oEAAC,WAAU;;sFAChB,2QAAC,8KAAW;4EAAC,KAAK,OAAO,SAAS;;;;;;sFAClC,2QAAC,iLAAc;sFAAE,YAAY,OAAO,IAAI;;;;;;;;;;;;8EAE1C,2QAAC;;sFACC,2QAAC;4EAAI,WAAU;sFAAe,OAAO,IAAI;;;;;;sFACzC,2QAAC;4EAAI,WAAU;sFAAiC,OAAO,KAAK;;;;;;;;;;;;;;;;;;;;;;;kEAIlE,2QAAC,2KAAS;kEACR,cAAA,2QAAC;4DAAI,WAAU;;gEACZ,YAAY,OAAO,IAAI;gEACvB,aAAa,OAAO,IAAI;;;;;;;;;;;;kEAG7B,2QAAC,2KAAS;kEAAE,eAAe,OAAO,MAAM;;;;;;kEACxC,2QAAC,2KAAS;kEACR,cAAA,2QAAC;4DAAI,WAAU;sEACZ,OAAO,UAAU,IAAI;;;;;;;;;;;kEAG1B,2QAAC,2KAAS;kEACR,cAAA,2QAAC;4DAAI,WAAU;sEACZ,OAAO,UAAU,IAAI;;;;;;;;;;;kEAG1B,2QAAC,2KAAS;kEACR,cAAA,2QAAC;4DAAI,WAAU;;gEACZ,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,sBAC3C,2QAAC,uKAAK;wEAAa,SAAQ;wEAAU,WAAU;;4EAAU;4EAC9C,UAAU,KAAK,CAAC,CAAC;;uEADhB;;;;;gEAIb,OAAO,QAAQ,CAAC,MAAM,GAAG,mBACxB,2QAAC,uKAAK;oEAAC,SAAQ;oEAAU,WAAU;;wEAAU;wEACzC,OAAO,QAAQ,CAAC,MAAM,GAAG;;;;;;;;;;;;;;;;;;kEAKnC,2QAAC,2KAAS;kEACR,cAAA,2QAAC,yLAAY;;8EACX,2QAAC,gMAAmB;oEAAC,OAAO;8EAC1B,cAAA,2QAAC,yKAAM;wEAAC,SAAQ;wEAAQ,MAAK;kFAC3B,cAAA,2QAAC,uQAAY;4EAAC,WAAU;;;;;;;;;;;;;;;;8EAG5B,2QAAC,gMAAmB;oEAAC,OAAM;;sFACzB,2QAAC,8LAAiB;sFAAC;;;;;;sFACnB,2QAAC,kMAAqB;;;;;sFACtB,2QAAC,6LAAgB;4EAAC,SAAS,IAAM,iBAAiB;;8FAChD,2QAAC,gPAAI;oFAAC,WAAU;;;;;;gFAAiB;;;;;;;sFAGnC,2QAAC,6LAAgB;;8FACf,2QAAC,uOAAI;oFAAC,WAAU;;;;;;gFAAiB;;;;;;;sFAGnC,2QAAC,kMAAqB;;;;;sFACtB,2QAAC,6LAAgB;4EAAC,WAAU;;8FAC1B,2QAAC,iPAAM;oFAAC,WAAU;;;;;;gFAAiB;;;;;;;;;;;;;;;;;;;;;;;;;+CAhE9B,OAAO,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BA8ElC,2QAAC,yKAAM;gBAAC,MAAM;gBAAsB,cAAc;0BAChD,cAAA,2QAAC,gLAAa;oBAAC,WAAU;;sCACvB,2QAAC,+KAAY;;8CACX,2QAAC,8KAAW;8CAAC;;;;;;8CACb,2QAAC,oLAAiB;8CAAC;;;;;;;;;;;;wBAEpB,gCACC,2QAAC;4BAAI,WAAU;;8CACb,2QAAC;oCAAI,WAAU;;sDACb,2QAAC,yKAAM;4CAAC,WAAU;;8DAChB,2QAAC,8KAAW;oDAAC,KAAK,eAAe,SAAS;;;;;;8DAC1C,2QAAC,iLAAc;8DAAE,YAAY,eAAe,IAAI;;;;;;;;;;;;sDAElD,2QAAC;;8DACC,2QAAC;oDAAG,WAAU;8DAAiB,eAAe,IAAI;;;;;;8DAClD,2QAAC;oDAAE,WAAU;8DAAiC,eAAe,KAAK;;;;;;;;;;;;;;;;;;8CAGtE,2QAAC;oCAAI,WAAU;;sDACb,2QAAC;;8DACC,2QAAC,uKAAK;oDAAC,SAAQ;8DAAc;;;;;;8DAC7B,2QAAC,yKAAM;oDAAC,cAAc,eAAe,IAAI;;sEACvC,2QAAC,gLAAa;sEACZ,cAAA,2QAAC,8KAAW;;;;;;;;;;sEAEd,2QAAC,gLAAa;;8EACZ,2QAAC,6KAAU;oEAAC,OAAM;8EAAS;;;;;;8EAC3B,2QAAC,6KAAU;oEAAC,OAAM;8EAAQ;;;;;;8EAC1B,2QAAC,6KAAU;oEAAC,OAAM;8EAAQ;;;;;;;;;;;;;;;;;;;;;;;;sDAIhC,2QAAC;;8DACC,2QAAC,uKAAK;oDAAC,SAAQ;8DAAoB;;;;;;8DACnC,2QAAC,uKAAK;oDAAC,cAAc,eAAe,UAAU;;;;;;;;;;;;sDAEhD,2QAAC;;8DACC,2QAAC,uKAAK;oDAAC,SAAQ;8DAAkB;;;;;;8DACjC,2QAAC,uKAAK;oDAAC,cAAc,eAAe,QAAQ;;;;;;;;;;;;sDAE9C,2QAAC;;8DACC,2QAAC,uKAAK;oDAAC,SAAQ;8DAAe;;;;;;8DAC9B,2QAAC,uKAAK;oDAAC,cAAc,eAAe,KAAK;;;;;;;;;;;;;;;;;;;;;;;;sCAKjD,2QAAC,+KAAY;;8CACX,2QAAC,yKAAM;oCAAC,SAAQ;oCAAU,SAAS,IAAM,wBAAwB;8CAAQ;;;;;;8CACzE,2QAAC,yKAAM;oCAAC,SAAS,IAAM,wBAAwB;8CAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMnE","debugId":null}},
    {"offset": {"line": 1873, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,2QAAC,yMAAsB;QACrB,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,2QAAC,8MAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE","debugId":null}},
    {"offset": {"line": 1911, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/organization/organization-projects.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Input } from '@/components/ui/input'\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'\nimport { Progress } from '@/components/ui/progress'\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger } from '@/components/ui/dropdown-menu'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { \n  FolderOpen, \n  Plus, \n  Search, \n  Filter, \n  MoreVertical, \n  Calendar, \n  Users, \n  CheckCircle, \n  Clock, \n  AlertCircle,\n  Eye,\n  Edit,\n  Archive,\n  Trash2,\n  Star,\n  TrendingUp\n} from 'lucide-react'\n\n// Project interface based on dummy data schema\ninterface Project {\n  id: string\n  title: string\n  description: string\n  status: 'active' | 'completed' | 'archived' | 'on_hold'\n  priority: 'low' | 'medium' | 'high' | 'urgent'\n  createdAt: string\n  updatedAt: string\n  dueDate?: string\n  url?: string\n  tasksCount: number\n  completedTasks: number\n  teamMembers: string[]\n  owner: string\n  budget?: number\n  spent?: number\n  tags: string[]\n}\n\n// Dummy projects data\nconst projects: Project[] = [\n  {\n    id: 'p1',\n    title: 'Marketing Website Redesign',\n    description: 'Complete overhaul of the company marketing website with modern design and improved UX',\n    status: 'active',\n    priority: 'high',\n    createdAt: '2025-08-01T10:00:00Z',\n    updatedAt: '2025-09-10T15:30:00Z',\n    dueDate: '2025-10-15T23:59:59Z',\n    url: 'https://marketing.company.com',\n    tasksCount: 24,\n    completedTasks: 18,\n    teamMembers: ['u1', 'u2', 'u3'],\n    owner: 'u1',\n    budget: 50000,\n    spent: 32000,\n    tags: ['marketing', 'design', 'frontend']\n  },\n  {\n    id: 'p2',\n    title: 'Mobile App Development',\n    description: 'Native iOS and Android app for customer engagement',\n    status: 'active',\n    priority: 'urgent',\n    createdAt: '2025-07-15T09:00:00Z',\n    updatedAt: '2025-09-11T12:00:00Z',\n    dueDate: '2025-11-30T23:59:59Z',\n    tasksCount: 45,\n    completedTasks: 12,\n    teamMembers: ['u2', 'u4', 'u5'],\n    owner: 'u2',\n    budget: 120000,\n    spent: 45000,\n    tags: ['mobile', 'ios', 'android', 'development']\n  },\n  {\n    id: 'p3',\n    title: 'Data Analytics Platform',\n    description: 'Internal dashboard for business intelligence and analytics',\n    status: 'active',\n    priority: 'medium',\n    createdAt: '2025-06-01T08:00:00Z',\n    updatedAt: '2025-09-09T16:45:00Z',\n    dueDate: '2025-12-31T23:59:59Z',\n    tasksCount: 32,\n    completedTasks: 28,\n    teamMembers: ['u3', 'u5'],\n    owner: 'u3',\n    budget: 80000,\n    spent: 65000,\n    tags: ['analytics', 'dashboard', 'data']\n  },\n  {\n    id: 'p4',\n    title: 'E-commerce Integration',\n    description: 'Integration with major e-commerce platforms',\n    status: 'completed',\n    priority: 'medium',\n    createdAt: '2025-04-01T10:00:00Z',\n    updatedAt: '2025-08-15T14:20:00Z',\n    tasksCount: 18,\n    completedTasks: 18,\n    teamMembers: ['u1', 'u4'],\n    owner: 'u4',\n    budget: 35000,\n    spent: 33000,\n    tags: ['ecommerce', 'integration', 'api']\n  },\n  {\n    id: 'p5',\n    title: 'Legacy System Migration',\n    description: 'Migration from legacy systems to modern infrastructure',\n    status: 'on_hold',\n    priority: 'low',\n    createdAt: '2025-05-01T11:00:00Z',\n    updatedAt: '2025-07-30T10:15:00Z',\n    tasksCount: 52,\n    completedTasks: 8,\n    teamMembers: ['u2', 'u5'],\n    owner: 'u5',\n    budget: 200000,\n    spent: 25000,\n    tags: ['migration', 'infrastructure', 'backend']\n  }\n]\n\n// Team members for display\nconst teamMembers = [\n  { id: 'u1', name: 'Alice Johnson', avatarUrl: '/avatars/alice.png' },\n  { id: 'u2', name: 'Bob Smith', avatarUrl: '/avatars/bob.png' },\n  { id: 'u3', name: 'Carol Davis', avatarUrl: '/avatars/carol.png' },\n  { id: 'u4', name: 'David Wilson', avatarUrl: '/avatars/david.png' },\n  { id: 'u5', name: 'Emma Brown', avatarUrl: '/avatars/emma.png' }\n]\n\nexport function OrganizationProjects() {\n  const [searchTerm, setSearchTerm] = useState('')\n  const [filterStatus, setFilterStatus] = useState<string>('all')\n  const [filterPriority, setFilterPriority] = useState<string>('all')\n  const [sortBy, setSortBy] = useState<string>('updated')\n\n  // Filter and sort projects\n  const filteredProjects = projects\n    .filter(project => {\n      const matchesSearch = project.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           project.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           project.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()))\n      \n      const matchesStatus = filterStatus === 'all' || project.status === filterStatus\n      const matchesPriority = filterPriority === 'all' || project.priority === filterPriority\n      \n      return matchesSearch && matchesStatus && matchesPriority\n    })\n    .sort((a, b) => {\n      switch (sortBy) {\n        case 'name':\n          return a.title.localeCompare(b.title)\n        case 'created':\n          return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\n        case 'due':\n          if (!a.dueDate && !b.dueDate) return 0\n          if (!a.dueDate) return 1\n          if (!b.dueDate) return -1\n          return new Date(a.dueDate).getTime() - new Date(b.dueDate).getTime()\n        case 'progress':\n          const aProgress = a.tasksCount > 0 ? (a.completedTasks / a.tasksCount) * 100 : 0\n          const bProgress = b.tasksCount > 0 ? (b.completedTasks / b.tasksCount) * 100 : 0\n          return bProgress - aProgress\n        default: // updated\n          return new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime()\n      }\n    })\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'active':\n        return <Badge variant=\"default\" className=\"bg-green-100 text-green-800\">Active</Badge>\n      case 'completed':\n        return <Badge variant=\"default\" className=\"bg-blue-100 text-blue-800\">Completed</Badge>\n      case 'on_hold':\n        return <Badge variant=\"default\" className=\"bg-yellow-100 text-yellow-800\">On Hold</Badge>\n      case 'archived':\n        return <Badge variant=\"secondary\">Archived</Badge>\n      default:\n        return <Badge variant=\"secondary\">{status}</Badge>\n    }\n  }\n\n  const getPriorityBadge = (priority: string) => {\n    switch (priority) {\n      case 'urgent':\n        return <Badge variant=\"destructive\">Urgent</Badge>\n      case 'high':\n        return <Badge variant=\"default\" className=\"bg-red-100 text-red-800\">High</Badge>\n      case 'medium':\n        return <Badge variant=\"default\" className=\"bg-yellow-100 text-yellow-800\">Medium</Badge>\n      case 'low':\n        return <Badge variant=\"secondary\">Low</Badge>\n      default:\n        return <Badge variant=\"secondary\">{priority}</Badge>\n    }\n  }\n\n  const getProgressColor = (progress: number) => {\n    if (progress >= 80) return 'bg-green-500'\n    if (progress >= 60) return 'bg-blue-500'\n    if (progress >= 40) return 'bg-yellow-500'\n    return 'bg-red-500'\n  }\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', { \n      month: 'short', \n      day: 'numeric', \n      year: 'numeric' \n    })\n  }\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(amount)\n  }\n\n  const getTeamMember = (id: string) => {\n    return teamMembers.find(member => member.id === id)\n  }\n\n  const getInitials = (name: string) => {\n    return name.split(' ').map(n => n[0]).join('').toUpperCase().slice(0, 2)\n  }\n\n  // Calculate organization project stats\n  const totalProjects = projects.length\n  const activeProjects = projects.filter(p => p.status === 'active').length\n  const completedProjects = projects.filter(p => p.status === 'completed').length\n  const onHoldProjects = projects.filter(p => p.status === 'on_hold').length\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Project Overview Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"p-2 bg-blue-100 rounded-lg\">\n                <FolderOpen className=\"h-6 w-6 text-blue-600\" />\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">Total Projects</p>\n                <p className=\"text-2xl font-bold\">{totalProjects}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"p-2 bg-green-100 rounded-lg\">\n                <TrendingUp className=\"h-6 w-6 text-green-600\" />\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">Active Projects</p>\n                <p className=\"text-2xl font-bold\">{activeProjects}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"p-2 bg-blue-100 rounded-lg\">\n                <CheckCircle className=\"h-6 w-6 text-blue-600\" />\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">Completed</p>\n                <p className=\"text-2xl font-bold\">{completedProjects}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"p-2 bg-yellow-100 rounded-lg\">\n                <Clock className=\"h-6 w-6 text-yellow-600\" />\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">On Hold</p>\n                <p className=\"text-2xl font-bold\">{onHoldProjects}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Projects Management */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <CardTitle>All Projects</CardTitle>\n              <CardDescription>Manage and monitor all organization projects</CardDescription>\n            </div>\n            <Button>\n              <Plus className=\"h-4 w-4 mr-2\" />\n              New Project\n            </Button>\n          </div>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          {/* Search and Filters */}\n          <div className=\"flex items-center gap-4\">\n            <div className=\"relative flex-1\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-4 w-4\" />\n              <Input\n                placeholder=\"Search projects...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-10\"\n              />\n            </div>\n            <Select value={filterStatus} onValueChange={setFilterStatus}>\n              <SelectTrigger className=\"w-40\">\n                <Filter className=\"h-4 w-4 mr-2\" />\n                <SelectValue placeholder=\"Status\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Status</SelectItem>\n                <SelectItem value=\"active\">Active</SelectItem>\n                <SelectItem value=\"completed\">Completed</SelectItem>\n                <SelectItem value=\"on_hold\">On Hold</SelectItem>\n                <SelectItem value=\"archived\">Archived</SelectItem>\n              </SelectContent>\n            </Select>\n            <Select value={filterPriority} onValueChange={setFilterPriority}>\n              <SelectTrigger className=\"w-40\">\n                <Filter className=\"h-4 w-4 mr-2\" />\n                <SelectValue placeholder=\"Priority\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Priority</SelectItem>\n                <SelectItem value=\"urgent\">Urgent</SelectItem>\n                <SelectItem value=\"high\">High</SelectItem>\n                <SelectItem value=\"medium\">Medium</SelectItem>\n                <SelectItem value=\"low\">Low</SelectItem>\n              </SelectContent>\n            </Select>\n            <Select value={sortBy} onValueChange={setSortBy}>\n              <SelectTrigger className=\"w-40\">\n                <SelectValue placeholder=\"Sort by\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"updated\">Last Updated</SelectItem>\n                <SelectItem value=\"created\">Date Created</SelectItem>\n                <SelectItem value=\"name\">Name</SelectItem>\n                <SelectItem value=\"due\">Due Date</SelectItem>\n                <SelectItem value=\"progress\">Progress</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Projects Grid */}\n          <div className=\"grid gap-6\">\n            {filteredProjects.map((project) => {\n              const progress = project.tasksCount > 0 ? (project.completedTasks / project.tasksCount) * 100 : 0\n              const owner = getTeamMember(project.owner)\n              const budgetUsed = project.budget && project.spent ? (project.spent / project.budget) * 100 : 0\n\n              return (\n                <Card key={project.id} className=\"hover:shadow-md transition-shadow\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-start justify-between mb-4\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center gap-3 mb-2\">\n                          <h3 className=\"font-semibold text-lg\">{project.title}</h3>\n                          {getStatusBadge(project.status)}\n                          {getPriorityBadge(project.priority)}\n                        </div>\n                        <p className=\"text-muted-foreground text-sm mb-3 line-clamp-2\">\n                          {project.description}\n                        </p>\n                        <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n                          <div className=\"flex items-center gap-1\">\n                            <Calendar className=\"h-4 w-4\" />\n                            {project.dueDate ? `Due ${formatDate(project.dueDate)}` : 'No due date'}\n                          </div>\n                          <div className=\"flex items-center gap-1\">\n                            <Users className=\"h-4 w-4\" />\n                            {project.teamMembers.length} members\n                          </div>\n                          {project.budget && (\n                            <div>\n                              Budget: {formatCurrency(project.spent || 0)} / {formatCurrency(project.budget)}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                      <DropdownMenu>\n                        <DropdownMenuTrigger asChild>\n                          <Button variant=\"ghost\" size=\"sm\">\n                            <MoreVertical className=\"h-4 w-4\" />\n                          </Button>\n                        </DropdownMenuTrigger>\n                        <DropdownMenuContent align=\"end\">\n                          <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                          <DropdownMenuSeparator />\n                          <DropdownMenuItem>\n                            <Eye className=\"h-4 w-4 mr-2\" />\n                            View Project\n                          </DropdownMenuItem>\n                          <DropdownMenuItem>\n                            <Edit className=\"h-4 w-4 mr-2\" />\n                            Edit Project\n                          </DropdownMenuItem>\n                          <DropdownMenuItem>\n                            <Star className=\"h-4 w-4 mr-2\" />\n                            Add to Favorites\n                          </DropdownMenuItem>\n                          <DropdownMenuSeparator />\n                          <DropdownMenuItem>\n                            <Archive className=\"h-4 w-4 mr-2\" />\n                            Archive Project\n                          </DropdownMenuItem>\n                          <DropdownMenuItem className=\"text-red-600\">\n                            <Trash2 className=\"h-4 w-4 mr-2\" />\n                            Delete Project\n                          </DropdownMenuItem>\n                        </DropdownMenuContent>\n                      </DropdownMenu>\n                    </div>\n\n                    <div className=\"space-y-4\">\n                      {/* Progress */}\n                      <div>\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <span className=\"text-sm font-medium\">Progress</span>\n                          <span className=\"text-sm text-muted-foreground\">\n                            {project.completedTasks}/{project.tasksCount} tasks\n                          </span>\n                        </div>\n                        <Progress value={progress} className=\"h-2\" />\n                        <p className=\"text-sm text-muted-foreground mt-1\">\n                          {Math.round(progress)}% complete\n                        </p>\n                      </div>\n\n                      {/* Budget Progress (if available) */}\n                      {project.budget && project.spent && (\n                        <div>\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <span className=\"text-sm font-medium\">Budget</span>\n                            <span className=\"text-sm text-muted-foreground\">\n                              {formatCurrency(project.spent)} / {formatCurrency(project.budget)}\n                            </span>\n                          </div>\n                          <Progress value={budgetUsed} className=\"h-2\" />\n                          <p className=\"text-sm text-muted-foreground mt-1\">\n                            {Math.round(budgetUsed)}% used\n                          </p>\n                        </div>\n                      )}\n\n                      {/* Team and Tags */}\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-2\">\n                          <span className=\"text-sm font-medium\">Team:</span>\n                          <div className=\"flex -space-x-2\">\n                            {project.teamMembers.slice(0, 3).map((memberId) => {\n                              const member = getTeamMember(memberId)\n                              return member ? (\n                                <Avatar key={memberId} className=\"h-8 w-8 border-2 border-background\">\n                                  <AvatarImage src={member.avatarUrl} />\n                                  <AvatarFallback className=\"text-xs\">\n                                    {getInitials(member.name)}\n                                  </AvatarFallback>\n                                </Avatar>\n                              ) : null\n                            })}\n                            {project.teamMembers.length > 3 && (\n                              <div className=\"h-8 w-8 rounded-full bg-muted border-2 border-background flex items-center justify-center\">\n                                <span className=\"text-xs font-medium\">\n                                  +{project.teamMembers.length - 3}\n                                </span>\n                              </div>\n                            )}\n                          </div>\n                          {owner && (\n                            <div className=\"ml-2 text-sm text-muted-foreground\">\n                              Owner: {owner.name}\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"flex gap-1\">\n                          {project.tags.slice(0, 3).map((tag) => (\n                            <Badge key={tag} variant=\"outline\" className=\"text-xs\">\n                              {tag}\n                            </Badge>\n                          ))}\n                          {project.tags.length > 3 && (\n                            <Badge variant=\"outline\" className=\"text-xs\">\n                              +{project.tags.length - 3}\n                            </Badge>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              )\n            })}\n          </div>\n\n          {filteredProjects.length === 0 && (\n            <div className=\"text-center py-12\">\n              <FolderOpen className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n              <h3 className=\"text-lg font-semibold mb-2\">No projects found</h3>\n              <p className=\"text-muted-foreground mb-4\">\n                {searchTerm || filterStatus !== 'all' || filterPriority !== 'all'\n                  ? 'Try adjusting your search or filters'\n                  : 'Get started by creating your first project'}\n              </p>\n              {!searchTerm && filterStatus === 'all' && filterPriority === 'all' && (\n                <Button>\n                  <Plus className=\"h-4 w-4 mr-2\" />\n                  Create Project\n                </Button>\n              )}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3429, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n    </SwitchPrimitive.Root>\n  )\n}\n\nexport { Switch }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,OAAO,EACd,SAAS,EACT,GAAG,OAC+C;IAClD,qBACE,2QAAC,uMAAoB;QACnB,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,6WACA;QAED,GAAG,KAAK;kBAET,cAAA,2QAAC,wMAAqB;YACpB,aAAU;YACV,WAAW,IAAA,sJAAE,EACX;;;;;;;;;;;AAKV","debugId":null}},
    {"offset": {"line": 3464, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/organization/organization-notifications.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Switch } from '@/components/ui/switch'\nimport { Label } from '@/components/ui/label'\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { Input } from '@/components/ui/input'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'\nimport { \n  Bell, \n  Mail, \n  MessageSquare, \n  Settings, \n  Users, \n  FolderOpen, \n  CheckCircle, \n  AlertCircle, \n  Clock, \n  Send,\n  Plus,\n  Filter,\n  Search,\n  Archive,\n  Trash2,\n  Eye,\n  EyeOff\n} from 'lucide-react'\n\n// Notification interfaces\ninterface Notification {\n  id: string\n  type: 'system' | 'project' | 'team' | 'task' | 'mention'\n  title: string\n  message: string\n  createdAt: string\n  read: boolean\n  priority: 'low' | 'medium' | 'high' | 'urgent'\n  sender?: string\n  projectId?: string\n  actionUrl?: string\n}\n\ninterface NotificationSettings {\n  email: {\n    projectUpdates: boolean\n    taskAssignments: boolean\n    teamInvitations: boolean\n    mentions: boolean\n    weeklyDigest: boolean\n    systemUpdates: boolean\n  }\n  push: {\n    projectUpdates: boolean\n    taskAssignments: boolean\n    teamInvitations: boolean\n    mentions: boolean\n    systemUpdates: boolean\n  }\n  frequency: 'instant' | 'hourly' | 'daily' | 'weekly'\n}\n\n// Dummy notifications data\nconst notifications: Notification[] = [\n  {\n    id: 'n1',\n    type: 'project',\n    title: 'Project Update',\n    message: 'Marketing Website Redesign project has been updated with new tasks',\n    createdAt: '2025-09-12T08:30:00Z',\n    read: false,\n    priority: 'medium',\n    sender: 'Alice Johnson',\n    projectId: 'p1',\n    actionUrl: '/projects/p1'\n  },\n  {\n    id: 'n2',\n    type: 'task',\n    title: 'Task Assignment',\n    message: 'You have been assigned to \"Update homepage header\" task',\n    createdAt: '2025-09-12T07:15:00Z',\n    read: false,\n    priority: 'high',\n    sender: 'Bob Smith',\n    actionUrl: '/tasks/t1'\n  },\n  {\n    id: 'n3',\n    type: 'team',\n    title: 'New Team Member',\n    message: 'David Wilson has joined the organization',\n    createdAt: '2025-09-11T16:45:00Z',\n    read: true,\n    priority: 'low',\n    sender: 'System'\n  },\n  {\n    id: 'n4',\n    type: 'mention',\n    title: 'You were mentioned',\n    message: 'Carol Davis mentioned you in a comment on Mobile App Development',\n    createdAt: '2025-09-11T14:20:00Z',\n    read: true,\n    priority: 'medium',\n    sender: 'Carol Davis',\n    projectId: 'p2'\n  },\n  {\n    id: 'n5',\n    type: 'system',\n    title: 'System Maintenance',\n    message: 'Scheduled maintenance will occur this weekend from 2-4 AM EST',\n    createdAt: '2025-09-10T12:00:00Z',\n    read: true,\n    priority: 'urgent',\n    sender: 'System'\n  }\n]\n\n// Dummy team members for sender display\nconst teamMembers = [\n  { id: 'u1', name: 'Alice Johnson', avatarUrl: '/avatars/alice.png' },\n  { id: 'u2', name: 'Bob Smith', avatarUrl: '/avatars/bob.png' },\n  { id: 'u3', name: 'Carol Davis', avatarUrl: '/avatars/carol.png' },\n  { id: 'u4', name: 'David Wilson', avatarUrl: '/avatars/david.png' }\n]\n\nexport function OrganizationNotifications() {\n  const [activeTab, setActiveTab] = useState('all')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [filterType, setFilterType] = useState<string>('all')\n  const [filterPriority, setFilterPriority] = useState<string>('all')\n  const [composeDialogOpen, setComposeDialogOpen] = useState(false)\n  const [notificationList, setNotificationList] = useState(notifications)\n  const [settings, setSettings] = useState<NotificationSettings>({\n    email: {\n      projectUpdates: true,\n      taskAssignments: true,\n      teamInvitations: true,\n      mentions: true,\n      weeklyDigest: false,\n      systemUpdates: true\n    },\n    push: {\n      projectUpdates: true,\n      taskAssignments: true,\n      teamInvitations: false,\n      mentions: true,\n      systemUpdates: true\n    },\n    frequency: 'instant'\n  })\n\n  // Filter notifications based on tab and filters\n  const filteredNotifications = notificationList.filter(notification => {\n    // Tab filtering\n    if (activeTab === 'unread' && notification.read) return false\n    if (activeTab === 'mentions' && notification.type !== 'mention') return false\n    if (activeTab === 'projects' && !['project', 'task'].includes(notification.type)) return false\n\n    // Search filtering\n    const matchesSearch = notification.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         notification.message.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         (notification.sender?.toLowerCase().includes(searchTerm.toLowerCase()) ?? false)\n\n    // Type filtering\n    const matchesType = filterType === 'all' || notification.type === filterType\n\n    // Priority filtering\n    const matchesPriority = filterPriority === 'all' || notification.priority === filterPriority\n\n    return matchesSearch && matchesType && matchesPriority\n  })\n\n  const getNotificationIcon = (type: string) => {\n    switch (type) {\n      case 'project':\n        return <FolderOpen className=\"h-5 w-5 text-blue-500\" />\n      case 'task':\n        return <CheckCircle className=\"h-5 w-5 text-green-500\" />\n      case 'team':\n        return <Users className=\"h-5 w-5 text-purple-500\" />\n      case 'mention':\n        return <MessageSquare className=\"h-5 w-5 text-orange-500\" />\n      case 'system':\n        return <AlertCircle className=\"h-5 w-5 text-red-500\" />\n      default:\n        return <Bell className=\"h-5 w-5 text-gray-500\" />\n    }\n  }\n\n  const getPriorityBadge = (priority: string) => {\n    switch (priority) {\n      case 'urgent':\n        return <Badge variant=\"destructive\">Urgent</Badge>\n      case 'high':\n        return <Badge variant=\"default\" className=\"bg-red-100 text-red-800\">High</Badge>\n      case 'medium':\n        return <Badge variant=\"default\" className=\"bg-yellow-100 text-yellow-800\">Medium</Badge>\n      case 'low':\n        return <Badge variant=\"secondary\">Low</Badge>\n      default:\n        return <Badge variant=\"secondary\">{priority}</Badge>\n    }\n  }\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString)\n    const now = new Date()\n    const diffInHours = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60))\n\n    if (diffInHours < 1) return 'Just now'\n    if (diffInHours < 24) return `${diffInHours}h ago`\n    if (diffInHours < 48) return 'Yesterday'\n    return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' })\n  }\n\n  const markAsRead = (notificationId: string) => {\n    setNotificationList(prev => \n      prev.map(n => n.id === notificationId ? { ...n, read: true } : n)\n    )\n  }\n\n  const markAllAsRead = () => {\n    setNotificationList(prev => prev.map(n => ({ ...n, read: true })))\n  }\n\n  const deleteNotification = (notificationId: string) => {\n    setNotificationList(prev => prev.filter(n => n.id !== notificationId))\n  }\n\n  const getInitials = (name: string) => {\n    return name.split(' ').map(n => n[0]).join('').toUpperCase().slice(0, 2)\n  }\n\n  const unreadCount = notificationList.filter(n => !n.read).length\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Notification Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"p-2 bg-blue-100 rounded-lg\">\n                <Bell className=\"h-6 w-6 text-blue-600\" />\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">Total Notifications</p>\n                <p className=\"text-2xl font-bold\">{notificationList.length}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"p-2 bg-red-100 rounded-lg\">\n                <AlertCircle className=\"h-6 w-6 text-red-600\" />\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">Unread</p>\n                <p className=\"text-2xl font-bold\">{unreadCount}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"p-2 bg-orange-100 rounded-lg\">\n                <MessageSquare className=\"h-6 w-6 text-orange-600\" />\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">Mentions</p>\n                <p className=\"text-2xl font-bold\">{notificationList.filter(n => n.type === 'mention').length}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"p-2 bg-purple-100 rounded-lg\">\n                <Settings className=\"h-6 w-6 text-purple-600\" />\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">System</p>\n                <p className=\"text-2xl font-bold\">{notificationList.filter(n => n.type === 'system').length}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Main Notifications Interface */}\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-6\">\n        <div className=\"flex items-center justify-between\">\n          <TabsList>\n            <TabsTrigger value=\"all\" className=\"flex items-center gap-2\">\n              <Bell className=\"h-4 w-4\" />\n              All\n            </TabsTrigger>\n            <TabsTrigger value=\"unread\" className=\"flex items-center gap-2\">\n              <Eye className=\"h-4 w-4\" />\n              Unread ({unreadCount})\n            </TabsTrigger>\n            <TabsTrigger value=\"mentions\" className=\"flex items-center gap-2\">\n              <MessageSquare className=\"h-4 w-4\" />\n              Mentions\n            </TabsTrigger>\n            <TabsTrigger value=\"projects\" className=\"flex items-center gap-2\">\n              <FolderOpen className=\"h-4 w-4\" />\n              Projects\n            </TabsTrigger>\n            <TabsTrigger value=\"settings\" className=\"flex items-center gap-2\">\n              <Settings className=\"h-4 w-4\" />\n              Settings\n            </TabsTrigger>\n          </TabsList>\n\n          <div className=\"flex items-center gap-2\">\n            <Dialog open={composeDialogOpen} onOpenChange={setComposeDialogOpen}>\n              <DialogTrigger asChild>\n                <Button variant=\"outline\">\n                  <Send className=\"h-4 w-4 mr-2\" />\n                  Send Notification\n                </Button>\n              </DialogTrigger>\n              <DialogContent>\n                <DialogHeader>\n                  <DialogTitle>Send Organization Notification</DialogTitle>\n                  <DialogDescription>Send a notification to team members</DialogDescription>\n                </DialogHeader>\n                <div className=\"space-y-4\">\n                  <div>\n                    <Label htmlFor=\"recipients\">Recipients</Label>\n                    <Select>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select recipients\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"all\">All Team Members</SelectItem>\n                        <SelectItem value=\"admins\">Administrators Only</SelectItem>\n                        <SelectItem value=\"project_leads\">Project Leads</SelectItem>\n                        <SelectItem value=\"custom\">Custom Selection</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div>\n                    <Label htmlFor=\"priority\">Priority</Label>\n                    <Select defaultValue=\"medium\">\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"low\">Low</SelectItem>\n                        <SelectItem value=\"medium\">Medium</SelectItem>\n                        <SelectItem value=\"high\">High</SelectItem>\n                        <SelectItem value=\"urgent\">Urgent</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div>\n                    <Label htmlFor=\"title\">Title</Label>\n                    <Input id=\"title\" placeholder=\"Notification title\" />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"message\">Message</Label>\n                    <Textarea id=\"message\" placeholder=\"Notification message\" rows={3} />\n                  </div>\n                </div>\n                <DialogFooter>\n                  <Button variant=\"outline\" onClick={() => setComposeDialogOpen(false)}>Cancel</Button>\n                  <Button onClick={() => setComposeDialogOpen(false)}>Send Notification</Button>\n                </DialogFooter>\n              </DialogContent>\n            </Dialog>\n            {unreadCount > 0 && (\n              <Button variant=\"outline\" onClick={markAllAsRead}>\n                Mark All Read\n              </Button>\n            )}\n          </div>\n        </div>\n\n        <TabsContent value=\"all\" className=\"space-y-4\">\n          <NotificationList \n            notifications={filteredNotifications}\n            searchTerm={searchTerm}\n            setSearchTerm={setSearchTerm}\n            filterType={filterType}\n            setFilterType={setFilterType}\n            filterPriority={filterPriority}\n            setFilterPriority={setFilterPriority}\n            onMarkAsRead={markAsRead}\n            onDelete={deleteNotification}\n            getNotificationIcon={getNotificationIcon}\n            getPriorityBadge={getPriorityBadge}\n            formatDate={formatDate}\n            getInitials={getInitials}\n          />\n        </TabsContent>\n\n        <TabsContent value=\"unread\" className=\"space-y-4\">\n          <NotificationList \n            notifications={filteredNotifications}\n            searchTerm={searchTerm}\n            setSearchTerm={setSearchTerm}\n            filterType={filterType}\n            setFilterType={setFilterType}\n            filterPriority={filterPriority}\n            setFilterPriority={setFilterPriority}\n            onMarkAsRead={markAsRead}\n            onDelete={deleteNotification}\n            getNotificationIcon={getNotificationIcon}\n            getPriorityBadge={getPriorityBadge}\n            formatDate={formatDate}\n            getInitials={getInitials}\n          />\n        </TabsContent>\n\n        <TabsContent value=\"mentions\" className=\"space-y-4\">\n          <NotificationList \n            notifications={filteredNotifications}\n            searchTerm={searchTerm}\n            setSearchTerm={setSearchTerm}\n            filterType={filterType}\n            setFilterType={setFilterType}\n            filterPriority={filterPriority}\n            setFilterPriority={setFilterPriority}\n            onMarkAsRead={markAsRead}\n            onDelete={deleteNotification}\n            getNotificationIcon={getNotificationIcon}\n            getPriorityBadge={getPriorityBadge}\n            formatDate={formatDate}\n            getInitials={getInitials}\n          />\n        </TabsContent>\n\n        <TabsContent value=\"projects\" className=\"space-y-4\">\n          <NotificationList \n            notifications={filteredNotifications}\n            searchTerm={searchTerm}\n            setSearchTerm={setSearchTerm}\n            filterType={filterType}\n            setFilterType={setFilterType}\n            filterPriority={filterPriority}\n            setFilterPriority={setFilterPriority}\n            onMarkAsRead={markAsRead}\n            onDelete={deleteNotification}\n            getNotificationIcon={getNotificationIcon}\n            getPriorityBadge={getPriorityBadge}\n            formatDate={formatDate}\n            getInitials={getInitials}\n          />\n        </TabsContent>\n\n        <TabsContent value=\"settings\" className=\"space-y-6\">\n          <NotificationSettings settings={settings} setSettings={setSettings} />\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n}\n\n// Notification List Component\ninterface NotificationListProps {\n  notifications: Notification[]\n  searchTerm: string\n  setSearchTerm: (term: string) => void\n  filterType: string\n  setFilterType: (type: string) => void\n  filterPriority: string\n  setFilterPriority: (priority: string) => void\n  onMarkAsRead: (id: string) => void\n  onDelete: (id: string) => void\n  getNotificationIcon: (type: string) => JSX.Element\n  getPriorityBadge: (priority: string) => JSX.Element\n  formatDate: (date: string) => string\n  getInitials: (name: string) => string\n}\n\nfunction NotificationList({\n  notifications,\n  searchTerm,\n  setSearchTerm,\n  filterType,\n  setFilterType,\n  filterPriority,\n  setFilterPriority,\n  onMarkAsRead,\n  onDelete,\n  getNotificationIcon,\n  getPriorityBadge,\n  formatDate,\n  getInitials\n}: NotificationListProps) {\n  return (\n    <Card>\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <CardTitle>Notifications</CardTitle>\n            <CardDescription>Stay updated with organization activities</CardDescription>\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {/* Search and Filters */}\n        <div className=\"flex items-center gap-4\">\n          <div className=\"relative flex-1\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-4 w-4\" />\n            <Input\n              placeholder=\"Search notifications...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10\"\n            />\n          </div>\n          <Select value={filterType} onValueChange={setFilterType}>\n            <SelectTrigger className=\"w-40\">\n              <Filter className=\"h-4 w-4 mr-2\" />\n              <SelectValue placeholder=\"Type\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">All Types</SelectItem>\n              <SelectItem value=\"project\">Project</SelectItem>\n              <SelectItem value=\"task\">Task</SelectItem>\n              <SelectItem value=\"team\">Team</SelectItem>\n              <SelectItem value=\"mention\">Mention</SelectItem>\n              <SelectItem value=\"system\">System</SelectItem>\n            </SelectContent>\n          </Select>\n          <Select value={filterPriority} onValueChange={setFilterPriority}>\n            <SelectTrigger className=\"w-40\">\n              <Filter className=\"h-4 w-4 mr-2\" />\n              <SelectValue placeholder=\"Priority\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">All Priority</SelectItem>\n              <SelectItem value=\"urgent\">Urgent</SelectItem>\n              <SelectItem value=\"high\">High</SelectItem>\n              <SelectItem value=\"medium\">Medium</SelectItem>\n              <SelectItem value=\"low\">Low</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n\n        {/* Notifications List */}\n        <div className=\"space-y-2\">\n          {notifications.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <Bell className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n              <h3 className=\"text-lg font-semibold mb-2\">No notifications</h3>\n              <p className=\"text-muted-foreground\">\n                You're all caught up! No new notifications.\n              </p>\n            </div>\n          ) : (\n            notifications.map((notification) => (\n              <div\n                key={notification.id}\n                className={`p-4 border rounded-lg hover:bg-muted/50 transition-colors ${\n                  !notification.read ? 'border-blue-200 bg-blue-50/50' : ''\n                }`}\n              >\n                <div className=\"flex items-start gap-4\">\n                  <div className=\"mt-1\">\n                    {getNotificationIcon(notification.type)}\n                  </div>\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-start justify-between gap-2\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center gap-2 mb-1\">\n                          <h4 className={`font-medium ${!notification.read ? 'font-semibold' : ''}`}>\n                            {notification.title}\n                          </h4>\n                          {getPriorityBadge(notification.priority)}\n                          {!notification.read && (\n                            <div className=\"w-2 h-2 bg-blue-600 rounded-full\"></div>\n                          )}\n                        </div>\n                        <p className=\"text-sm text-muted-foreground mb-2\">\n                          {notification.message}\n                        </p>\n                        <div className=\"flex items-center gap-3 text-xs text-muted-foreground\">\n                          <div className=\"flex items-center gap-1\">\n                            <Clock className=\"h-3 w-3\" />\n                            {formatDate(notification.createdAt)}\n                          </div>\n                          {notification.sender && (\n                            <div>\n                              From: {notification.sender}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        {!notification.read && (\n                          <Button\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            onClick={() => onMarkAsRead(notification.id)}\n                          >\n                            <Eye className=\"h-4 w-4\" />\n                          </Button>\n                        )}\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => onDelete(notification.id)}\n                          className=\"text-red-600 hover:text-red-700\"\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\n// Notification Settings Component\ninterface NotificationSettingsProps {\n  settings: NotificationSettings\n  setSettings: (settings: NotificationSettings) => void\n}\n\nfunction NotificationSettings({ settings, setSettings }: NotificationSettingsProps) {\n  const updateEmailSetting = (key: keyof NotificationSettings['email'], value: boolean) => {\n    setSettings({\n      ...settings,\n      email: { ...settings.email, [key]: value }\n    })\n  }\n\n  const updatePushSetting = (key: keyof NotificationSettings['push'], value: boolean) => {\n    setSettings({\n      ...settings,\n      push: { ...settings.push, [key]: value }\n    })\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Mail className=\"h-5 w-5\" />\n            Email Notifications\n          </CardTitle>\n          <CardDescription>Configure when you receive email notifications</CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <Label htmlFor=\"email-project\">Project Updates</Label>\n              <p className=\"text-sm text-muted-foreground\">Get notified when projects are updated</p>\n            </div>\n            <Switch\n              id=\"email-project\"\n              checked={settings.email.projectUpdates}\n              onCheckedChange={(value) => updateEmailSetting('projectUpdates', value)}\n            />\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <Label htmlFor=\"email-tasks\">Task Assignments</Label>\n              <p className=\"text-sm text-muted-foreground\">Get notified when tasks are assigned to you</p>\n            </div>\n            <Switch\n              id=\"email-tasks\"\n              checked={settings.email.taskAssignments}\n              onCheckedChange={(value) => updateEmailSetting('taskAssignments', value)}\n            />\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <Label htmlFor=\"email-team\">Team Invitations</Label>\n              <p className=\"text-sm text-muted-foreground\">Get notified about team invitations and updates</p>\n            </div>\n            <Switch\n              id=\"email-team\"\n              checked={settings.email.teamInvitations}\n              onCheckedChange={(value) => updateEmailSetting('teamInvitations', value)}\n            />\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <Label htmlFor=\"email-mentions\">Mentions</Label>\n              <p className=\"text-sm text-muted-foreground\">Get notified when someone mentions you</p>\n            </div>\n            <Switch\n              id=\"email-mentions\"\n              checked={settings.email.mentions}\n              onCheckedChange={(value) => updateEmailSetting('mentions', value)}\n            />\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <Label htmlFor=\"email-digest\">Weekly Digest</Label>\n              <p className=\"text-sm text-muted-foreground\">Receive a weekly summary of activities</p>\n            </div>\n            <Switch\n              id=\"email-digest\"\n              checked={settings.email.weeklyDigest}\n              onCheckedChange={(value) => updateEmailSetting('weeklyDigest', value)}\n            />\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <Label htmlFor=\"email-system\">System Updates</Label>\n              <p className=\"text-sm text-muted-foreground\">Get notified about system maintenance and updates</p>\n            </div>\n            <Switch\n              id=\"email-system\"\n              checked={settings.email.systemUpdates}\n              onCheckedChange={(value) => updateEmailSetting('systemUpdates', value)}\n            />\n          </div>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Bell className=\"h-5 w-5\" />\n            Push Notifications\n          </CardTitle>\n          <CardDescription>Configure browser and mobile push notifications</CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <Label htmlFor=\"push-project\">Project Updates</Label>\n              <p className=\"text-sm text-muted-foreground\">Browser notifications for project updates</p>\n            </div>\n            <Switch\n              id=\"push-project\"\n              checked={settings.push.projectUpdates}\n              onCheckedChange={(value) => updatePushSetting('projectUpdates', value)}\n            />\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <Label htmlFor=\"push-tasks\">Task Assignments</Label>\n              <p className=\"text-sm text-muted-foreground\">Browser notifications for task assignments</p>\n            </div>\n            <Switch\n              id=\"push-tasks\"\n              checked={settings.push.taskAssignments}\n              onCheckedChange={(value) => updatePushSetting('taskAssignments', value)}\n            />\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <Label htmlFor=\"push-team\">Team Invitations</Label>\n              <p className=\"text-sm text-muted-foreground\">Browser notifications for team activities</p>\n            </div>\n            <Switch\n              id=\"push-team\"\n              checked={settings.push.teamInvitations}\n              onCheckedChange={(value) => updatePushSetting('teamInvitations', value)}\n            />\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <Label htmlFor=\"push-mentions\">Mentions</Label>\n              <p className=\"text-sm text-muted-foreground\">Browser notifications for mentions</p>\n            </div>\n            <Switch\n              id=\"push-mentions\"\n              checked={settings.push.mentions}\n              onCheckedChange={(value) => updatePushSetting('mentions', value)}\n            />\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <Label htmlFor=\"push-system\">System Updates</Label>\n              <p className=\"text-sm text-muted-foreground\">Browser notifications for system updates</p>\n            </div>\n            <Switch\n              id=\"push-system\"\n              checked={settings.push.systemUpdates}\n              onCheckedChange={(value) => updatePushSetting('systemUpdates', value)}\n            />\n          </div>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Notification Frequency</CardTitle>\n          <CardDescription>Choose how often you receive bundled notifications</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Select\n            value={settings.frequency}\n            onValueChange={(value: 'instant' | 'hourly' | 'daily' | 'weekly') =>\n              setSettings({ ...settings, frequency: value })\n            }\n          >\n            <SelectTrigger>\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"instant\">Instant</SelectItem>\n              <SelectItem value=\"hourly\">Hourly</SelectItem>\n              <SelectItem value=\"daily\">Daily</SelectItem>\n              <SelectItem value=\"weekly\">Weekly</SelectItem>\n            </SelectContent>\n          </Select>\n          <p className=\"text-sm text-muted-foreground mt-2\">\n            {settings.frequency === 'instant' && 'Receive notifications immediately as they happen'}\n            {settings.frequency === 'hourly' && 'Receive bundled notifications every hour'}\n            {settings.frequency === 'daily' && 'Receive a daily digest of notifications'}\n            {settings.frequency === 'weekly' && 'Receive a weekly summary of notifications'}\n          </p>\n        </CardContent>\n      </Card>\n\n      <div className=\"flex justify-end\">\n        <Button>\n          Save Settings\n        </Button>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5764, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/organization/organization-plan.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Progress } from '@/components/ui/progress'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table'\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'\nimport { Label } from '@/components/ui/label'\nimport { Input } from '@/components/ui/input'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { \n  CreditCard, \n  Users, \n  Database, \n  Zap, \n  Shield, \n  Download, \n  Calendar, \n  TrendingUp, \n  AlertCircle,\n  CheckCircle,\n  Crown,\n  Star,\n  ArrowUpCircle,\n  FileText,\n  Receipt,\n  Clock\n} from 'lucide-react'\n\n// Plan and billing interfaces\ninterface Plan {\n  id: string\n  name: string\n  price: number\n  interval: 'month' | 'year'\n  features: string[]\n  limits: {\n    members: number | 'unlimited'\n    projects: number | 'unlimited'\n    storage: string\n    apiCalls: number | 'unlimited'\n  }\n  popular?: boolean\n}\n\ninterface BillingHistory {\n  id: string\n  date: string\n  description: string\n  amount: number\n  status: 'paid' | 'pending' | 'failed'\n  invoiceUrl?: string\n}\n\ninterface UsageStats {\n  members: { used: number; limit: number | 'unlimited' }\n  projects: { used: number; limit: number | 'unlimited' }\n  storage: { used: number; limit: number; unit: string }\n  apiCalls: { used: number; limit: number | 'unlimited' }\n}\n\n// Available plans\nconst plans: Plan[] = [\n  {\n    id: 'starter',\n    name: 'Starter',\n    price: 0,\n    interval: 'month',\n    features: [\n      'Up to 5 team members',\n      '3 projects',\n      '1GB storage',\n      'Basic support',\n      'Core features'\n    ],\n    limits: {\n      members: 5,\n      projects: 3,\n      storage: '1GB',\n      apiCalls: 1000\n    }\n  },\n  {\n    id: 'professional',\n    name: 'Professional',\n    price: 29,\n    interval: 'month',\n    features: [\n      'Up to 25 team members',\n      'Unlimited projects',\n      '50GB storage',\n      'Priority support',\n      'Advanced analytics',\n      'Custom integrations',\n      'Team collaboration tools'\n    ],\n    limits: {\n      members: 25,\n      projects: 'unlimited',\n      storage: '50GB',\n      apiCalls: 10000\n    },\n    popular: true\n  },\n  {\n    id: 'enterprise',\n    name: 'Enterprise',\n    price: 99,\n    interval: 'month',\n    features: [\n      'Unlimited team members',\n      'Unlimited projects',\n      '500GB storage',\n      '24/7 dedicated support',\n      'Advanced security',\n      'Custom branding',\n      'SSO integration',\n      'Advanced reporting',\n      'API access',\n      'Custom workflows'\n    ],\n    limits: {\n      members: 'unlimited',\n      projects: 'unlimited',\n      storage: '500GB',\n      apiCalls: 'unlimited'\n    }\n  }\n]\n\n// Current usage stats\nconst currentUsage: UsageStats = {\n  members: { used: 12, limit: 25 },\n  projects: { used: 8, limit: 'unlimited' },\n  storage: { used: 24, limit: 50, unit: 'GB' },\n  apiCalls: { used: 2847, limit: 10000 }\n}\n\n// Billing history\nconst billingHistory: BillingHistory[] = [\n  {\n    id: 'inv_001',\n    date: '2025-09-01',\n    description: 'Professional Plan - Monthly',\n    amount: 29.00,\n    status: 'paid',\n    invoiceUrl: '/invoices/inv_001.pdf'\n  },\n  {\n    id: 'inv_002',\n    date: '2025-08-01',\n    description: 'Professional Plan - Monthly',\n    amount: 29.00,\n    status: 'paid',\n    invoiceUrl: '/invoices/inv_002.pdf'\n  },\n  {\n    id: 'inv_003',\n    date: '2025-07-01',\n    description: 'Professional Plan - Monthly',\n    amount: 29.00,\n    status: 'paid',\n    invoiceUrl: '/invoices/inv_003.pdf'\n  },\n  {\n    id: 'inv_004',\n    date: '2025-06-01',\n    description: 'Starter Plan - Monthly',\n    amount: 0.00,\n    status: 'paid'\n  }\n]\n\nexport function OrganizationPlan() {\n  const [currentPlan] = useState('professional')\n  const [billingInterval, setBillingInterval] = useState<'month' | 'year'>('month')\n  const [upgradeDialogOpen, setUpgradeDialogOpen] = useState(false)\n  const [selectedPlan, setSelectedPlan] = useState<string>('')\n\n  const getCurrentPlan = () => plans.find(plan => plan.id === currentPlan)\n  const currentPlanData = getCurrentPlan()\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 2\n    }).format(amount)\n  }\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    })\n  }\n\n  const getUsagePercentage = (used: number, limit: number | 'unlimited') => {\n    if (limit === 'unlimited') return 0\n    return Math.round((used / limit) * 100)\n  }\n\n  const getUsageColor = (percentage: number) => {\n    if (percentage >= 90) return 'bg-red-500'\n    if (percentage >= 75) return 'bg-yellow-500'\n    return 'bg-green-500'\n  }\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'paid':\n        return <Badge variant=\"default\" className=\"bg-green-100 text-green-800\">Paid</Badge>\n      case 'pending':\n        return <Badge variant=\"default\" className=\"bg-yellow-100 text-yellow-800\">Pending</Badge>\n      case 'failed':\n        return <Badge variant=\"destructive\">Failed</Badge>\n      default:\n        return <Badge variant=\"secondary\">{status}</Badge>\n    }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <Tabs defaultValue=\"current\" className=\"space-y-6\">\n        <TabsList>\n          <TabsTrigger value=\"current\">Current Plan</TabsTrigger>\n          <TabsTrigger value=\"usage\">Usage & Limits</TabsTrigger>\n          <TabsTrigger value=\"billing\">Billing History</TabsTrigger>\n          <TabsTrigger value=\"plans\">All Plans</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"current\" className=\"space-y-6\">\n          {/* Current Plan Overview */}\n          <Card>\n            <CardHeader>\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <Crown className=\"h-5 w-5 text-yellow-500\" />\n                    Current Plan: {currentPlanData?.name}\n                  </CardTitle>\n                  <CardDescription>\n                    Your organization is currently on the {currentPlanData?.name} plan\n                  </CardDescription>\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"text-2xl font-bold\">\n                    {formatCurrency(currentPlanData?.price || 0)}\n                  </div>\n                  <div className=\"text-sm text-muted-foreground\">\n                    per {currentPlanData?.interval}\n                  </div>\n                </div>\n              </div>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <h4 className=\"font-semibold mb-3\">Plan Features</h4>\n                  <div className=\"space-y-2\">\n                    {currentPlanData?.features.map((feature, index) => (\n                      <div key={index} className=\"flex items-center gap-2\">\n                        <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                        <span className=\"text-sm\">{feature}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <div>\n                  <h4 className=\"font-semibold mb-3\">Plan Limits</h4>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm\">Team Members</span>\n                      <span className=\"text-sm font-medium\">\n                        {currentUsage.members.used} / {currentPlanData?.limits.members}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm\">Projects</span>\n                      <span className=\"text-sm font-medium\">\n                        {currentUsage.projects.used} / {currentPlanData?.limits.projects === 'unlimited' ? '∞' : currentPlanData?.limits.projects}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm\">Storage</span>\n                      <span className=\"text-sm font-medium\">\n                        {currentUsage.storage.used}{currentUsage.storage.unit} / {currentPlanData?.limits.storage}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm\">API Calls</span>\n                      <span className=\"text-sm font-medium\">\n                        {currentUsage.apiCalls.used.toLocaleString()} / {currentPlanData?.limits.apiCalls === 'unlimited' ? '∞' : currentPlanData?.limits.apiCalls.toLocaleString()}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex items-center gap-4 pt-4 border-t\">\n                <Button onClick={() => setUpgradeDialogOpen(true)}>\n                  <ArrowUpCircle className=\"h-4 w-4 mr-2\" />\n                  Upgrade Plan\n                </Button>\n                <Button variant=\"outline\">\n                  <Download className=\"h-4 w-4 mr-2\" />\n                  Download Invoice\n                </Button>\n                <Button variant=\"outline\">\n                  <CreditCard className=\"h-4 w-4 mr-2\" />\n                  Update Payment Method\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Next Billing */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Calendar className=\"h-5 w-5\" />\n                Next Billing\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"font-medium\">Next billing date: October 12, 2025</p>\n                  <p className=\"text-sm text-muted-foreground\">\n                    You will be charged {formatCurrency(currentPlanData?.price || 0)} for the {currentPlanData?.name} plan\n                  </p>\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"text-xl font-bold\">{formatCurrency(currentPlanData?.price || 0)}</div>\n                  <div className=\"text-sm text-muted-foreground\">Auto-renewal</div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"usage\" className=\"space-y-6\">\n          {/* Usage Statistics */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <div className=\"flex items-center gap-2\">\n                    <Users className=\"h-5 w-5 text-blue-500\" />\n                    <span className=\"font-medium\">Team Members</span>\n                  </div>\n                  <span className=\"text-sm text-muted-foreground\">\n                    {currentUsage.members.used} / {currentUsage.members.limit}\n                  </span>\n                </div>\n                <Progress \n                  value={getUsagePercentage(currentUsage.members.used, currentUsage.members.limit)} \n                  className=\"h-2\"\n                />\n                <p className=\"text-xs text-muted-foreground mt-1\">\n                  {getUsagePercentage(currentUsage.members.used, currentUsage.members.limit)}% used\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <div className=\"flex items-center gap-2\">\n                    <Database className=\"h-5 w-5 text-green-500\" />\n                    <span className=\"font-medium\">Storage</span>\n                  </div>\n                  <span className=\"text-sm text-muted-foreground\">\n                    {currentUsage.storage.used}{currentUsage.storage.unit} / {currentUsage.storage.limit}{currentUsage.storage.unit}\n                  </span>\n                </div>\n                <Progress \n                  value={getUsagePercentage(currentUsage.storage.used, currentUsage.storage.limit)} \n                  className=\"h-2\"\n                />\n                <p className=\"text-xs text-muted-foreground mt-1\">\n                  {getUsagePercentage(currentUsage.storage.used, currentUsage.storage.limit)}% used\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <div className=\"flex items-center gap-2\">\n                    <Zap className=\"h-5 w-5 text-purple-500\" />\n                    <span className=\"font-medium\">API Calls</span>\n                  </div>\n                  <span className=\"text-sm text-muted-foreground\">\n                    {currentUsage.apiCalls.used.toLocaleString()} / {currentUsage.apiCalls.limit === 'unlimited' ? '∞' : currentUsage.apiCalls.limit.toLocaleString()}\n                  </span>\n                </div>\n                <Progress \n                  value={currentUsage.apiCalls.limit === 'unlimited' ? 0 : getUsagePercentage(currentUsage.apiCalls.used, currentUsage.apiCalls.limit as number)} \n                  className=\"h-2\"\n                />\n                <p className=\"text-xs text-muted-foreground mt-1\">\n                  {currentUsage.apiCalls.limit === 'unlimited' ? 'Unlimited' : `${getUsagePercentage(currentUsage.apiCalls.used, currentUsage.apiCalls.limit as number)}% used`}\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <div className=\"flex items-center gap-2\">\n                    <TrendingUp className=\"h-5 w-5 text-orange-500\" />\n                    <span className=\"font-medium\">Projects</span>\n                  </div>\n                  <span className=\"text-sm text-muted-foreground\">\n                    {currentUsage.projects.used} / {currentUsage.projects.limit === 'unlimited' ? '∞' : currentUsage.projects.limit}\n                  </span>\n                </div>\n                <Progress \n                  value={currentUsage.projects.limit === 'unlimited' ? 0 : getUsagePercentage(currentUsage.projects.used, currentUsage.projects.limit as number)} \n                  className=\"h-2\"\n                />\n                <p className=\"text-xs text-muted-foreground mt-1\">\n                  {currentUsage.projects.limit === 'unlimited' ? 'Unlimited' : `${getUsagePercentage(currentUsage.projects.used, currentUsage.projects.limit as number)}% used`}\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Usage Warnings */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <AlertCircle className=\"h-5 w-5 text-yellow-500\" />\n                Usage Alerts\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3\">\n                {getUsagePercentage(currentUsage.storage.used, currentUsage.storage.limit) >= 80 && (\n                  <div className=\"flex items-center gap-3 p-3 bg-yellow-50 border border-yellow-200 rounded-lg\">\n                    <AlertCircle className=\"h-5 w-5 text-yellow-600\" />\n                    <div>\n                      <p className=\"font-medium text-yellow-800\">Storage usage is high</p>\n                      <p className=\"text-sm text-yellow-700\">\n                        You're using {getUsagePercentage(currentUsage.storage.used, currentUsage.storage.limit)}% of your storage. Consider upgrading your plan.\n                      </p>\n                    </div>\n                  </div>\n                )}\n                {getUsagePercentage(currentUsage.members.used, currentUsage.members.limit) >= 80 && (\n                  <div className=\"flex items-center gap-3 p-3 bg-yellow-50 border border-yellow-200 rounded-lg\">\n                    <AlertCircle className=\"h-5 w-5 text-yellow-600\" />\n                    <div>\n                      <p className=\"font-medium text-yellow-800\">Team member limit approaching</p>\n                      <p className=\"text-sm text-yellow-700\">\n                        You're using {getUsagePercentage(currentUsage.members.used, currentUsage.members.limit)}% of your team member slots.\n                      </p>\n                    </div>\n                  </div>\n                )}\n                {getUsagePercentage(currentUsage.storage.used, currentUsage.storage.limit) < 80 && \n                 getUsagePercentage(currentUsage.members.used, currentUsage.members.limit) < 80 && (\n                  <div className=\"text-center py-8\">\n                    <CheckCircle className=\"h-12 w-12 text-green-500 mx-auto mb-3\" />\n                    <h3 className=\"font-semibold text-green-800\">Everything looks good!</h3>\n                    <p className=\"text-sm text-green-600\">Your usage is well within limits.</p>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"billing\" className=\"space-y-6\">\n          {/* Billing History */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Receipt className=\"h-5 w-5\" />\n                Billing History\n              </CardTitle>\n              <CardDescription>View and download your past invoices</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>Date</TableHead>\n                    <TableHead>Description</TableHead>\n                    <TableHead>Amount</TableHead>\n                    <TableHead>Status</TableHead>\n                    <TableHead className=\"w-[100px]\">Actions</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {billingHistory.map((invoice) => (\n                    <TableRow key={invoice.id}>\n                      <TableCell>{formatDate(invoice.date)}</TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{formatCurrency(invoice.amount)}</TableCell>\n                      <TableCell>{getStatusBadge(invoice.status)}</TableCell>\n                      <TableCell>\n                        {invoice.invoiceUrl && (\n                          <Button variant=\"ghost\" size=\"sm\">\n                            <Download className=\"h-4 w-4\" />\n                          </Button>\n                        )}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </CardContent>\n          </Card>\n\n          {/* Payment Method */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <CreditCard className=\"h-5 w-5\" />\n                Payment Method\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-3\">\n                  <div className=\"p-2 bg-blue-100 rounded\">\n                    <CreditCard className=\"h-6 w-6 text-blue-600\" />\n                  </div>\n                  <div>\n                    <p className=\"font-medium\">•••• •••• •••• 1234</p>\n                    <p className=\"text-sm text-muted-foreground\">Expires 12/2026</p>\n                  </div>\n                </div>\n                <Button variant=\"outline\">Update</Button>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"plans\" className=\"space-y-6\">\n          {/* Billing Toggle */}\n          <div className=\"flex items-center justify-center gap-4\">\n            <span className={billingInterval === 'month' ? 'font-medium' : 'text-muted-foreground'}>Monthly</span>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => setBillingInterval(billingInterval === 'month' ? 'year' : 'month')}\n            >\n              {billingInterval === 'month' ? 'Switch to Yearly' : 'Switch to Monthly'}\n            </Button>\n            <span className={billingInterval === 'year' ? 'font-medium' : 'text-muted-foreground'}>\n              Yearly\n              <Badge variant=\"secondary\" className=\"ml-2\">Save 20%</Badge>\n            </span>\n          </div>\n\n          {/* Plans Grid */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            {plans.map((plan) => {\n              const price = billingInterval === 'year' ? plan.price * 12 * 0.8 : plan.price\n              const isCurrentPlan = plan.id === currentPlan\n\n              return (\n                <Card key={plan.id} className={`relative ${plan.popular ? 'border-blue-500 shadow-lg' : ''} ${isCurrentPlan ? 'ring-2 ring-green-500' : ''}`}>\n                  {plan.popular && (\n                    <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2\">\n                      <Badge className=\"bg-blue-500\">Most Popular</Badge>\n                    </div>\n                  )}\n                  {isCurrentPlan && (\n                    <div className=\"absolute -top-3 right-4\">\n                      <Badge className=\"bg-green-500\">Current Plan</Badge>\n                    </div>\n                  )}\n                  <CardHeader className=\"text-center\">\n                    <CardTitle className=\"flex items-center justify-center gap-2\">\n                      {plan.name}\n                      {plan.id === 'enterprise' && <Crown className=\"h-5 w-5 text-yellow-500\" />}\n                    </CardTitle>\n                    <div className=\"text-3xl font-bold\">\n                      {formatCurrency(price)}\n                      <span className=\"text-sm font-normal text-muted-foreground\">\n                        /{billingInterval}\n                      </span>\n                    </div>\n                    {billingInterval === 'year' && plan.price > 0 && (\n                      <div className=\"text-sm text-green-600\">\n                        Save {formatCurrency(plan.price * 12 * 0.2)} per year\n                      </div>\n                    )}\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                      {plan.features.map((feature, index) => (\n                        <div key={index} className=\"flex items-center gap-2\">\n                          <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                          <span className=\"text-sm\">{feature}</span>\n                        </div>\n                      ))}\n                    </div>\n                    <div className=\"pt-4 border-t\">\n                      <div className=\"space-y-2 text-sm\">\n                        <div className=\"flex justify-between\">\n                          <span>Team Members:</span>\n                          <span className=\"font-medium\">{plan.limits.members}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Projects:</span>\n                          <span className=\"font-medium\">{plan.limits.projects}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Storage:</span>\n                          <span className=\"font-medium\">{plan.limits.storage}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>API Calls:</span>\n                          <span className=\"font-medium\">{plan.limits.apiCalls}</span>\n                        </div>\n                      </div>\n                    </div>\n                    <Button \n                      className=\"w-full\" \n                      variant={isCurrentPlan ? 'secondary' : 'default'}\n                      disabled={isCurrentPlan}\n                      onClick={() => {\n                        setSelectedPlan(plan.id)\n                        setUpgradeDialogOpen(true)\n                      }}\n                    >\n                      {isCurrentPlan ? 'Current Plan' : plan.price === 0 ? 'Downgrade' : 'Upgrade'}\n                    </Button>\n                  </CardContent>\n                </Card>\n              )\n            })}\n          </div>\n        </TabsContent>\n      </Tabs>\n\n      {/* Upgrade Dialog */}\n      <Dialog open={upgradeDialogOpen} onOpenChange={setUpgradeDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Confirm Plan Change</DialogTitle>\n            <DialogDescription>\n              {selectedPlan && plans.find(p => p.id === selectedPlan)?.name && (\n                <>You are about to change to the {plans.find(p => p.id === selectedPlan)?.name} plan.</>\n              )}\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div className=\"p-4 bg-muted rounded-lg\">\n              <div className=\"flex justify-between items-center\">\n                <span>New Plan:</span>\n                <span className=\"font-medium\">\n                  {selectedPlan && plans.find(p => p.id === selectedPlan)?.name}\n                </span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span>Price:</span>\n                <span className=\"font-medium\">\n                  {selectedPlan && formatCurrency(\n                    billingInterval === 'year' \n                      ? (plans.find(p => p.id === selectedPlan)?.price || 0) * 12 * 0.8\n                      : plans.find(p => p.id === selectedPlan)?.price || 0\n                  )}\n                  /{billingInterval}\n                </span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span>Next Billing:</span>\n                <span className=\"font-medium\">October 12, 2025</span>\n              </div>\n            </div>\n          </div>\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setUpgradeDialogOpen(false)}>\n              Cancel\n            </Button>\n            <Button onClick={() => setUpgradeDialogOpen(false)}>\n              Confirm Change\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7792, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/organization/organization-settings.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Switch } from '@/components/ui/switch'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Badge } from '@/components/ui/badge'\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'\nimport { \n  Building2, \n  Globe, \n  Shield, \n  Key, \n  Database, \n  Trash2, \n  AlertTriangle,\n  Upload,\n  Eye,\n  EyeOff,\n  Copy,\n  Download,\n  RotateCcw,\n  Settings,\n  Users,\n  Lock,\n  Mail,\n  Phone,\n  MapPin\n} from 'lucide-react'\n\n// Organization settings interface\ninterface OrganizationSettings {\n  general: {\n    name: string\n    description: string\n    website: string\n    logo: string\n    industry: string\n    size: string\n    location: string\n    timezone: string\n    language: string\n  }\n  security: {\n    twoFactorRequired: boolean\n    ssoEnabled: boolean\n    sessionTimeout: number\n    passwordPolicy: {\n      minLength: number\n      requireUppercase: boolean\n      requireLowercase: boolean\n      requireNumbers: boolean\n      requireSpecialChars: boolean\n    }\n    ipWhitelist: string[]\n  }\n  privacy: {\n    dataRetention: number\n    anonymizeData: boolean\n    allowAnalytics: boolean\n    shareUsageData: boolean\n  }\n  integrations: {\n    slackEnabled: boolean\n    emailNotifications: boolean\n    webhookUrl: string\n    apiKeys: Array<{\n      id: string\n      name: string\n      key: string\n      permissions: string[]\n      createdAt: string\n      lastUsed?: string\n    }>\n  }\n}\n\n// Dummy organization settings\nconst initialSettings: OrganizationSettings = {\n  general: {\n    name: 'Acme Corporation',\n    description: 'Leading provider of innovative project management solutions',\n    website: 'https://acme-corp.com',\n    logo: '/logos/acme-logo.png',\n    industry: 'Technology',\n    size: '11-50',\n    location: 'San Francisco, CA',\n    timezone: 'America/Los_Angeles',\n    language: 'en'\n  },\n  security: {\n    twoFactorRequired: true,\n    ssoEnabled: false,\n    sessionTimeout: 480,\n    passwordPolicy: {\n      minLength: 8,\n      requireUppercase: true,\n      requireLowercase: true,\n      requireNumbers: true,\n      requireSpecialChars: false\n    },\n    ipWhitelist: ['192.168.1.0/24', '10.0.0.0/8']\n  },\n  privacy: {\n    dataRetention: 365,\n    anonymizeData: true,\n    allowAnalytics: true,\n    shareUsageData: false\n  },\n  integrations: {\n    slackEnabled: true,\n    emailNotifications: true,\n    webhookUrl: 'https://hooks.acme-corp.com/droplog',\n    apiKeys: [\n      {\n        id: 'ak_1',\n        name: 'Production API',\n        key: 'sk_live_abc123...',\n        permissions: ['read', 'write'],\n        createdAt: '2025-08-15T10:00:00Z',\n        lastUsed: '2025-09-12T08:30:00Z'\n      },\n      {\n        id: 'ak_2',\n        name: 'Analytics Integration',\n        key: 'sk_test_def456...',\n        permissions: ['read'],\n        createdAt: '2025-09-01T14:20:00Z',\n        lastUsed: '2025-09-10T16:45:00Z'\n      }\n    ]\n  }\n}\n\nexport function OrganizationSettings() {\n  const [settings, setSettings] = useState<OrganizationSettings>(initialSettings)\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false)\n  const [showApiKeys, setShowApiKeys] = useState<Record<string, boolean>>({})\n  const [newApiKeyDialogOpen, setNewApiKeyDialogOpen] = useState(false)\n\n  const updateGeneralSetting = (key: keyof OrganizationSettings['general'], value: string) => {\n    setSettings(prev => ({\n      ...prev,\n      general: { ...prev.general, [key]: value }\n    }))\n  }\n\n  const updateSecuritySetting = (key: keyof OrganizationSettings['security'], value: any) => {\n    setSettings(prev => ({\n      ...prev,\n      security: { ...prev.security, [key]: value }\n    }))\n  }\n\n  const updatePrivacySetting = (key: keyof OrganizationSettings['privacy'], value: any) => {\n    setSettings(prev => ({\n      ...prev,\n      privacy: { ...prev.privacy, [key]: value }\n    }))\n  }\n\n  const updateIntegrationSetting = (key: keyof OrganizationSettings['integrations'], value: any) => {\n    setSettings(prev => ({\n      ...prev,\n      integrations: { ...prev.integrations, [key]: value }\n    }))\n  }\n\n  const toggleApiKeyVisibility = (keyId: string) => {\n    setShowApiKeys(prev => ({ ...prev, [keyId]: !prev[keyId] }))\n  }\n\n  const copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text)\n    // You could add a toast notification here\n  }\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    })\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <Tabs defaultValue=\"general\" className=\"space-y-6\">\n        <TabsList>\n          <TabsTrigger value=\"general\">General</TabsTrigger>\n          <TabsTrigger value=\"security\">Security</TabsTrigger>\n          <TabsTrigger value=\"privacy\">Privacy</TabsTrigger>\n          <TabsTrigger value=\"integrations\">Integrations</TabsTrigger>\n          <TabsTrigger value=\"danger\">Danger Zone</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"general\" className=\"space-y-6\">\n          {/* Organization Profile */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Building2 className=\"h-5 w-5\" />\n                Organization Profile\n              </CardTitle>\n              <CardDescription>Basic information about your organization</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"flex items-center gap-6\">\n                <Avatar className=\"h-20 w-20\">\n                  <AvatarImage src={settings.general.logo} />\n                  <AvatarFallback className=\"text-lg\">\n                    {settings.general.name.split(' ').map(n => n[0]).join('').toUpperCase().slice(0, 2)}\n                  </AvatarFallback>\n                </Avatar>\n                <div className=\"space-y-2\">\n                  <Button variant=\"outline\" size=\"sm\">\n                    <Upload className=\"h-4 w-4 mr-2\" />\n                    Upload Logo\n                  </Button>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Recommended: Square image, at least 200x200px\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"org-name\">Organization Name</Label>\n                  <Input\n                    id=\"org-name\"\n                    value={settings.general.name}\n                    onChange={(e) => updateGeneralSetting('name', e.target.value)}\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"org-website\">Website</Label>\n                  <Input\n                    id=\"org-website\"\n                    value={settings.general.website}\n                    onChange={(e) => updateGeneralSetting('website', e.target.value)}\n                    placeholder=\"https://your-website.com\"\n                  />\n                </div>\n                <div className=\"space-y-2 md:col-span-2\">\n                  <Label htmlFor=\"org-description\">Description</Label>\n                  <Textarea\n                    id=\"org-description\"\n                    value={settings.general.description}\n                    onChange={(e) => updateGeneralSetting('description', e.target.value)}\n                    rows={3}\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"org-industry\">Industry</Label>\n                  <Select value={settings.general.industry} onValueChange={(value) => updateGeneralSetting('industry', value)}>\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"Technology\">Technology</SelectItem>\n                      <SelectItem value=\"Healthcare\">Healthcare</SelectItem>\n                      <SelectItem value=\"Finance\">Finance</SelectItem>\n                      <SelectItem value=\"Education\">Education</SelectItem>\n                      <SelectItem value=\"Retail\">Retail</SelectItem>\n                      <SelectItem value=\"Manufacturing\">Manufacturing</SelectItem>\n                      <SelectItem value=\"Other\">Other</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"org-size\">Organization Size</Label>\n                  <Select value={settings.general.size} onValueChange={(value) => updateGeneralSetting('size', value)}>\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"1-10\">1-10 employees</SelectItem>\n                      <SelectItem value=\"11-50\">11-50 employees</SelectItem>\n                      <SelectItem value=\"51-200\">51-200 employees</SelectItem>\n                      <SelectItem value=\"201-500\">201-500 employees</SelectItem>\n                      <SelectItem value=\"500+\">500+ employees</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"org-location\">Location</Label>\n                  <Input\n                    id=\"org-location\"\n                    value={settings.general.location}\n                    onChange={(e) => updateGeneralSetting('location', e.target.value)}\n                    placeholder=\"City, Country\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"org-timezone\">Timezone</Label>\n                  <Select value={settings.general.timezone} onValueChange={(value) => updateGeneralSetting('timezone', value)}>\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"America/Los_Angeles\">Pacific Time (US & Canada)</SelectItem>\n                      <SelectItem value=\"America/Denver\">Mountain Time (US & Canada)</SelectItem>\n                      <SelectItem value=\"America/Chicago\">Central Time (US & Canada)</SelectItem>\n                      <SelectItem value=\"America/New_York\">Eastern Time (US & Canada)</SelectItem>\n                      <SelectItem value=\"Europe/London\">London</SelectItem>\n                      <SelectItem value=\"Europe/Paris\">Paris</SelectItem>\n                      <SelectItem value=\"Asia/Tokyo\">Tokyo</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n\n              <div className=\"flex justify-end\">\n                <Button>Save Changes</Button>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"security\" className=\"space-y-6\">\n          {/* Security Settings */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Shield className=\"h-5 w-5\" />\n                Security Settings\n              </CardTitle>\n              <CardDescription>Configure security policies for your organization</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <Label htmlFor=\"two-factor\">Require Two-Factor Authentication</Label>\n                    <p className=\"text-sm text-muted-foreground\">Require all team members to enable 2FA</p>\n                  </div>\n                  <Switch\n                    id=\"two-factor\"\n                    checked={settings.security.twoFactorRequired}\n                    onCheckedChange={(value) => updateSecuritySetting('twoFactorRequired', value)}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <Label htmlFor=\"sso\">Single Sign-On (SSO)</Label>\n                    <p className=\"text-sm text-muted-foreground\">Enable SSO authentication</p>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <Badge variant=\"secondary\">Enterprise</Badge>\n                    <Switch\n                      id=\"sso\"\n                      checked={settings.security.ssoEnabled}\n                      onCheckedChange={(value) => updateSecuritySetting('ssoEnabled', value)}\n                      disabled\n                    />\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"session-timeout\">Session Timeout (minutes)</Label>\n                  <Input\n                    id=\"session-timeout\"\n                    type=\"number\"\n                    value={settings.security.sessionTimeout}\n                    onChange={(e) => updateSecuritySetting('sessionTimeout', parseInt(e.target.value))}\n                    className=\"w-40\"\n                  />\n                  <p className=\"text-sm text-muted-foreground\">\n                    Users will be logged out after this period of inactivity\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"border-t pt-6\">\n                <h4 className=\"font-semibold mb-4\">Password Policy</h4>\n                <div className=\"space-y-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"min-length\">Minimum Password Length</Label>\n                    <Input\n                      id=\"min-length\"\n                      type=\"number\"\n                      value={settings.security.passwordPolicy.minLength}\n                      onChange={(e) => updateSecuritySetting('passwordPolicy', {\n                        ...settings.security.passwordPolicy,\n                        minLength: parseInt(e.target.value)\n                      })}\n                      className=\"w-40\"\n                    />\n                  </div>\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <Label htmlFor=\"require-uppercase\">Require Uppercase</Label>\n                      <Switch\n                        id=\"require-uppercase\"\n                        checked={settings.security.passwordPolicy.requireUppercase}\n                        onCheckedChange={(value) => updateSecuritySetting('passwordPolicy', {\n                          ...settings.security.passwordPolicy,\n                          requireUppercase: value\n                        })}\n                      />\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <Label htmlFor=\"require-lowercase\">Require Lowercase</Label>\n                      <Switch\n                        id=\"require-lowercase\"\n                        checked={settings.security.passwordPolicy.requireLowercase}\n                        onCheckedChange={(value) => updateSecuritySetting('passwordPolicy', {\n                          ...settings.security.passwordPolicy,\n                          requireLowercase: value\n                        })}\n                      />\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <Label htmlFor=\"require-numbers\">Require Numbers</Label>\n                      <Switch\n                        id=\"require-numbers\"\n                        checked={settings.security.passwordPolicy.requireNumbers}\n                        onCheckedChange={(value) => updateSecuritySetting('passwordPolicy', {\n                          ...settings.security.passwordPolicy,\n                          requireNumbers: value\n                        })}\n                      />\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <Label htmlFor=\"require-special\">Require Special Characters</Label>\n                      <Switch\n                        id=\"require-special\"\n                        checked={settings.security.passwordPolicy.requireSpecialChars}\n                        onCheckedChange={(value) => updateSecuritySetting('passwordPolicy', {\n                          ...settings.security.passwordPolicy,\n                          requireSpecialChars: value\n                        })}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"border-t pt-6\">\n                <h4 className=\"font-semibold mb-4\">IP Whitelist</h4>\n                <div className=\"space-y-2\">\n                  {settings.security.ipWhitelist.map((ip, index) => (\n                    <div key={index} className=\"flex items-center gap-2\">\n                      <Input value={ip} readOnly className=\"flex-1\" />\n                      <Button variant=\"outline\" size=\"sm\">\n                        <Trash2 className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                  ))}\n                  <Button variant=\"outline\" size=\"sm\">Add IP Range</Button>\n                </div>\n              </div>\n\n              <div className=\"flex justify-end\">\n                <Button>Save Security Settings</Button>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"privacy\" className=\"space-y-6\">\n          {/* Privacy Settings */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Database className=\"h-5 w-5\" />\n                Privacy & Data Management\n              </CardTitle>\n              <CardDescription>Control how your organization's data is handled</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"data-retention\">Data Retention Period (days)</Label>\n                  <Input\n                    id=\"data-retention\"\n                    type=\"number\"\n                    value={settings.privacy.dataRetention}\n                    onChange={(e) => updatePrivacySetting('dataRetention', parseInt(e.target.value))}\n                    className=\"w-40\"\n                  />\n                  <p className=\"text-sm text-muted-foreground\">\n                    How long to keep deleted data before permanent removal\n                  </p>\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <Label htmlFor=\"anonymize-data\">Anonymize User Data</Label>\n                    <p className=\"text-sm text-muted-foreground\">Remove personal identifiers from analytics</p>\n                  </div>\n                  <Switch\n                    id=\"anonymize-data\"\n                    checked={settings.privacy.anonymizeData}\n                    onCheckedChange={(value) => updatePrivacySetting('anonymizeData', value)}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <Label htmlFor=\"allow-analytics\">Allow Analytics</Label>\n                    <p className=\"text-sm text-muted-foreground\">Enable usage analytics and insights</p>\n                  </div>\n                  <Switch\n                    id=\"allow-analytics\"\n                    checked={settings.privacy.allowAnalytics}\n                    onCheckedChange={(value) => updatePrivacySetting('allowAnalytics', value)}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <Label htmlFor=\"share-usage\">Share Usage Data</Label>\n                    <p className=\"text-sm text-muted-foreground\">Help improve Droplog by sharing anonymous usage data</p>\n                  </div>\n                  <Switch\n                    id=\"share-usage\"\n                    checked={settings.privacy.shareUsageData}\n                    onCheckedChange={(value) => updatePrivacySetting('shareUsageData', value)}\n                  />\n                </div>\n              </div>\n\n              <div className=\"border-t pt-6\">\n                <h4 className=\"font-semibold mb-4\">Data Export & Deletion</h4>\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"font-medium\">Export Organization Data</p>\n                      <p className=\"text-sm text-muted-foreground\">Download all your organization's data</p>\n                    </div>\n                    <Button variant=\"outline\">\n                      <Download className=\"h-4 w-4 mr-2\" />\n                      Export Data\n                    </Button>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"font-medium\">Request Data Deletion</p>\n                      <p className=\"text-sm text-muted-foreground\">Permanently delete all organization data</p>\n                    </div>\n                    <Button variant=\"outline\" className=\"text-red-600 hover:text-red-700\">\n                      <Trash2 className=\"h-4 w-4 mr-2\" />\n                      Request Deletion\n                    </Button>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex justify-end\">\n                <Button>Save Privacy Settings</Button>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"integrations\" className=\"space-y-6\">\n          {/* API Keys */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Key className=\"h-5 w-5\" />\n                API Keys\n              </CardTitle>\n              <CardDescription>Manage API keys for external integrations</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"flex justify-end\">\n                <Dialog open={newApiKeyDialogOpen} onOpenChange={setNewApiKeyDialogOpen}>\n                  <DialogTrigger asChild>\n                    <Button>Create API Key</Button>\n                  </DialogTrigger>\n                  <DialogContent>\n                    <DialogHeader>\n                      <DialogTitle>Create New API Key</DialogTitle>\n                      <DialogDescription>Generate a new API key for integrations</DialogDescription>\n                    </DialogHeader>\n                    <div className=\"space-y-4\">\n                      <div>\n                        <Label htmlFor=\"api-name\">Key Name</Label>\n                        <Input id=\"api-name\" placeholder=\"Production API\" />\n                      </div>\n                      <div>\n                        <Label>Permissions</Label>\n                        <div className=\"space-y-2 mt-2\">\n                          <div className=\"flex items-center space-x-2\">\n                            <input type=\"checkbox\" id=\"read\" />\n                            <Label htmlFor=\"read\">Read</Label>\n                          </div>\n                          <div className=\"flex items-center space-x-2\">\n                            <input type=\"checkbox\" id=\"write\" />\n                            <Label htmlFor=\"write\">Write</Label>\n                          </div>\n                          <div className=\"flex items-center space-x-2\">\n                            <input type=\"checkbox\" id=\"delete\" />\n                            <Label htmlFor=\"delete\">Delete</Label>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <DialogFooter>\n                      <Button variant=\"outline\" onClick={() => setNewApiKeyDialogOpen(false)}>Cancel</Button>\n                      <Button onClick={() => setNewApiKeyDialogOpen(false)}>Create Key</Button>\n                    </DialogFooter>\n                  </DialogContent>\n                </Dialog>\n              </div>\n\n              <div className=\"space-y-3\">\n                {settings.integrations.apiKeys.map((apiKey) => (\n                  <div key={apiKey.id} className=\"p-4 border rounded-lg\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <h4 className=\"font-medium\">{apiKey.name}</h4>\n                      <div className=\"flex items-center gap-2\">\n                        <Badge variant=\"outline\">\n                          {apiKey.permissions.join(', ')}\n                        </Badge>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => toggleApiKeyVisibility(apiKey.id)}\n                        >\n                          {showApiKeys[apiKey.id] ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                        </Button>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => copyToClipboard(apiKey.key)}\n                        >\n                          <Copy className=\"h-4 w-4\" />\n                        </Button>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          className=\"text-red-600\"\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                    <div className=\"font-mono text-sm bg-muted p-2 rounded\">\n                      {showApiKeys[apiKey.id] ? apiKey.key : '••••••••••••••••••••••••••••••••'}\n                    </div>\n                    <div className=\"flex items-center gap-4 mt-2 text-sm text-muted-foreground\">\n                      <span>Created: {formatDate(apiKey.createdAt)}</span>\n                      {apiKey.lastUsed && <span>Last used: {formatDate(apiKey.lastUsed)}</span>}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Integrations */}\n          <Card>\n            <CardHeader>\n              <CardTitle>External Integrations</CardTitle>\n              <CardDescription>Connect with external services</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <Label htmlFor=\"slack-integration\">Slack Integration</Label>\n                  <p className=\"text-sm text-muted-foreground\">Send notifications to Slack channels</p>\n                </div>\n                <Switch\n                  id=\"slack-integration\"\n                  checked={settings.integrations.slackEnabled}\n                  onCheckedChange={(value) => updateIntegrationSetting('slackEnabled', value)}\n                />\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <Label htmlFor=\"email-notifications\">Email Notifications</Label>\n                  <p className=\"text-sm text-muted-foreground\">Send email notifications for important events</p>\n                </div>\n                <Switch\n                  id=\"email-notifications\"\n                  checked={settings.integrations.emailNotifications}\n                  onCheckedChange={(value) => updateIntegrationSetting('emailNotifications', value)}\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"webhook-url\">Webhook URL</Label>\n                <Input\n                  id=\"webhook-url\"\n                  value={settings.integrations.webhookUrl}\n                  onChange={(e) => updateIntegrationSetting('webhookUrl', e.target.value)}\n                  placeholder=\"https://hooks.your-service.com/webhook\"\n                />\n                <p className=\"text-sm text-muted-foreground\">\n                  Receive real-time notifications about organization events\n                </p>\n              </div>\n\n              <div className=\"flex justify-end\">\n                <Button>Save Integration Settings</Button>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"danger\" className=\"space-y-6\">\n          {/* Danger Zone */}\n          <Card className=\"border-red-200\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2 text-red-600\">\n                <AlertTriangle className=\"h-5 w-5\" />\n                Danger Zone\n              </CardTitle>\n              <CardDescription>\n                Irreversible actions that will affect your entire organization\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"space-y-4\">\n                <div className=\"p-4 border border-red-200 rounded-lg bg-red-50\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h4 className=\"font-medium text-red-800\">Transfer Organization Ownership</h4>\n                      <p className=\"text-sm text-red-600\">\n                        Transfer ownership to another team member\n                      </p>\n                    </div>\n                    <Button variant=\"outline\" className=\"border-red-300 text-red-600 hover:bg-red-100\">\n                      Transfer Ownership\n                    </Button>\n                  </div>\n                </div>\n\n                <div className=\"p-4 border border-red-200 rounded-lg bg-red-50\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h4 className=\"font-medium text-red-800\">Archive Organization</h4>\n                      <p className=\"text-sm text-red-600\">\n                        Archive this organization and all its data (reversible)\n                      </p>\n                    </div>\n                    <Button variant=\"outline\" className=\"border-red-300 text-red-600 hover:bg-red-100\">\n                      Archive Organization\n                    </Button>\n                  </div>\n                </div>\n\n                <div className=\"p-4 border border-red-200 rounded-lg bg-red-50\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h4 className=\"font-medium text-red-800\">Delete Organization</h4>\n                      <p className=\"text-sm text-red-600\">\n                        Permanently delete this organization and all its data\n                      </p>\n                    </div>\n                    <Dialog open={deleteDialogOpen} onOpenChange={setDeleteDialogOpen}>\n                      <DialogTrigger asChild>\n                        <Button variant=\"destructive\">\n                          Delete Organization\n                        </Button>\n                      </DialogTrigger>\n                      <DialogContent>\n                        <DialogHeader>\n                          <DialogTitle className=\"text-red-600\">Delete Organization</DialogTitle>\n                          <DialogDescription>\n                            This action cannot be undone. This will permanently delete your organization\n                            and remove all data associated with it.\n                          </DialogDescription>\n                        </DialogHeader>\n                        <div className=\"space-y-4\">\n                          <div className=\"p-4 bg-red-50 border border-red-200 rounded\">\n                            <h4 className=\"font-medium text-red-800 mb-2\">This will delete:</h4>\n                            <ul className=\"text-sm text-red-600 space-y-1\">\n                              <li>• All projects and tasks</li>\n                              <li>• All team members and their access</li>\n                              <li>• All files and assets</li>\n                              <li>• All billing information</li>\n                              <li>• All organization settings</li>\n                            </ul>\n                          </div>\n                          <div>\n                            <Label htmlFor=\"confirm-delete\">\n                              Type <strong>{settings.general.name}</strong> to confirm\n                            </Label>\n                            <Input id=\"confirm-delete\" placeholder={settings.general.name} />\n                          </div>\n                        </div>\n                        <DialogFooter>\n                          <Button variant=\"outline\" onClick={() => setDeleteDialogOpen(false)}>\n                            Cancel\n                          </Button>\n                          <Button variant=\"destructive\" onClick={() => setDeleteDialogOpen(false)}>\n                            I understand, delete this organization\n                          </Button>\n                        </DialogFooter>\n                      </DialogContent>\n                    </Dialog>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}