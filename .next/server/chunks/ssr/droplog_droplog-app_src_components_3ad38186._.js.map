{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/projects/project-header.tsx"],"sourcesContent":["\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { \n  MoreHorizontal, \n  Settings, \n  Share,\n  Plus,\n  Archive,\n  Users,\n} from \"lucide-react\";\nimport { \n  Project, \n  getTasksByProjectId, \n} from \"@/lib/utils/dummy-data\";\n\ninterface ProjectHeaderProps {\n  project: Project;\n}\n\nexport function ProjectHeader({ project }: ProjectHeaderProps) {\n  const projectTasks = getTasksByProjectId(project.id);\n\n  return (\n      <div className=\"space-y-4\">\n        <div className=\"flex items-start justify-between\">\n          <div className=\"space-y-0\">\n            <div className=\"flex items-center space-x-3\">\n              <h1 className=\"text-3xl font-semibold tracking-tight\">{project.title}</h1>\n            </div>\n            <p className=\"text-muted-foreground max-w-2xl\">\n              {project.description || \"No description available for this project.\"}\n            </p>\n          </div>\n          <div className=\"space-y-0\">\n          <div className=\"flex items-center space-x-2\">\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n            <Button variant=\"outline\" size=\"sm\">\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Quick add\n            </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              <DropdownMenuItem>\n                <Settings className=\"mr-2 h-4 w-4\" />\n                Create task\n              </DropdownMenuItem>\n              <DropdownMenuItem>\n                <Users className=\"mr-2 h-4 w-4\" />\n                Create event\n              </DropdownMenuItem>\n              <DropdownMenuItem>\n                <Users className=\"mr-2 h-4 w-4\" />\n                Add asset\n              </DropdownMenuItem>\n              <DropdownMenuItem>\n                <Users className=\"mr-2 h-4 w-4\" />\n                Add content\n              </DropdownMenuItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n            <Button variant=\"default\" size=\"sm\">\n              <Share className=\"h-4 w-4 mr-2\" />\n              Editor\n            </Button>\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"outline\" size=\"sm\">\n                <MoreHorizontal className=\"h-4 w-4\" />\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              <DropdownMenuLabel>Project Actions</DropdownMenuLabel>\n              <DropdownMenuItem>\n                <Settings className=\"mr-2 h-4 w-4\" />\n                Project Settings\n              </DropdownMenuItem>\n              <DropdownMenuItem>\n                <Users className=\"mr-2 h-4 w-4\" />\n                Manage Team\n              </DropdownMenuItem>\n              <DropdownMenuSeparator />\n              <DropdownMenuItem>\n                <Archive className=\"mr-2 h-4 w-4\" />\n                Archive Project\n              </DropdownMenuItem>\n              <DropdownMenuItem className=\"text-red-600\">\n                Delete Project\n              </DropdownMenuItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n          </div>\n        </div>\n      </div>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAnBA;;;;;;AA4BO,SAAS,cAAc,EAAE,OAAO,EAAsB;IAC3D,MAAM,eAAe,IAAA,wLAAmB,EAAC,QAAQ,EAAE;IAEnD,qBACI,2QAAC;QAAI,WAAU;kBACb,cAAA,2QAAC;YAAI,WAAU;;8BACb,2QAAC;oBAAI,WAAU;;sCACb,2QAAC;4BAAI,WAAU;sCACb,cAAA,2QAAC;gCAAG,WAAU;0CAAyC,QAAQ,KAAK;;;;;;;;;;;sCAEtE,2QAAC;4BAAE,WAAU;sCACV,QAAQ,WAAW,IAAI;;;;;;;;;;;;8BAG5B,2QAAC;oBAAI,WAAU;8BACf,cAAA,2QAAC;wBAAI,WAAU;;0CACf,2QAAC,yLAAY;;kDACX,2QAAC,gMAAmB;wCAAC,OAAO;kDAC5B,cAAA,2QAAC,yKAAM;4CAAC,SAAQ;4CAAU,MAAK;;8DAC7B,2QAAC,uOAAI;oDAAC,WAAU;;;;;;gDAAiB;;;;;;;;;;;;kDAInC,2QAAC,gMAAmB;wCAAC,OAAM;;0DACzB,2QAAC,6LAAgB;;kEACf,2QAAC,mPAAQ;wDAAC,WAAU;;;;;;oDAAiB;;;;;;;0DAGvC,2QAAC,6LAAgB;;kEACf,2QAAC,0OAAK;wDAAC,WAAU;;;;;;oDAAiB;;;;;;;0DAGpC,2QAAC,6LAAgB;;kEACf,2QAAC,0OAAK;wDAAC,WAAU;;;;;;oDAAiB;;;;;;;0DAGpC,2QAAC,6LAAgB;;kEACf,2QAAC,0OAAK;wDAAC,WAAU;;;;;;oDAAiB;;;;;;;;;;;;;;;;;;;0CAKtC,2QAAC,yKAAM;gCAAC,SAAQ;gCAAU,MAAK;;kDAC7B,2QAAC,0OAAK;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;0CAGtC,2QAAC,yLAAY;;kDACX,2QAAC,gMAAmB;wCAAC,OAAO;kDAC1B,cAAA,2QAAC,yKAAM;4CAAC,SAAQ;4CAAU,MAAK;sDAC7B,cAAA,2QAAC,+PAAc;gDAAC,WAAU;;;;;;;;;;;;;;;;kDAG9B,2QAAC,gMAAmB;wCAAC,OAAM;;0DACzB,2QAAC,8LAAiB;0DAAC;;;;;;0DACnB,2QAAC,6LAAgB;;kEACf,2QAAC,mPAAQ;wDAAC,WAAU;;;;;;oDAAiB;;;;;;;0DAGvC,2QAAC,6LAAgB;;kEACf,2QAAC,0OAAK;wDAAC,WAAU;;;;;;oDAAiB;;;;;;;0DAGpC,2QAAC,kMAAqB;;;;;0DACtB,2QAAC,6LAAgB;;kEACf,2QAAC,gPAAO;wDAAC,WAAU;;;;;;oDAAiB;;;;;;;0DAGtC,2QAAC,6LAAgB;gDAAC,WAAU;0DAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUzD","debugId":null}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-4\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,2QAAC,qMAAkB;QACjB,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,2QAAC,qMAAkB;QACjB,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,2QAAC,wMAAqB;QACpB,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,qoBACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,2QAAC,wMAAqB;QACpB,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 392, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col rounded-xl border py-6 gap-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-regularm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,2EACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,2QAAC,yMAAsB;QACrB,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,2QAAC,8MAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE","debugId":null}},
    {"offset": {"line": 532, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/projects/project-written-summary.tsx"],"sourcesContent":["// components/projects/project-written-summary.tsx\n'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Skeleton } from '@/components/ui/skeleton'\nimport { \n  Bot, \n  FileText, \n  RefreshCw, \n  Copy,\n  Download,\n  Share\n} from 'lucide-react'\n\n// Dummy data schemas matching the playbook\ninterface Project {\n  id: string\n  title: string\n  url?: string\n  status: 'active' | 'completed' | 'archived'\n  createdAt: string\n  updatedAt: string\n  tasksCount: number\n}\n\ninterface Task {\n  id: string\n  projectId: string\n  title: string\n  status: 'todo' | 'in_progress' | 'completed'\n  priority: 'low' | 'medium' | 'high'\n  assignedTo?: string\n  dueDate?: string\n  comments?: string[]\n}\n\ninterface Asset {\n  id: string\n  projectId: string\n  type: string\n  title: string\n  addedBy: string\n  updatedAt: string\n}\n\ninterface Content {\n  id: string\n  projectId: string\n  title: string\n  status: 'draft' | 'pending' | 'approved'\n  createdAt: string\n  updatedAt: string\n  assignedTo?: string\n}\n\ninterface TeamMember {\n  id: string\n  name: string\n  role: string\n  avatarUrl: string\n}\n\ninterface ProjectWrittenSummaryProps {\n  project: Project\n  tasks: Task[]\n  assets: Asset[]\n  content: Content[]\n  team: TeamMember[]\n}\n\nexport function ProjectWrittenSummary({ \n  project, \n  tasks, \n  assets, \n  content, \n  team \n}: ProjectWrittenSummaryProps) {\n  const [isGenerating, setIsGenerating] = useState(false)\n  const [summary, setSummary] = useState<string | null>(null)\n\n  // Generate human-readable written summary\n  const generateWrittenSummary = async () => {\n    setIsGenerating(true)\n    \n    // Simulate AI processing time\n    await new Promise(resolve => setTimeout(resolve, 3000))\n\n    // Analyze project data for written summary\n    const totalTasks = tasks.length\n    const completedTasks = tasks.filter(t => t.status === 'completed').length\n    const inProgressTasks = tasks.filter(t => t.status === 'in_progress').length\n    const overdueTasks = tasks.filter(t => {\n      if (!t.dueDate) return false\n      return new Date(t.dueDate) < new Date() && t.status !== 'completed'\n    }).length\n\n    const completionRate = totalTasks > 0 ? Math.round((completedTasks / totalTasks) * 100) : 0\n    \n    // Analyze team assignments\n    const assignedTasks = tasks.filter(t => t.assignedTo)\n    const activeTeamMembers = new Set(assignedTasks.map(t => t.assignedTo)).size\n\n    // Analyze content status\n    const approvedContent = content.filter(c => c.status === 'approved').length\n    const draftContent = content.filter(c => c.status === 'draft').length\n\n    // Analyze recent activity\n    const recentDate = new Date()\n    recentDate.setDate(recentDate.getDate() - 7)\n    const recentActivity = [\n      ...tasks.filter(t => new Date(t.dueDate || '2000-01-01') > recentDate),\n      ...content.filter(c => new Date(c.updatedAt) > recentDate)\n    ].length\n\n    // Generate project status assessment\n    let projectHealthPhrase = \"progressing steadily\"\n    let urgencyPhrase = \"\"\n    \n    if (completionRate > 80) {\n      projectHealthPhrase = \"nearing completion with excellent momentum\"\n    } else if (completionRate > 60) {\n      projectHealthPhrase = \"making solid progress\"\n    } else if (completionRate < 30) {\n      projectHealthPhrase = \"in early stages of development\"\n    }\n\n    if (overdueTasks > 0) {\n      urgencyPhrase = overdueTasks === 1 \n        ? \" However, there is one overdue task that requires immediate attention.\"\n        : ` However, there are ${overdueTasks} overdue tasks that need immediate attention.`\n    }\n\n    // Generate team assessment\n    let teamPhrase = \"\"\n    if (activeTeamMembers === 0) {\n      teamPhrase = \"The project currently has no assigned team members.\"\n    } else if (activeTeamMembers === 1) {\n      teamPhrase = \"A single team member is actively working on tasks.\"\n    } else {\n      teamPhrase = `${activeTeamMembers} team members are actively contributing to the project.`\n    }\n\n    // Generate content assessment\n    let contentPhrase = \"\"\n    if (content.length === 0) {\n      contentPhrase = \"No content has been created yet for this project.\"\n    } else {\n      contentPhrase = `The project has ${content.length} content item${content.length === 1 ? '' : 's'}, with ${approvedContent} approved and ${draftContent} still in draft stage.`\n    }\n\n    // Generate asset assessment\n    let assetPhrase = \"\"\n    if (assets.length === 0) {\n      assetPhrase = \"No assets have been uploaded to support the project.\"\n    } else {\n      const assetTypes = [...new Set(assets.map(a => a.type))];\n      assetPhrase = `The project includes ${assets.length} asset${assets.length === 1 ? '' : 's'} covering ${assetTypes.join(', ')} files.`\n    }\n\n    // Generate timeline assessment\n    let timelinePhrase = \"\"\n    const projectAge = Math.floor((new Date().getTime() - new Date(project.createdAt).getTime()) / (1000 * 60 * 60 * 24))\n    \n    if (projectAge < 7) {\n      timelinePhrase = \"This is a newly created project.\"\n    } else if (projectAge < 30) {\n      timelinePhrase = `This project was initiated ${projectAge} days ago.`\n    } else {\n      timelinePhrase = `This project has been running for ${Math.floor(projectAge / 30)} month${Math.floor(projectAge / 30) === 1 ? '' : 's'}.`\n    }\n\n    // Generate priority tasks\n    let priorityPhrase = \"\"\n    const highPriorityTasks = tasks.filter(t => t.priority === 'high' && t.status !== 'completed')\n    if (highPriorityTasks.length > 0) {\n      priorityPhrase = ` There ${highPriorityTasks.length === 1 ? 'is' : 'are'} ${highPriorityTasks.length} high-priority task${highPriorityTasks.length === 1 ? '' : 's'} that ${highPriorityTasks.length === 1 ? 'requires' : 'require'} focus.`\n    }\n\n    // Generate recommendations\n    let recommendations = \"\"\n    const recommendationList = []\n    \n    if (overdueTasks > 0) {\n      recommendationList.push(\"address overdue tasks immediately\")\n    }\n    if (completionRate < 50 && totalTasks > 0) {\n      recommendationList.push(\"accelerate task completion\")\n    }\n    if (draftContent > approvedContent && content.length > 0) {\n      recommendationList.push(\"review and approve pending content\")\n    }\n    if (activeTeamMembers < team.length) {\n      recommendationList.push(\"ensure all team members are actively engaged\")\n    }\n    if (assets.length === 0 && completionRate > 30) {\n      recommendationList.push(\"upload supporting documentation and assets\")\n    }\n\n    if (recommendationList.length > 0) {\n      if (recommendationList.length === 1) {\n        recommendations = ` To maintain momentum, the team should ${recommendationList[0]}.`\n      } else if (recommendationList.length === 2) {\n        recommendations = ` To maintain momentum, the team should ${recommendationList[0]} and ${recommendationList[1]}.`\n      } else {\n        const lastRecommendation = recommendationList.pop()\n        recommendations = ` To maintain momentum, the team should ${recommendationList.join(', ')}, and ${lastRecommendation}.`\n      }\n    }\n\n    // Compile the complete written summary\n    const writtenSummary = `\n**${project.title}** is currently ${projectHealthPhrase} with ${completedTasks} out of ${totalTasks} tasks completed (${completionRate}% completion rate).${urgencyPhrase}\n\n${timelinePhrase} The project status is marked as \"${project.status}\" and involves ${team.length} team member${team.length === 1 ? '' : 's'} in total. ${teamPhrase}${priorityPhrase}\n\n${contentPhrase} ${assetPhrase}\n\n${recentActivity > 0 ? `Recent activity shows ${recentActivity} update${recentActivity === 1 ? '' : 's'} in the past week, indicating active development.` : 'There has been limited activity in the past week.'} ${project.url ? `The project can be accessed at ${project.url}.` : ''}\n\n**Current Focus:** The immediate priorities are ${inProgressTasks > 0 ? `completing the ${inProgressTasks} task${inProgressTasks === 1 ? '' : 's'} currently in progress` : 'initiating new tasks'} and maintaining the project's ${completionRate > 70 ? 'strong' : completionRate > 40 ? 'steady' : 'developing'} momentum.${recommendations}\n\n**Overall Assessment:** This project ${completionRate > 80 ? 'is on track for successful completion' : completionRate > 50 ? 'shows positive progress toward its objectives' : 'is building foundation for future success'} and ${overdueTasks === 0 ? 'maintains good timeline adherence' : 'would benefit from timeline reassessment'}.\n    `.trim()\n\n    setSummary(writtenSummary)\n    setIsGenerating(false)\n  }\n\n  const copyToClipboard = () => {\n    if (summary) {\n      navigator.clipboard.writeText(summary)\n    }\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <CardTitle className=\"flex items-center gap-2\">\n              <FileText className=\"h-5 w-5\" />\n              Project Summary\n            </CardTitle>\n            <CardDescription>\n              Generate a comprehensive written overview of your project's current status and progress\n            </CardDescription>\n          </div>\n          <Button \n            onClick={generateWrittenSummary} \n            disabled={isGenerating}\n            className=\"flex items-center gap-2\"\n          >\n            {isGenerating ? (\n              <>\n                <RefreshCw className=\"h-4 w-4 animate-spin\" />\n                Generating...\n              </>\n            ) : (\n              <>\n                <Bot className=\"h-4 w-4\" />\n                Generate Summary\n              </>\n            )}\n          </Button>\n        </div>\n      </CardHeader>\n\n      <CardContent>\n        {isGenerating && (\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n              <Bot className=\"h-4 w-4\" />\n              Analyzing project data and writing comprehensive summary...\n            </div>\n            <div className=\"space-y-3\">\n              <Skeleton className=\"h-4 w-full\" />\n              <Skeleton className=\"h-4 w-5/6\" />\n              <Skeleton className=\"h-4 w-4/5\" />\n              <div className=\"my-4\" />\n              <Skeleton className=\"h-4 w-full\" />\n              <Skeleton className=\"h-4 w-3/4\" />\n              <Skeleton className=\"h-4 w-5/6\" />\n              <div className=\"my-4\" />\n              <Skeleton className=\"h-4 w-4/5\" />\n              <Skeleton className=\"h-4 w-full\" />\n              <Skeleton className=\"h-4 w-2/3\" />\n            </div>\n          </div>\n        )}\n\n        {!summary && !isGenerating && (\n          <div className=\"text-center py-12\">\n            <FileText className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Ready to create your project summary</h3>\n            <p className=\"text-muted-foreground mb-4\">\n              Click \"Generate Summary\" to create a comprehensive written overview that analyzes your \n              project's progress, team performance, content status, and provides actionable insights.\n            </p>\n            <Badge variant=\"secondary\" className=\"mb-4\">\n              <Bot className=\"h-3 w-3 mr-1\" />\n              AI-Powered Analysis\n            </Badge>\n          </div>\n        )}\n\n        {summary && (\n          <div className=\"space-y-4\">\n            {/* Summary Actions */}\n            <div className=\"flex items-center justify-between border-b pb-3\">\n              <div className=\"flex items-center gap-2\">\n                <Badge variant=\"secondary\" className=\"bg-green-100 text-green-700\">\n                  Summary Generated\n                </Badge>\n                <span className=\"text-sm text-muted-foreground\">\n                  {new Date().toLocaleString()}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Button variant=\"outline\" size=\"sm\" onClick={copyToClipboard}>\n                  <Copy className=\"h-4 w-4 mr-1\" />\n                  Copy\n                </Button>\n                <Button variant=\"outline\" size=\"sm\">\n                  <Share className=\"h-4 w-4 mr-1\" />\n                  Share\n                </Button>\n                <Button variant=\"outline\" size=\"sm\">\n                  <Download className=\"h-4 w-4 mr-1\" />\n                  Export\n                </Button>\n              </div>\n            </div>\n\n            {/* Written Summary Content */}\n            <div className=\"prose prose-sm max-w-none\">\n              <div className=\"bg-gray-50 rounded-lg p-6 border border-gray-200\">\n                <div className=\"whitespace-pre-line text-gray-900 leading-relaxed\">\n                  {summary}\n                </div>\n              </div>\n            </div>\n\n            {/* Summary Footer */}\n            <div className=\"text-xs text-muted-foreground pt-4 border-t\">\n              <p>\n                This summary was automatically generated based on current project data including \n                {tasks.length} tasks, {content.length} content items, {assets.length} assets, \n                and {team.length} team members. For the most accurate insights, ensure all \n                project data is up to date.\n              </p>\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1108, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/projects/project-overview.tsx"],"sourcesContent":["\"use client\";\n\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport { Separator } from \"@/components/ui/separator\";\n\nimport { \n  CheckSquare, \n  Clock, \n  TrendingUp, \n  Users,\n  Calendar,\n  FileImage,\n  FileText,\n  ArrowRight,\n  Plus,\n  ExternalLink,\n  Bot,\n  Sparkles\n} from \"lucide-react\";\nimport { \n  Project,\n  Asset,\n  TeamMember,\n  getTasksByProjectId,\n  getAssetsByProjectId,\n  getContentByProjectId,\n  getTeamMemberById,\n  team\n} from \"@/lib/utils/dummy-data\";\nimport { format } from \"date-fns\";\nimport Link from \"next/link\";\nimport { ProjectWrittenSummary } from \"@/components/projects/project-written-summary\";\n\ninterface ProjectOverviewProps {\n  project: Project;\n}\n\n// Utility function to format file sizes\nconst formatFileSize = (bytes: number): string => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\nexport function ProjectOverview({ project }: ProjectOverviewProps) {\n  const projectTasks = getTasksByProjectId(project.id);\n  const projectAssets = getAssetsByProjectId(project.id);\n  const projectContent = getContentByProjectId(project.id);\n  \n  const completedTasks = projectTasks.filter(t => t.status === \"completed\");\n  const inProgressTasks = projectTasks.filter(t => t.status === \"in_progress\");\n  const todoTasks = projectTasks.filter(t => t.status === \"todo\");\n  \n  const progress = projectTasks.length > 0 ? Math.round((completedTasks.length / projectTasks.length) * 100) : 0;\n  \n  // Convert project data to format expected by ProjectWrittenSummary component\n  const summaryProject = {\n    id: project.id,\n    title: project.title,\n    url: project.url,\n    status: project.status as 'active' | 'completed' | 'archived',\n    createdAt: project.createdAt,\n    updatedAt: project.updatedAt,\n    tasksCount: projectTasks.length\n  };\n\n  const summaryTasks = projectTasks.map(task => ({\n    id: task.id,\n    projectId: task.projectId,\n    title: task.title,\n    status: task.status as 'todo' | 'in_progress' | 'completed',\n    priority: task.priority as 'low' | 'medium' | 'high',\n    assignedTo: task.assignedTo,\n    dueDate: task.dueDate,\n    comments: task.comments\n  }));\n\n  const summaryAssets = projectAssets.map(asset => ({\n    id: asset.id,\n    projectId: asset.projectId,\n    type: asset.type,\n    title: asset.title,\n    addedBy: asset.createdBy,\n    updatedAt: asset.updatedAt\n  }));\n\n  const summaryContent = projectContent.map(content => ({\n    id: content.id,\n    projectId: content.projectId,\n    title: content.title,\n    status: content.status as 'draft' | 'pending' | 'approved',\n    createdAt: content.createdAt,\n    updatedAt: content.updatedAt,\n    assignedTo: content.assignedTo\n  }));\n\n  const summaryTeam = team.map(member => ({\n    id: member.id,\n    name: member.name,\n    role: member.role,\n    avatarUrl: member.avatarUrl\n  }));\n  \n  // Recent activity items (mock data for demonstration)\n  const recentActivities = [\n    {\n      id: \"1\",\n      user: \"Alice Johnson\",\n      action: \"completed task\",\n      target: \"Fix homepage header\",\n      timestamp: \"2025-09-11T08:30:00Z\"\n    },\n    {\n      id: \"2\",\n      user: \"Bob Smith\",\n      action: \"uploaded asset\",\n      target: \"Hero Banner Image\",\n      timestamp: \"2025-09-10T16:45:00Z\"\n    },\n    {\n      id: \"3\",\n      user: \"Carol Davis\",\n      action: \"created content\",\n      target: \"Blog Post Draft\",\n      timestamp: \"2025-09-10T14:20:00Z\"\n    }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n\n      {/* Original Overview Content */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Left Column */}\n        <div className=\"lg:col-span-2 space-y-6\">\n          {/* Progress Overview */}\n          <Card>\n            <CardContent className=\"space-y-6\">\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"font-medium\">Overall Progress</span>\n                  <span className=\"text-2xl font-bold\">{progress}%</span>\n                </div>\n                <Progress value={progress} className=\"h-3\" />\n                <p className=\"text-sm text-muted-foreground\">\n                  {completedTasks.length} of {projectTasks.length} tasks completed\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Recent Activity */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <Clock className=\"h-5 w-5\" />\n                  <span>Recent Activity</span>\n                </div>\n                <Button variant=\"ghost\" size=\"sm\">\n                  View All\n                </Button>\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {recentActivities.map((activity) => (\n                  <div key={activity.id} className=\"flex items-center space-x-3\">\n                    <Avatar className=\"h-8 w-8\">\n                      <AvatarImage src={`/avatars/${activity.user.toLowerCase().replace(' ', '-')}.png`} />\n                      <AvatarFallback className=\"text-xs\">\n                        {activity.user.split(\" \").map(n => n[0]).join(\"\")}\n                      </AvatarFallback>\n                    </Avatar>\n                    <div className=\"flex-1 min-w-0\">\n                      <p className=\"text-sm\">\n                        <span className=\"font-medium\">{activity.user}</span>\n                        {\" \"}{activity.action}{\" \"}\n                        <span className=\"font-medium\">{activity.target}</span>\n                      </p>\n                      <p className=\"text-xs text-muted-foreground\">\n                        {format(new Date(activity.timestamp), \"MMM d, h:mm a\")}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n\n                <ProjectWrittenSummary\n        project={summaryProject}\n        tasks={summaryTasks}\n        assets={summaryAssets}\n        content={summaryContent}\n        team={summaryTeam}\n      />\n        </div>\n\n        {/* Right Column */}\n        <div className=\"space-y-6\">\n          {/* Project Description */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Project Description</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"prose prose-sm max-w-none\">\n                <p className=\"text-muted-foreground leading-relaxed\">\n                  {project.description || \"No description available for this project. Click edit to add a detailed description of the project goals, requirements, and objectives.\"}\n                </p>\n              </div>\n              <div className=\"mt-4\">\n                <Button variant=\"outline\" size=\"sm\">\n                  Edit Description\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Quick Stats */}\n          <div className=\"space-y-4\">\n            \n            <div className=\"flex flex-col gap-6\">\n              {/* Tasks Card */}\n              <Card className=\"relative overflow-hidden\">\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">\n                    Tasks\n                  </CardTitle>\n                  <div className=\"p-2 rounded-md bg-blue-50\">\n                    <CheckSquare className=\"h-4 w-4 text-blue-600\" />\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-semibold\">{projectTasks.length}</div>\n                  <p className=\"text-xs text-muted-foreground mt-1\">\n                    {projectTasks.filter(t => t.status === 'completed').length} of {projectTasks.length} tasks completed\n                  </p>\n                  {/* Progress Bar */}\n                  <div className=\"mt-3\">\n                    <div className=\"flex items-center justify-between text-xs mb-1\">\n                      <span className=\"text-muted-foreground\">Progress</span>\n                      <span className=\"font-medium\">\n                        {Math.round((projectTasks.filter(t => t.status === 'completed').length / Math.max(projectTasks.length, 1)) * 100)}%\n                      </span>\n                    </div>\n                    <Progress \n                      value={Math.round((projectTasks.filter(t => t.status === 'completed').length / Math.max(projectTasks.length, 1)) * 100)} \n                      className=\"h-2\" \n                    />\n                  </div>\n                  {/* Action Button */}\n                  <div className=\"mt-4\">\n                    <Link href={`/app/projects/${project.id}?tab=tasks`}>\n                      <Button variant=\"outline\" size=\"sm\" className=\"w-full\">\n                        <CheckSquare className=\"h-4 w-4 mr-2\" />\n                        View Tasks\n                      </Button>\n                    </Link>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Assets Card */}\n              <Card className=\"relative overflow-hidden\">\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">\n                    Assets\n                  </CardTitle>\n                  <div className=\"p-2 rounded-md bg-purple-50\">\n                    <FileImage className=\"h-4 w-4 text-purple-600\" />\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-semibold\">{projectAssets.length}</div>\n                  <p className=\"text-xs text-muted-foreground mt-1\">\n                    {formatFileSize(projectAssets.reduce((acc: number, asset: Asset) => {\n                      const mockSize = Math.floor(Math.random() * 10000000) + 100000;\n                      return acc + mockSize;\n                    }, 0))} total size\n                  </p>\n                  {/* Progress Bar */}\n                  <div className=\"mt-3\">\n                    <div className=\"flex items-center justify-between text-xs mb-1\">\n                      <span className=\"text-muted-foreground\">Storage</span>\n                      <span className=\"font-medium\">\n                        {Math.min(Math.round((projectAssets.length / 20) * 100), 100)}%\n                      </span>\n                    </div>\n                    <Progress \n                      value={Math.min(Math.round((projectAssets.length / 20) * 100), 100)} \n                      className=\"h-2\" \n                    />\n                  </div>\n                  {/* Action Button */}\n                  <div className=\"mt-4\">\n                    <Link href={`/app/projects/${project.id}?tab=assets`}>\n                      <Button variant=\"outline\" size=\"sm\" className=\"w-full\">\n                        <FileImage className=\"h-4 w-4 mr-2\" />\n                        View Assets\n                      </Button>\n                    </Link>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Content Card */}\n              <Card className=\"relative overflow-hidden\">\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">\n                    Content\n                  </CardTitle>\n                  <div className=\"p-2 rounded-md bg-green-50\">\n                    <FileText className=\"h-4 w-4 text-green-600\" />\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-semibold\">{projectContent.length}</div>\n                  <p className=\"text-xs text-muted-foreground mt-1\">\n                    {projectContent.filter(c => c.status === 'published').length} published, {projectContent.filter(c => c.status === 'draft').length} drafts\n                  </p>\n                  {/* Progress Bar */}\n                  <div className=\"mt-3\">\n                    <div className=\"flex items-center justify-between text-xs mb-1\">\n                      <span className=\"text-muted-foreground\">Published</span>\n                      <span className=\"font-medium\">\n                        {Math.round((projectContent.filter(c => c.status === 'published').length / Math.max(projectContent.length, 1)) * 100)}%\n                      </span>\n                    </div>\n                    <Progress \n                      value={Math.round((projectContent.filter(c => c.status === 'published').length / Math.max(projectContent.length, 1)) * 100)} \n                      className=\"h-2\" \n                    />\n                  </div>\n                  {/* Action Button */}\n                  <div className=\"mt-4\">\n                    <Link href={`/app/projects/${project.id}?tab=content`}>\n                      <Button variant=\"outline\" size=\"sm\" className=\"w-full\">\n                        <FileText className=\"h-4 w-4 mr-2\" />\n                        View Content\n                      </Button>\n                    </Link>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Team Card */}\n              <Card className=\"relative overflow-hidden\">\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">\n                    Team Members\n                  </CardTitle>\n                  <div className=\"p-2 rounded-md bg-orange-50\">\n                    <Users className=\"h-4 w-4 text-orange-600\" />\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-semibold\">{project.assignedTo?.length || 0}</div>\n                  <p className=\"text-xs text-muted-foreground mt-1\">\n                    Active members on this project\n                  </p>\n                  {/* Progress Bar */}\n                  <div className=\"mt-3\">\n                    <div className=\"flex items-center justify-between text-xs mb-1\">\n                      <span className=\"text-muted-foreground\">Capacity</span>\n                      <span className=\"font-medium\">\n                        {Math.min(Math.round(((project.assignedTo?.length || 0) / 10) * 100), 100)}%\n                      </span>\n                    </div>\n                    <Progress \n                      value={Math.min(Math.round(((project.assignedTo?.length || 0) / 10) * 100), 100)} \n                      className=\"h-2\" \n                    />\n                  </div>\n                  \n                  {/* Team Member Avatars */}\n                  {project.assignedTo && project.assignedTo.length > 0 && (\n                    <div className=\"mt-3 flex items-center space-x-1\">\n                      {project.assignedTo.slice(0, 4).map((memberId: string, index: number) => {\n                        const member = team.find((t: TeamMember) => t.id === memberId);\n                        return (\n                          <Avatar key={memberId} className=\"w-6 h-6 border-2 border-background\">\n                            <AvatarImage src={member?.avatarUrl} />\n                            <AvatarFallback className=\"text-xs\">\n                              {member?.name?.split(' ').map((n: string) => n[0]).join('') || 'U'}\n                            </AvatarFallback>\n                          </Avatar>\n                        );\n                      })}\n                      {(project.assignedTo?.length || 0) > 4 && (\n                        <div className=\"w-6 h-6 rounded-full bg-muted border-2 border-background flex items-center justify-center text-xs font-medium\">\n                          +{(project.assignedTo?.length || 0) - 4}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                  \n                  {/* Action Button */}\n                  <div className=\"mt-4\">\n                    <Link href={`/app/projects/${project.id}?tab=team`}>\n                      <Button variant=\"outline\" size=\"sm\" className=\"w-full\">\n                        <Users className=\"h-4 w-4 mr-2\" />\n                        View Team\n                      </Button>\n                    </Link>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2199, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { CheckIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Checkbox({\n  className,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\n  return (\n    <CheckboxPrimitive.Root\n      data-slot=\"checkbox\"\n      className={cn(\n        \"peer border-input dark:bg-input/90 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator\n        data-slot=\"checkbox-indicator\"\n        className=\"flex items-center justify-center text-current transition-none\"\n      >\n        <CheckIcon className=\"size-3.5\" />\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  )\n}\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACiD;IACpD,qBACE,2QAAC,yMAAsB;QACrB,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,+eACA;QAED,GAAG,KAAK;kBAET,cAAA,2QAAC,8MAA2B;YAC1B,aAAU;YACV,WAAU;sBAEV,cAAA,2QAAC,kPAAS;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI7B","debugId":null}},
    {"offset": {"line": 2243, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,2QAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,2QAAC;YACC,aAAU;YACV,WAAW,IAAA,sJAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 2367, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-4 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-4 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-4 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-4\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AAAA;AAAA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,2QAAC,uMAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,2QAAC,wMAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,2QAAC,wMAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,OAAO,SAAS,EAChB,QAAQ,EACR,GAAG,OAGJ;IACC,qBACE,2QAAC,0MAAuB;QACtB,aAAU;QACV,aAAW;QACX,WAAW,IAAA,sJAAE,EACX,gzBACA;QAED,GAAG,KAAK;;YAER;0BACD,2QAAC,uMAAoB;gBAAC,OAAO;0BAC3B,cAAA,2QAAC,wQAAe;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAInC;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,WAAW,QAAQ,EACnB,GAAG,OACkD;IACrD,qBACE,2QAAC,yMAAsB;kBACrB,cAAA,2QAAC,0MAAuB;YACtB,aAAU;YACV,WAAW,IAAA,sJAAE,EACX,ijBACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;;8BAET,2QAAC;;;;;8BACD,2QAAC,2MAAwB;oBACvB,WAAW,IAAA,sJAAE,EACX,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,2QAAC;;;;;;;;;;;;;;;;AAIT;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,2QAAC,wMAAqB;QACpB,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAClB,SAAS,EACT,QAAQ,EACR,GAAG,OAC+C;IAClD,qBACE,2QAAC,uMAAoB;QACnB,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,6aACA;QAED,GAAG,KAAK;;0BAET,2QAAC;gBAAK,WAAU;0BACd,cAAA,2QAAC,gNAA6B;8BAC5B,cAAA,2QAAC,kPAAS;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAGzB,2QAAC,2MAAwB;0BAAE;;;;;;;;;;;;AAGjC;AAEA,SAAS,gBAAgB,EACvB,SAAS,EACT,GAAG,OACoD;IACvD,qBACE,2QAAC,4MAAyB;QACxB,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,iDAAiD;QAC9D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,qBAAqB,EAC5B,SAAS,EACT,GAAG,OACyD;IAC5D,qBACE,2QAAC,iNAA8B;QAC7B,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,2QAAC,kQAAa;YAAC,WAAU;;;;;;;;;;;AAG/B;AAEA,SAAS,uBAAuB,EAC9B,SAAS,EACT,GAAG,OAC2D;IAC9D,qBACE,2QAAC,mNAAgC;QAC/B,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,2QAAC,wQAAe;YAAC,WAAU;;;;;;;;;;;AAGjC","debugId":null}},
    {"offset": {"line": 2600, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/projects/project-tasks-list.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  SortingState,\n  useReactTable,\n  VisibilityState,\n} from \"@tanstack/react-table\";\nimport { ArrowUpDown, ChevronDown, MoreHorizontal, Plus, Filter } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { \n  Task,\n  Project,\n  getTasksByProjectId,\n  getTeamMemberById \n} from \"@/lib/utils/dummy-data\";\nimport { format } from \"date-fns\";\nimport { Calendar, CheckSquare } from \"lucide-react\";\n\ninterface ProjectTasksListProps {\n  project: Project;\n}\n\nconst getPriorityColor = (priority: string) => {\n  switch (priority) {\n    case \"urgent\":\n      return \"bg-red-500 text-white\";\n    case \"high\":\n      return \"bg-orange-500 text-white\";\n    case \"medium\":\n      return \"bg-yellow-500 text-white\";\n    case \"low\":\n      return \"bg-green-500 text-white\";\n    default:\n      return \"bg-gray-500 text-white\";\n  }\n};\n\nconst getStatusColor = (status: string) => {\n  switch (status) {\n    case \"completed\":\n      return \"bg-green-100 text-green-800\";\n    case \"in_progress\":\n      return \"bg-blue-100 text-blue-800\";\n    case \"todo\":\n      return \"bg-gray-100 text-gray-800\";\n    default:\n      return \"bg-gray-100 text-gray-800\";\n  }\n};\n\nexport const projectTaskColumns: ColumnDef<Task>[] = [\n  {\n    id: \"select\",\n    header: ({ table }) => (\n      <Checkbox\n        checked={\n          table.getIsAllPageRowsSelected() ||\n          (table.getIsSomePageRowsSelected() && \"indeterminate\")\n        }\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n        aria-label=\"Select all\"\n      />\n    ),\n    cell: ({ row }) => (\n      <Checkbox\n        checked={row.getIsSelected()}\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\n        aria-label=\"Select row\"\n      />\n    ),\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: \"title\",\n    header: ({ column }) => {\n      return (\n        <Button\n          variant=\"ghost\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n        >\n          Task\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      );\n    },\n    cell: ({ row }) => {\n      const task = row.original;\n      \n      return (\n        <div className=\"flex flex-col\">\n          <div className=\"font-medium\">{task.title}</div>\n          {task.description && (\n            <div className=\"text-sm text-muted-foreground line-clamp-2\">\n              {task.description}\n            </div>\n          )}\n        </div>\n      );\n    },\n  },\n  {\n    accessorKey: \"status\",\n    header: \"Status\",\n    cell: ({ row }) => {\n      const status = row.getValue(\"status\") as string;\n      return (\n        <Badge variant=\"outline\" className={getStatusColor(status)}>\n          {status.replace(\"_\", \" \")}\n        </Badge>\n      );\n    },\n  },\n  {\n    accessorKey: \"priority\",\n    header: \"Priority\",\n    cell: ({ row }) => {\n      const priority = row.getValue(\"priority\") as string;\n      return (\n        <Badge className={`text-xs ${getPriorityColor(priority)}`}>\n          {priority}\n        </Badge>\n      );\n    },\n  },\n  {\n    accessorKey: \"assignedTo\",\n    header: \"Assignee\",\n    cell: ({ row }) => {\n      const assigneeId = row.getValue(\"assignedTo\") as string;\n      const assignee = assigneeId ? getTeamMemberById(assigneeId) : null;\n      \n      if (!assignee) return <div className=\"text-muted-foreground\">Unassigned</div>;\n      \n      return (\n        <div className=\"flex items-center space-x-2\">\n          <Avatar className=\"h-6 w-6\">\n            <AvatarImage src={assignee.avatarUrl} />\n            <AvatarFallback className=\"text-xs\">\n              {assignee.name.split(\" \").map(n => n[0]).join(\"\")}\n            </AvatarFallback>\n          </Avatar>\n          <span className=\"text-sm\">{assignee.name}</span>\n        </div>\n      );\n    },\n  },\n  {\n    accessorKey: \"dueDate\",\n    header: ({ column }) => {\n      return (\n        <Button\n          variant=\"ghost\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n        >\n          Due Date\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      );\n    },\n    cell: ({ row }) => {\n      const dueDate = row.getValue(\"dueDate\") as string;\n      \n      if (!dueDate) return <div className=\"text-muted-foreground\">No due date</div>;\n      \n      const date = new Date(dueDate);\n      const isOverdue = date < new Date() && row.original.status !== \"completed\";\n      \n      return (\n        <div className={`flex items-center space-x-1 ${isOverdue ? 'text-red-600' : ''}`}>\n          <Calendar className=\"h-3 w-3\" />\n          <span className=\"text-sm\">{format(date, \"MMM d, yyyy\")}</span>\n        </div>\n      );\n    },\n  },\n  {\n    id: \"actions\",\n    enableHiding: false,\n    cell: ({ row }) => {\n      const task = row.original;\n\n      return (\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n              <span className=\"sr-only\">Open menu</span>\n              <MoreHorizontal className=\"h-4 w-4\" />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            <DropdownMenuLabel>Actions</DropdownMenuLabel>\n            <DropdownMenuItem>View Details</DropdownMenuItem>\n            <DropdownMenuItem>Edit Task</DropdownMenuItem>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem>\n              {task.status === \"completed\" ? \"Mark as Incomplete\" : \"Mark as Complete\"}\n            </DropdownMenuItem>\n            <DropdownMenuItem>Duplicate Task</DropdownMenuItem>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem className=\"text-red-600\">\n              Delete Task\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      );\n    },\n  },\n];\n\nexport function ProjectTasksList({ project }: ProjectTasksListProps) {\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([]);\n  const [columnVisibility, setColumnVisibility] = React.useState<VisibilityState>({});\n  const [rowSelection, setRowSelection] = React.useState({});\n  const [statusFilter, setStatusFilter] = React.useState<string>(\"all\");\n  const [priorityFilter, setPriorityFilter] = React.useState<string>(\"all\");\n\n  const projectTasks = getTasksByProjectId(project.id);\n\n  // Filter tasks based on status and priority\n  const filteredTasks = React.useMemo(() => {\n    let filtered = projectTasks;\n    \n    if (statusFilter !== \"all\") {\n      filtered = filtered.filter(task => task.status === statusFilter);\n    }\n    \n    if (priorityFilter !== \"all\") {\n      filtered = filtered.filter(task => task.priority === priorityFilter);\n    }\n    \n    return filtered;\n  }, [projectTasks, statusFilter, priorityFilter]);\n\n  const table = useReactTable({\n    data: filteredTasks,\n    columns: projectTaskColumns,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n    },\n  });\n\n  // Task stats\n  const completedTasks = projectTasks.filter(t => t.status === \"completed\");\n  const inProgressTasks = projectTasks.filter(t => t.status === \"in_progress\");\n  const todoTasks = projectTasks.filter(t => t.status === \"todo\");\n\n  return (\n    <div className=\"space-y-0\">\n      {/* Tasks Table */}\n\n          <div className=\"w-full flex flex-col gap-4\">\n            <div className=\"flex items-center gap-4\">\n              <Input\n                placeholder=\"Search tasks...\"\n                value={(table.getColumn(\"title\")?.getFilterValue() as string) ?? \"\"}\n                onChange={(event) =>\n                  table.getColumn(\"title\")?.setFilterValue(event.target.value)\n                }\n                className=\"max-w-sm\"\n              />\n              \n              <Select value={statusFilter} onValueChange={setStatusFilter}>\n                <SelectTrigger className=\"w-40\">\n                  <SelectValue placeholder=\"Filter by status\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Status</SelectItem>\n                  <SelectItem value=\"todo\">To Do</SelectItem>\n                  <SelectItem value=\"in_progress\">In Progress</SelectItem>\n                  <SelectItem value=\"completed\">Completed</SelectItem>\n                </SelectContent>\n              </Select>\n              \n              <Select value={priorityFilter} onValueChange={setPriorityFilter}>\n                <SelectTrigger className=\"w-40\">\n                  <SelectValue placeholder=\"Filter by priority\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Priority</SelectItem>\n                  <SelectItem value=\"urgent\">Urgent</SelectItem>\n                  <SelectItem value=\"high\">High</SelectItem>\n                  <SelectItem value=\"medium\">Medium</SelectItem>\n                  <SelectItem value=\"low\">Low</SelectItem>\n                </SelectContent>\n              </Select>\n              \n                  <Button variant=\"default\" className=\"ml-auto\">\n                    <Plus className=\"h-4 w-4\" />\n                    Create a task\n                  </Button>\n            </div>\n            \n            <div className=\"overflow-hidden rounded-md border\">\n              <Table>\n                <TableHeader>\n                  {table.getHeaderGroups().map((headerGroup) => (\n                    <TableRow key={headerGroup.id}>\n                      {headerGroup.headers.map((header) => {\n                        return (\n                          <TableHead key={header.id}>\n                            {header.isPlaceholder\n                              ? null\n                              : flexRender(\n                                  header.column.columnDef.header,\n                                  header.getContext()\n                                )}\n                          </TableHead>\n                        );\n                      })}\n                    </TableRow>\n                  ))}\n                </TableHeader>\n                <TableBody>\n                  {table.getRowModel().rows?.length ? (\n                    table.getRowModel().rows.map((row) => (\n                      <TableRow\n                        key={row.id}\n                        data-state={row.getIsSelected() && \"selected\"}\n                      >\n                        {row.getVisibleCells().map((cell) => (\n                          <TableCell key={cell.id}>\n                            {flexRender(\n                              cell.column.columnDef.cell,\n                              cell.getContext()\n                            )}\n                          </TableCell>\n                        ))}\n                      </TableRow>\n                    ))\n                  ) : (\n                    <TableRow>\n                      <TableCell\n                        colSpan={projectTaskColumns.length}\n                        className=\"h-24 text-center\"\n                      >\n                        No tasks found.\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </div>\n            \n            <div className=\"flex items-center justify-between space-x-2 py-4\">\n              <div className=\"text-muted-foreground flex-1 text-sm\">\n                {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\n                {table.getFilteredRowModel().rows.length} row(s) selected.\n              </div>\n              <div className=\"space-x-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => table.previousPage()}\n                  disabled={!table.getCanPreviousPage()}\n                >\n                  Previous\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => table.nextPage()}\n                  disabled={!table.getCanNextPage()}\n                >\n                  Next\n                </Button>\n              </div>\n            </div>\n          </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3362, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/projects/project-assets-list.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  SortingState,\n  useReactTable,\n  VisibilityState,\n} from \"@tanstack/react-table\";\nimport { ArrowUpDown, ChevronDown, MoreHorizontal, Plus, Filter, Upload, Download, Eye, Edit, Trash2 } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { \n  Asset,\n  Project,\n  getAssetsByProjectId,\n  getTeamMemberById \n} from \"@/lib/utils/dummy-data\";\nimport { format } from \"date-fns\";\nimport { FileImage, FileText, Video, File } from \"lucide-react\";\n\ninterface ProjectAssetsListProps {\n  project: Project;\n}\n\nconst getTypeColor = (type: string) => {\n  switch (type) {\n    case \"image\":\n      return \"bg-blue-100 text-blue-800\";\n    case \"video\":\n      return \"bg-purple-100 text-purple-800\";\n    case \"pdf\":\n      return \"bg-red-100 text-red-800\";\n    case \"document\":\n      return \"bg-green-100 text-green-800\";\n    case \"other\":\n      return \"bg-gray-100 text-gray-800\";\n    default:\n      return \"bg-gray-100 text-gray-800\";\n  }\n};\n\nconst getFileIcon = (type: string) => {\n  switch (type) {\n    case \"image\":\n      return <FileImage className=\"h-4 w-4\" />;\n    case \"video\":\n      return <Video className=\"h-4 w-4\" />;\n    case \"pdf\":\n      return <FileText className=\"h-4 w-4\" />;\n    case \"document\":\n      return <FileText className=\"h-4 w-4\" />;\n    default:\n      return <File className=\"h-4 w-4\" />;\n  }\n};\n\nconst formatFileSize = (bytes: number) => {\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  if (bytes === 0) return '0 Byte';\n  const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)).toString());\n  return Math.round(bytes / Math.pow(1024, i) * 100) / 100 + ' ' + sizes[i];\n};\n\nexport const projectAssetsColumns: ColumnDef<Asset>[] = [\n  {\n    id: \"select\",\n    header: ({ table }) => (\n      <Checkbox\n        checked={\n          table.getIsAllPageRowsSelected() ||\n          (table.getIsSomePageRowsSelected() && \"indeterminate\")\n        }\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n        aria-label=\"Select all\"\n      />\n    ),\n    cell: ({ row }) => (\n      <Checkbox\n        checked={row.getIsSelected()}\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\n        aria-label=\"Select row\"\n      />\n    ),\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: \"title\",\n    header: ({ column }) => {\n      return (\n        <Button\n          variant=\"ghost\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n        >\n          Asset\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      );\n    },\n    cell: ({ row }) => {\n      const asset = row.original;\n      \n      return (\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"flex-shrink-0\">\n            {getFileIcon(asset.type)}\n          </div>\n          <div className=\"flex flex-col min-w-0\">\n            <div className=\"font-medium truncate\">{asset.title}</div>\n            <div className=\"text-sm text-muted-foreground truncate\">\n              {asset.filename}\n            </div>\n          </div>\n        </div>\n      );\n    },\n  },\n  {\n    accessorKey: \"type\",\n    header: \"Type\",\n    cell: ({ row }) => {\n      const type = row.getValue(\"type\") as string;\n      return (\n        <Badge variant=\"outline\" className={getTypeColor(type)}>\n          {type}\n        </Badge>\n      );\n    },\n  },\n  {\n    accessorKey: \"fileSize\",\n    header: ({ column }) => {\n      return (\n        <Button\n          variant=\"ghost\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n        >\n          Size\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      );\n    },\n    cell: ({ row }) => {\n      const fileSize = row.getValue(\"fileSize\") as number;\n      return (\n        <div className=\"text-sm\">\n          {formatFileSize(fileSize)}\n        </div>\n      );\n    },\n  },\n  {\n    accessorKey: \"addedBy\",\n    header: \"Added By\",\n    cell: ({ row }) => {\n      const addedById = row.getValue(\"addedBy\") as string;\n      const addedBy = addedById ? getTeamMemberById(addedById) : null;\n      \n      if (!addedBy) return <div className=\"text-muted-foreground\">Unknown</div>;\n      \n      return (\n        <div className=\"flex items-center space-x-2\">\n          <Avatar className=\"h-6 w-6\">\n            <AvatarImage src={addedBy.avatarUrl} />\n            <AvatarFallback className=\"text-xs\">\n              {addedBy.name.split(\" \").map(n => n[0]).join(\"\")}\n            </AvatarFallback>\n          </Avatar>\n          <span className=\"text-sm\">{addedBy.name}</span>\n        </div>\n      );\n    },\n  },\n  {\n    accessorKey: \"assignedTo\",\n    header: \"Assigned To\",\n    cell: ({ row }) => {\n      const assignedToId = row.getValue(\"assignedTo\") as string;\n      const assignedTo = assignedToId ? getTeamMemberById(assignedToId) : null;\n      \n      if (!assignedTo) return <div className=\"text-muted-foreground\">Unassigned</div>;\n      \n      return (\n        <div className=\"flex items-center space-x-2\">\n          <Avatar className=\"h-6 w-6\">\n            <AvatarImage src={assignedTo.avatarUrl} />\n            <AvatarFallback className=\"text-xs\">\n              {assignedTo.name.split(\" \").map(n => n[0]).join(\"\")}\n            </AvatarFallback>\n          </Avatar>\n          <span className=\"text-sm\">{assignedTo.name}</span>\n        </div>\n      );\n    },\n  },\n  {\n    accessorKey: \"updatedAt\",\n    header: ({ column }) => {\n      return (\n        <Button\n          variant=\"ghost\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n        >\n          Updated\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      );\n    },\n    cell: ({ row }) => {\n      const updatedAt = row.getValue(\"updatedAt\") as string;\n      \n      if (!updatedAt) return <div className=\"text-muted-foreground\">No date</div>;\n      \n      const date = new Date(updatedAt);\n      \n      return (\n        <div className=\"flex items-center space-x-1\">\n          <span className=\"text-sm\">{format(date, \"MMM d, yyyy\")}</span>\n        </div>\n      );\n    },\n  },\n  {\n    id: \"actions\",\n    enableHiding: false,\n    cell: ({ row }) => {\n      const asset = row.original;\n\n      return (\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n              <span className=\"sr-only\">Open menu</span>\n              <MoreHorizontal className=\"h-4 w-4\" />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            <DropdownMenuLabel>Actions</DropdownMenuLabel>\n            <DropdownMenuItem>\n              <Eye className=\"mr-2 h-4 w-4\" />\n              View Asset\n            </DropdownMenuItem>\n            <DropdownMenuItem>\n              <Download className=\"mr-2 h-4 w-4\" />\n              Download\n            </DropdownMenuItem>\n            <DropdownMenuItem>\n              <Edit className=\"mr-2 h-4 w-4\" />\n              Edit Asset\n            </DropdownMenuItem>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem>\n              Share Asset\n            </DropdownMenuItem>\n            <DropdownMenuItem>\n              Move to Folder\n            </DropdownMenuItem>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem className=\"text-red-600\">\n              <Trash2 className=\"mr-2 h-4 w-4\" />\n              Delete Asset\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      );\n    },\n  },\n];\n\nexport function ProjectAssetsList({ project }: ProjectAssetsListProps) {\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([]);\n  const [columnVisibility, setColumnVisibility] = React.useState<VisibilityState>({});\n  const [rowSelection, setRowSelection] = React.useState({});\n  const [typeFilter, setTypeFilter] = React.useState<string>(\"all\");\n\n  const projectAssets = getAssetsByProjectId(project.id);\n\n  // Filter assets based on type\n  const filteredAssets = React.useMemo(() => {\n    let filtered = projectAssets;\n    \n    if (typeFilter !== \"all\") {\n      filtered = filtered.filter(asset => asset.type === typeFilter);\n    }\n    \n    return filtered;\n  }, [projectAssets, typeFilter]);\n\n  const table = useReactTable({\n    data: filteredAssets,\n    columns: projectAssetsColumns,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n    },\n  });\n\n  // Asset stats\n  const totalAssets = projectAssets.length;\n  const imageCount = projectAssets.filter(a => a.type === \"image\").length;\n  const videoCount = projectAssets.filter(a => a.type === \"video\").length;\n  const documentCount = projectAssets.filter(a => a.type === \"document\" || a.type === \"pdf\").length;\n\n  return (\n    <div className=\"space-y-0\">\n      {/* Assets Table */}\n      <div className=\"w-full flex flex-col gap-4\">\n        <div className=\"flex items-center gap-4\">\n          <Input\n            placeholder=\"Search assets...\"\n            value={(table.getColumn(\"title\")?.getFilterValue() as string) ?? \"\"}\n            onChange={(event) =>\n              table.getColumn(\"title\")?.setFilterValue(event.target.value)\n            }\n            className=\"max-w-sm\"\n          />\n          \n          <Select value={typeFilter} onValueChange={setTypeFilter}>\n            <SelectTrigger className=\"w-40\">\n              <SelectValue placeholder=\"Filter by type\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">All Types</SelectItem>\n              <SelectItem value=\"image\">Images</SelectItem>\n              <SelectItem value=\"video\">Videos</SelectItem>\n              <SelectItem value=\"pdf\">PDFs</SelectItem>\n              <SelectItem value=\"document\">Documents</SelectItem>\n              <SelectItem value=\"other\">Other</SelectItem>\n            </SelectContent>\n          </Select>\n          \n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"outline\" className=\"ml-auto\">\n                Columns <ChevronDown className=\"ml-2 h-4 w-4\" />\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              {table\n                .getAllColumns()\n                .filter((column) => column.getCanHide())\n                .map((column) => {\n                  return (\n                    <DropdownMenuCheckboxItem\n                      key={column.id}\n                      className=\"capitalize\"\n                      checked={column.getIsVisible()}\n                      onCheckedChange={(value) =>\n                        column.toggleVisibility(!!value)\n                      }\n                    >\n                      {column.id}\n                    </DropdownMenuCheckboxItem>\n                  );\n                })}\n            </DropdownMenuContent>\n          </DropdownMenu>\n          \n          <Button variant=\"default\">\n            <Upload className=\"h-4 w-4\" />\n            Upload Asset\n          </Button>\n        </div>\n        \n        <div className=\"overflow-hidden rounded-md border\">\n          <Table>\n            <TableHeader>\n              {table.getHeaderGroups().map((headerGroup) => (\n                <TableRow key={headerGroup.id}>\n                  {headerGroup.headers.map((header) => {\n                    return (\n                      <TableHead key={header.id}>\n                        {header.isPlaceholder\n                          ? null\n                          : flexRender(\n                              header.column.columnDef.header,\n                              header.getContext()\n                            )}\n                      </TableHead>\n                    );\n                  })}\n                </TableRow>\n              ))}\n            </TableHeader>\n            <TableBody>\n              {table.getRowModel().rows?.length ? (\n                table.getRowModel().rows.map((row) => (\n                  <TableRow\n                    key={row.id}\n                    data-state={row.getIsSelected() && \"selected\"}\n                  >\n                    {row.getVisibleCells().map((cell) => (\n                      <TableCell key={cell.id}>\n                        {flexRender(\n                          cell.column.columnDef.cell,\n                          cell.getContext()\n                        )}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell\n                    colSpan={projectAssetsColumns.length}\n                    className=\"h-24 text-center\"\n                  >\n                    No assets found.\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        \n        <div className=\"flex items-center justify-between space-x-2 py-4\">\n          <div className=\"text-muted-foreground flex-1 text-sm\">\n            {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\n            {table.getFilteredRowModel().rows.length} row(s) selected.\n          </div>\n          <div className=\"space-x-2\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => table.previousPage()}\n              disabled={!table.getCanPreviousPage()}\n            >\n              Previous\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => table.nextPage()}\n              disabled={!table.getCanNextPage()}\n            >\n              Next\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4294, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/projects/project-content-list.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  SortingState,\n  useReactTable,\n  VisibilityState,\n} from \"@tanstack/react-table\";\nimport { ArrowUpDown, ChevronDown, MoreHorizontal, Plus, Filter, Eye, Edit, Copy, Trash2, BookOpen, Mail, MessageSquare, FileText } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { \n  Content,\n  Project,\n  getContentByProjectId,\n  getTeamMemberById \n} from \"@/lib/utils/dummy-data\";\nimport { format } from \"date-fns\";\n\ninterface ProjectContentListProps {\n  project: Project;\n}\n\nconst getStatusColor = (status: string) => {\n  switch (status) {\n    case \"published\":\n      return \"bg-green-100 text-green-800\";\n    case \"approved\":\n      return \"bg-blue-100 text-blue-800\";\n    case \"pending\":\n      return \"bg-yellow-100 text-yellow-800\";\n    case \"draft\":\n      return \"bg-gray-100 text-gray-800\";\n    default:\n      return \"bg-gray-100 text-gray-800\";\n  }\n};\n\nconst getTypeIcon = (type: string) => {\n  switch (type) {\n    case \"blog_post\":\n      return <BookOpen className=\"h-4 w-4\" />;\n    case \"email\":\n      return <Mail className=\"h-4 w-4\" />;\n    case \"social\":\n      return <MessageSquare className=\"h-4 w-4\" />;\n    case \"page\":\n      return <FileText className=\"h-4 w-4\" />;\n    default:\n      return <FileText className=\"h-4 w-4\" />;\n  }\n};\n\nconst getTypeColor = (type: string) => {\n  switch (type) {\n    case \"blog_post\":\n      return \"bg-purple-100 text-purple-800\";\n    case \"email\":\n      return \"bg-blue-100 text-blue-800\";\n    case \"social\":\n      return \"bg-pink-100 text-pink-800\";\n    case \"page\":\n      return \"bg-green-100 text-green-800\";\n    case \"other\":\n      return \"bg-gray-100 text-gray-800\";\n    default:\n      return \"bg-gray-100 text-gray-800\";\n  }\n};\n\nexport const projectContentColumns: ColumnDef<Content>[] = [\n  {\n    id: \"select\",\n    header: ({ table }) => (\n      <Checkbox\n        checked={\n          table.getIsAllPageRowsSelected() ||\n          (table.getIsSomePageRowsSelected() && \"indeterminate\")\n        }\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n        aria-label=\"Select all\"\n      />\n    ),\n    cell: ({ row }) => (\n      <Checkbox\n        checked={row.getIsSelected()}\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\n        aria-label=\"Select row\"\n      />\n    ),\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: \"title\",\n    header: ({ column }) => {\n      return (\n        <Button\n          variant=\"ghost\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n        >\n          Content\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      );\n    },\n    cell: ({ row }) => {\n      const content = row.original;\n      \n      return (\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"flex-shrink-0\">\n            {getTypeIcon(content.type)}\n          </div>\n          <div className=\"flex flex-col min-w-0\">\n            <div className=\"font-medium truncate\">{content.title}</div>\n            {content.content && (\n              <div className=\"text-sm text-muted-foreground line-clamp-2\">\n                {content.content.slice(0, 80)}...\n              </div>\n            )}\n          </div>\n        </div>\n      );\n    },\n  },\n  {\n    accessorKey: \"status\",\n    header: \"Status\",\n    cell: ({ row }) => {\n      const status = row.getValue(\"status\") as string;\n      return (\n        <Badge variant=\"outline\" className={getStatusColor(status)}>\n          {status}\n        </Badge>\n      );\n    },\n  },\n  {\n    accessorKey: \"type\",\n    header: \"Type\",\n    cell: ({ row }) => {\n      const type = row.getValue(\"type\") as string;\n      return (\n        <Badge variant=\"outline\" className={getTypeColor(type)}>\n          {type.replace(\"_\", \" \")}\n        </Badge>\n      );\n    },\n  },\n  {\n    accessorKey: \"wordCount\",\n    header: ({ column }) => {\n      return (\n        <Button\n          variant=\"ghost\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n        >\n          Word Count\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      );\n    },\n    cell: ({ row }) => {\n      const wordCount = row.getValue(\"wordCount\") as number;\n      return (\n        <div className=\"text-sm\">\n          {wordCount ? `${wordCount} words` : \"—\"}\n        </div>\n      );\n    },\n  },\n  {\n    accessorKey: \"assignedTo\",\n    header: \"Assigned To\",\n    cell: ({ row }) => {\n      const assignedToId = row.getValue(\"assignedTo\") as string;\n      const assignedTo = assignedToId ? getTeamMemberById(assignedToId) : null;\n      \n      if (!assignedTo) return <div className=\"text-muted-foreground\">Unassigned</div>;\n      \n      return (\n        <div className=\"flex items-center space-x-2\">\n          <Avatar className=\"h-6 w-6\">\n            <AvatarImage src={assignedTo.avatarUrl} />\n            <AvatarFallback className=\"text-xs\">\n              {assignedTo.name.split(\" \").map(n => n[0]).join(\"\")}\n            </AvatarFallback>\n          </Avatar>\n          <span className=\"text-sm\">{assignedTo.name}</span>\n        </div>\n      );\n    },\n  },\n  {\n    accessorKey: \"updatedAt\",\n    header: ({ column }) => {\n      return (\n        <Button\n          variant=\"ghost\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n        >\n          Updated\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      );\n    },\n    cell: ({ row }) => {\n      const updatedAt = row.getValue(\"updatedAt\") as string;\n      \n      if (!updatedAt) return <div className=\"text-muted-foreground\">No date</div>;\n      \n      const date = new Date(updatedAt);\n      \n      return (\n        <div className=\"flex items-center space-x-1\">\n          <span className=\"text-sm\">{format(date, \"MMM d, yyyy\")}</span>\n        </div>\n      );\n    },\n  },\n  {\n    id: \"actions\",\n    enableHiding: false,\n    cell: ({ row }) => {\n      const content = row.original;\n\n      return (\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n              <span className=\"sr-only\">Open menu</span>\n              <MoreHorizontal className=\"h-4 w-4\" />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            <DropdownMenuLabel>Actions</DropdownMenuLabel>\n            <DropdownMenuItem>\n              <Eye className=\"mr-2 h-4 w-4\" />\n              View Content\n            </DropdownMenuItem>\n            <DropdownMenuItem>\n              <Edit className=\"mr-2 h-4 w-4\" />\n              Edit Content\n            </DropdownMenuItem>\n            <DropdownMenuItem>\n              <Copy className=\"mr-2 h-4 w-4\" />\n              Duplicate\n            </DropdownMenuItem>\n            <DropdownMenuSeparator />\n            {content.status === \"draft\" && (\n              <DropdownMenuItem>\n                Submit for Review\n              </DropdownMenuItem>\n            )}\n            {content.status === \"pending\" && (\n              <>\n                <DropdownMenuItem>\n                  Approve Content\n                </DropdownMenuItem>\n                <DropdownMenuItem>\n                  Request Changes\n                </DropdownMenuItem>\n              </>\n            )}\n            {content.status === \"approved\" && (\n              <DropdownMenuItem>\n                Publish Content\n              </DropdownMenuItem>\n            )}\n            <DropdownMenuSeparator />\n            <DropdownMenuItem>\n              AI Optimize\n            </DropdownMenuItem>\n            <DropdownMenuItem>\n              Translate\n            </DropdownMenuItem>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem className=\"text-red-600\">\n              <Trash2 className=\"mr-2 h-4 w-4\" />\n              Delete Content\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      );\n    },\n  },\n];\n\nexport function ProjectContentList({ project }: ProjectContentListProps) {\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([]);\n  const [columnVisibility, setColumnVisibility] = React.useState<VisibilityState>({});\n  const [rowSelection, setRowSelection] = React.useState({});\n  const [statusFilter, setStatusFilter] = React.useState<string>(\"all\");\n  const [typeFilter, setTypeFilter] = React.useState<string>(\"all\");\n\n  const projectContent = getContentByProjectId(project.id);\n\n  // Filter content based on status and type\n  const filteredContent = React.useMemo(() => {\n    let filtered = projectContent;\n    \n    if (statusFilter !== \"all\") {\n      filtered = filtered.filter(content => content.status === statusFilter);\n    }\n    \n    if (typeFilter !== \"all\") {\n      filtered = filtered.filter(content => content.type === typeFilter);\n    }\n    \n    return filtered;\n  }, [projectContent, statusFilter, typeFilter]);\n\n  const table = useReactTable({\n    data: filteredContent,\n    columns: projectContentColumns,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n    },\n  });\n\n  // Content stats\n  const totalContent = projectContent.length;\n  const draftCount = projectContent.filter(c => c.status === \"draft\").length;\n  const pendingCount = projectContent.filter(c => c.status === \"pending\").length;\n  const publishedCount = projectContent.filter(c => c.status === \"published\").length;\n\n  return (\n    <div className=\"space-y-0\">\n      {/* Content Table */}\n      <div className=\"w-full flex flex-col gap-4\">\n        <div className=\"flex items-center gap-4\">\n          <Input\n            placeholder=\"Search content...\"\n            value={(table.getColumn(\"title\")?.getFilterValue() as string) ?? \"\"}\n            onChange={(event) =>\n              table.getColumn(\"title\")?.setFilterValue(event.target.value)\n            }\n            className=\"max-w-sm\"\n          />\n          \n          <Select value={statusFilter} onValueChange={setStatusFilter}>\n            <SelectTrigger className=\"w-40\">\n              <SelectValue placeholder=\"Filter by status\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">All Status</SelectItem>\n              <SelectItem value=\"draft\">Draft</SelectItem>\n              <SelectItem value=\"pending\">Pending</SelectItem>\n              <SelectItem value=\"approved\">Approved</SelectItem>\n              <SelectItem value=\"published\">Published</SelectItem>\n            </SelectContent>\n          </Select>\n          \n          <Select value={typeFilter} onValueChange={setTypeFilter}>\n            <SelectTrigger className=\"w-40\">\n              <SelectValue placeholder=\"Filter by type\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">All Types</SelectItem>\n              <SelectItem value=\"blog_post\">Blog Post</SelectItem>\n              <SelectItem value=\"page\">Page</SelectItem>\n              <SelectItem value=\"email\">Email</SelectItem>\n              <SelectItem value=\"social\">Social Media</SelectItem>\n              <SelectItem value=\"other\">Other</SelectItem>\n            </SelectContent>\n          </Select>\n          \n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"outline\" className=\"ml-auto\">\n                Columns <ChevronDown className=\"ml-2 h-4 w-4\" />\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              {table\n                .getAllColumns()\n                .filter((column) => column.getCanHide())\n                .map((column) => {\n                  return (\n                    <DropdownMenuCheckboxItem\n                      key={column.id}\n                      className=\"capitalize\"\n                      checked={column.getIsVisible()}\n                      onCheckedChange={(value) =>\n                        column.toggleVisibility(!!value)\n                      }\n                    >\n                      {column.id}\n                    </DropdownMenuCheckboxItem>\n                  );\n                })}\n            </DropdownMenuContent>\n          </DropdownMenu>\n          \n          <Button variant=\"default\">\n            <Plus className=\"h-4 w-4\" />\n            Create Content\n          </Button>\n        </div>\n        \n        <div className=\"overflow-hidden rounded-md border\">\n          <Table>\n            <TableHeader>\n              {table.getHeaderGroups().map((headerGroup) => (\n                <TableRow key={headerGroup.id}>\n                  {headerGroup.headers.map((header) => {\n                    return (\n                      <TableHead key={header.id}>\n                        {header.isPlaceholder\n                          ? null\n                          : flexRender(\n                              header.column.columnDef.header,\n                              header.getContext()\n                            )}\n                      </TableHead>\n                    );\n                  })}\n                </TableRow>\n              ))}\n            </TableHeader>\n            <TableBody>\n              {table.getRowModel().rows?.length ? (\n                table.getRowModel().rows.map((row) => (\n                  <TableRow\n                    key={row.id}\n                    data-state={row.getIsSelected() && \"selected\"}\n                  >\n                    {row.getVisibleCells().map((cell) => (\n                      <TableCell key={cell.id}>\n                        {flexRender(\n                          cell.column.columnDef.cell,\n                          cell.getContext()\n                        )}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell\n                    colSpan={projectContentColumns.length}\n                    className=\"h-24 text-center\"\n                  >\n                    No content found.\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        \n        <div className=\"flex items-center justify-between space-x-2 py-4\">\n          <div className=\"text-muted-foreground flex-1 text-sm\">\n            {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\n            {table.getFilteredRowModel().rows.length} row(s) selected.\n          </div>\n          <div className=\"space-x-2\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => table.previousPage()}\n              disabled={!table.getCanPreviousPage()}\n            >\n              Previous\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => table.nextPage()}\n              disabled={!table.getCanNextPage()}\n            >\n              Next\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5304, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-4 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,2QAAC,sMAAmB;QAClB,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 5331, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/projects/project-team.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Label } from \"@/components/ui/label\";\nimport { \n  Users, \n  Plus, \n  MoreHorizontal, \n  Mail, \n  UserMinus,\n  Crown,\n  Search,\n  Settings,\n  MessageCircle\n} from \"lucide-react\";\nimport { \n  Project,\n  getTeamMemberById,\n  team,\n  getTasksByProjectId\n} from \"@/lib/utils/dummy-data\";\nimport { format } from \"date-fns\";\n\ninterface ProjectTeamProps {\n  project: Project;\n}\n\nexport function ProjectTeam({ project }: ProjectTeamProps) {\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [isAddMemberOpen, setIsAddMemberOpen] = React.useState(false);\n  const [selectedRole, setSelectedRole] = React.useState(\"\");\n  const [selectedMember, setSelectedMember] = React.useState(\"\");\n  \n  // Get project team members\n  const projectTeamMembers = (project.assignedTo || [])\n    .map(id => getTeamMemberById(id))\n    .filter(Boolean);\n  \n  // Get available team members not in project\n  const availableMembers = team.filter(member => \n    !project.assignedTo?.includes(member.id)\n  );\n  \n  // Filter team members\n  const filteredTeamMembers = React.useMemo(() => {\n    if (!searchTerm) return projectTeamMembers;\n    \n    return projectTeamMembers.filter(member => \n      member && member.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n  }, [projectTeamMembers, searchTerm]);\n\n  // Get team member stats\n  const getTeamMemberStats = (memberId: string) => {\n    const tasks = getTasksByProjectId(project.id).filter(task => task.assignedTo === memberId);\n    const completedTasks = tasks.filter(task => task.status === \"completed\");\n    \n    return {\n      totalTasks: tasks.length,\n      completedTasks: completedTasks.length,\n      activeTasks: tasks.length - completedTasks.length\n    };\n  };\n\n  const getRoleBadgeColor = (role: string) => {\n    switch (role) {\n      case \"admin\":\n        return \"bg-red-100 text-red-800\";\n      case \"manager\":\n        return \"bg-purple-100 text-purple-800\";\n      case \"designer\":\n        return \"bg-blue-100 text-blue-800\";\n      case \"developer\":\n        return \"bg-green-100 text-green-800\";\n      case \"content_writer\":\n        return \"bg-yellow-100 text-yellow-800\";\n      default:\n        return \"bg-gray-100 text-gray-800\";\n    }\n  };\n\n  const handleAddMember = () => {\n    // In a real app, this would make an API call\n    console.log(\"Adding member:\", selectedMember, \"with role:\", selectedRole);\n    setIsAddMemberOpen(false);\n    setSelectedMember(\"\");\n    setSelectedRole(\"\");\n  };\n\n  return (\n    <div className=\"space-y-0\">\n      {/* Team Members List */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <CardTitle>Team Members</CardTitle>\n            <Dialog open={isAddMemberOpen} onOpenChange={setIsAddMemberOpen}>\n              <DialogTrigger asChild>\n                <Button>\n                  <Plus className=\"h-4 w-4 mr-2\" />\n                  Add Member\n                </Button>\n              </DialogTrigger>\n              <DialogContent className=\"sm:max-w-[425px]\">\n                <DialogHeader>\n                  <DialogTitle>Add Team Member</DialogTitle>\n                  <DialogDescription>\n                    Add a new member to this project team.\n                  </DialogDescription>\n                </DialogHeader>\n                <div className=\"grid gap-4 py-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"member\">Select Member</Label>\n                    <Select value={selectedMember} onValueChange={setSelectedMember}>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Choose a team member\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {availableMembers.map((member) => (\n                          <SelectItem key={member.id} value={member.id}>\n                            <div className=\"flex items-center space-x-2\">\n                              <Avatar className=\"h-6 w-6\">\n                                <AvatarImage src={member.avatarUrl} />\n                                <AvatarFallback className=\"text-xs\">\n                                  {member.name.split(\" \").map(n => n[0]).join(\"\")}\n                                </AvatarFallback>\n                              </Avatar>\n                              <div>\n                                <div className=\"font-medium\">{member.name}</div>\n                                <div className=\"text-xs text-muted-foreground\">{member.role}</div>\n                              </div>\n                            </div>\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"role\">Project Role</Label>\n                    <Select value={selectedRole} onValueChange={setSelectedRole}>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select project role\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"lead\">Project Lead</SelectItem>\n                        <SelectItem value=\"contributor\">Contributor</SelectItem>\n                        <SelectItem value=\"reviewer\">Reviewer</SelectItem>\n                        <SelectItem value=\"viewer\">Viewer</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n                <DialogFooter>\n                  <Button variant=\"outline\" onClick={() => setIsAddMemberOpen(false)}>\n                    Cancel\n                  </Button>\n                  <Button onClick={handleAddMember} disabled={!selectedMember || !selectedRole}>\n                    Add Member\n                  </Button>\n                </DialogFooter>\n              </DialogContent>\n            </Dialog>\n          </div>\n        </CardHeader>\n        <CardContent>\n          {/* Search */}\n          <div className=\"flex items-center space-x-2 mb-6\">\n            <Search className=\"h-4 w-4 text-muted-foreground\" />\n            <Input\n              placeholder=\"Search team members...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"max-w-sm\"\n            />\n          </div>\n\n          {/* Team Members Grid */}\n          {filteredTeamMembers.length > 0 ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {filteredTeamMembers.map((member) => {\n                if (!member) return null;\n                const stats = getTeamMemberStats(member.id);\n                \n                return (\n                  <Card key={member.id} className=\"hover:shadow-md transition-shadow\">\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex items-start justify-between\">\n                        <div className=\"flex items-start space-x-3\">\n                          <Avatar className=\"h-12 w-12\">\n                            <AvatarImage src={member.avatarUrl} />\n                            <AvatarFallback>\n                              {member.name.split(\" \").map(n => n[0]).join(\"\")}\n                            </AvatarFallback>\n                          </Avatar>\n                          \n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center space-x-2 mb-1\">\n                              <h4 className=\"font-medium\">{member.name}</h4>\n                              <Badge variant=\"outline\" className={getRoleBadgeColor(member.role)}>\n                                {member.role.replace(\"_\", \" \")}\n                              </Badge>\n                            </div>\n                            \n                            <p className=\"text-sm text-muted-foreground mb-2\">\n                              {member.email}\n                            </p>\n                            \n                            <div className=\"grid grid-cols-3 gap-4 text-xs\">\n                              <div className=\"text-center p-1 bg-gray-50 rounded\">\n                                <div className=\"font-medium\">{stats.totalTasks}</div>\n                                <div className=\"text-muted-foreground\">Total</div>\n                              </div>\n                              <div className=\"text-center p-1 bg-blue-50 rounded\">\n                                <div className=\"font-medium text-blue-600\">{stats.activeTasks}</div>\n                                <div className=\"text-muted-foreground\">Active</div>\n                              </div>\n                              <div className=\"text-center p-1 bg-green-50 rounded\">\n                                <div className=\"font-medium text-green-600\">{stats.completedTasks}</div>\n                                <div className=\"text-muted-foreground\">Done</div>\n                              </div>\n                            </div>\n                            \n                            <div className=\"text-xs text-muted-foreground mt-2\">\n                              Joined {format(new Date(member.joinedAt), \"MMM yyyy\")}\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <DropdownMenu>\n                          <DropdownMenuTrigger asChild>\n                            <Button variant=\"ghost\" size=\"sm\" className=\"h-8 w-8 p-0\">\n                              <MoreHorizontal className=\"h-4 w-4\" />\n                            </Button>\n                          </DropdownMenuTrigger>\n                          <DropdownMenuContent align=\"end\">\n                            <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                            <DropdownMenuItem>\n                              <Mail className=\"mr-2 h-4 w-4\" />\n                              Send Message\n                            </DropdownMenuItem>\n                            <DropdownMenuItem>\n                              <Settings className=\"mr-2 h-4 w-4\" />\n                              Change Role\n                            </DropdownMenuItem>\n                            <DropdownMenuSeparator />\n                            <DropdownMenuItem className=\"text-red-600\">\n                              <UserMinus className=\"mr-2 h-4 w-4\" />\n                              Remove from Project\n                            </DropdownMenuItem>\n                          </DropdownMenuContent>\n                        </DropdownMenu>\n                      </div>\n                    </CardContent>\n                  </Card>\n                );\n              })}\n            </div>\n          ) : (\n            <div className=\"text-center py-12\">\n              <Users className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium mb-2\">No team members found</h3>\n              <p className=\"text-muted-foreground mb-4\">\n                {searchTerm \n                  ? \"No team members match your search.\" \n                  : \"Add team members to collaborate on this project.\"}\n              </p>\n              {!searchTerm && (\n                <Button onClick={() => setIsAddMemberOpen(true)}>\n                  <Plus className=\"h-4 w-4 mr-2\" />\n                  Add First Member\n                </Button>\n              )}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6138, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,ucACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 6162, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/modals/create-document-modal.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Textarea } from '@/components/ui/textarea'\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select'\nimport { Badge } from '@/components/ui/badge'\nimport { projects, team } from '@/lib/utils/dummy-data'\nimport { X, Plus } from 'lucide-react'\n\ninterface CreateDocumentModalProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  onDocumentCreated: (document: any) => void\n}\n\nexport function CreateDocumentModal({\n  open,\n  onOpenChange,\n  onDocumentCreated\n}: CreateDocumentModalProps) {\n  const [loading, setLoading] = useState(false)\n  const [tagInput, setTagInput] = useState('')\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    content: '',\n    category: 'Guide',\n    type: 'Guide',\n    status: 'draft',\n    projectId: '',\n    tags: [] as string[]\n  })\n\n  const categories = [\n    'Setup', 'API', 'Design', 'Research', 'Operations', 'Security', 'General'\n  ]\n\n  const types = [\n    'Guide', 'Reference', 'Tutorial', 'FAQ', 'Checklist', 'Report', 'Guidelines'\n  ]\n\n  const statuses = [\n    { value: 'draft', label: 'Draft' },\n    { value: 'review', label: 'In Review' },\n    { value: 'published', label: 'Published' }\n  ]\n\n  const handleSubmit = async () => {\n    if (!formData.title.trim() || !formData.description.trim()) {\n      return\n    }\n\n    setLoading(true)\n\n    try {\n      const newDocument = {\n        id: `doc_${Date.now()}`,\n        title: formData.title,\n        description: formData.description,\n        content: formData.content,\n        category: formData.category,\n        type: formData.type,\n        status: formData.status,\n        author: 'u1', // Current user ID\n        projectId: formData.projectId || null,\n        tags: formData.tags,\n        wordCount: formData.content.split(' ').length,\n        readTime: Math.max(1, Math.ceil(formData.content.split(' ').length / 200)),\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      }\n\n      onDocumentCreated(newDocument)\n      \n      // Reset form\n      setFormData({\n        title: '',\n        description: '',\n        content: '',\n        category: 'Guide',\n        type: 'Guide',\n        status: 'draft',\n        projectId: '',\n        tags: []\n      })\n      setTagInput('')\n    } catch (error) {\n      console.error('Error creating document:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const addTag = () => {\n    const tag = tagInput.trim().toLowerCase()\n    if (tag && !formData.tags.includes(tag)) {\n      setFormData(prev => ({\n        ...prev,\n        tags: [...prev.tags, tag]\n      }))\n      setTagInput('')\n    }\n  }\n\n  const removeTag = (tagToRemove: string) => {\n    setFormData(prev => ({\n      ...prev,\n      tags: prev.tags.filter(tag => tag !== tagToRemove)\n    }))\n  }\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      e.preventDefault()\n      addTag()\n    }\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>Create New Document</DialogTitle>\n          <DialogDescription>\n            Add new documentation to your knowledge base\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-4\">\n          {/* Title */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"title\">Title *</Label>\n            <Input\n              id=\"title\"\n              placeholder=\"Document title\"\n              value={formData.title}\n              onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n            />\n          </div>\n\n          {/* Description */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"description\">Description *</Label>\n            <Textarea\n              id=\"description\"\n              placeholder=\"Brief description of the document\"\n              rows={3}\n              value={formData.description}\n              onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n            />\n          </div>\n\n          {/* Category and Type */}\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"category\">Category</Label>\n              <Select\n                value={formData.category}\n                onValueChange={(value) => setFormData(prev => ({ ...prev, category: value }))}\n              >\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {categories.map((category) => (\n                    <SelectItem key={category} value={category}>\n                      {category}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"type\">Type</Label>\n              <Select\n                value={formData.type}\n                onValueChange={(value) => setFormData(prev => ({ ...prev, type: value }))}\n              >\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {types.map((type) => (\n                    <SelectItem key={type} value={type}>\n                      {type}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n\n          {/* Project and Status */}\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"project\">Project (Optional)</Label>\n              <Select\n                value={formData.projectId}\n                onValueChange={(value) => setFormData(prev => ({ ...prev, projectId: value }))}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select project\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"\">No Project</SelectItem>\n                  {projects.map((project) => (\n                    <SelectItem key={project.id} value={project.id}>\n                      {project.title}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"status\">Status</Label>\n              <Select\n                value={formData.status}\n                onValueChange={(value) => setFormData(prev => ({ ...prev, status: value }))}\n              >\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {statuses.map((status) => (\n                    <SelectItem key={status.value} value={status.value}>\n                      {status.label}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n\n          {/* Tags */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"tags\">Tags</Label>\n            <div className=\"flex flex-wrap gap-2 mb-2\">\n              {formData.tags.map((tag) => (\n                <Badge key={tag} variant=\"secondary\" className=\"flex items-center gap-1\">\n                  {tag}\n                  <button\n                    type=\"button\"\n                    onClick={() => removeTag(tag)}\n                    className=\"ml-1 hover:text-destructive\"\n                  >\n                    <X className=\"h-3 w-3\" />\n                  </button>\n                </Badge>\n              ))}\n            </div>\n            <div className=\"flex gap-2\">\n              <Input\n                placeholder=\"Add tag\"\n                value={tagInput}\n                onChange={(e) => setTagInput(e.target.value)}\n                onKeyPress={handleKeyPress}\n              />\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={addTag}\n                disabled={!tagInput.trim()}\n              >\n                <Plus className=\"h-4 w-4\" />\n              </Button>\n            </div>\n          </div>\n\n          {/* Content */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"content\">Content</Label>\n            <Textarea\n              id=\"content\"\n              placeholder=\"Document content (Markdown supported)\"\n              rows={8}\n              value={formData.content}\n              onChange={(e) => setFormData(prev => ({ ...prev, content: e.target.value }))}\n            />\n            <p className=\"text-xs text-muted-foreground\">\n              Word count: {formData.content.split(' ').filter(word => word.length > 0).length} words\n              {formData.content && ` • Est. read time: ${Math.max(1, Math.ceil(formData.content.split(' ').filter(word => word.length > 0).length / 200))} min`}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"flex justify-end space-x-2 pt-4 border-t\">\n          <Button variant=\"outline\" onClick={() => onOpenChange(false)}>\n            Cancel\n          </Button>\n          <Button \n            onClick={handleSubmit} \n            disabled={loading || !formData.title.trim() || !formData.description.trim()}\n          >\n            {loading ? 'Creating...' : 'Create Document'}\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAOA;AAOA;AACA;AACA;AAAA;AAvBA;;;;;;;;;;;;AA+BO,SAAS,oBAAoB,EAClC,IAAI,EACJ,YAAY,EACZ,iBAAiB,EACQ;IACzB,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,8OAAQ,EAAC;IACvC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,8OAAQ,EAAC;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,8OAAQ,EAAC;QACvC,OAAO;QACP,aAAa;QACb,SAAS;QACT,UAAU;QACV,MAAM;QACN,QAAQ;QACR,WAAW;QACX,MAAM,EAAE;IACV;IAEA,MAAM,aAAa;QACjB;QAAS;QAAO;QAAU;QAAY;QAAc;QAAY;KACjE;IAED,MAAM,QAAQ;QACZ;QAAS;QAAa;QAAY;QAAO;QAAa;QAAU;KACjE;IAED,MAAM,WAAW;QACf;YAAE,OAAO;YAAS,OAAO;QAAQ;QACjC;YAAE,OAAO;YAAU,OAAO;QAAY;QACtC;YAAE,OAAO;YAAa,OAAO;QAAY;KAC1C;IAED,MAAM,eAAe;QACnB,IAAI,CAAC,SAAS,KAAK,CAAC,IAAI,MAAM,CAAC,SAAS,WAAW,CAAC,IAAI,IAAI;YAC1D;QACF;QAEA,WAAW;QAEX,IAAI;YACF,MAAM,cAAc;gBAClB,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,IAAI;gBACvB,OAAO,SAAS,KAAK;gBACrB,aAAa,SAAS,WAAW;gBACjC,SAAS,SAAS,OAAO;gBACzB,UAAU,SAAS,QAAQ;gBAC3B,MAAM,SAAS,IAAI;gBACnB,QAAQ,SAAS,MAAM;gBACvB,QAAQ;gBACR,WAAW,SAAS,SAAS,IAAI;gBACjC,MAAM,SAAS,IAAI;gBACnB,WAAW,SAAS,OAAO,CAAC,KAAK,CAAC,KAAK,MAAM;gBAC7C,UAAU,KAAK,GAAG,CAAC,GAAG,KAAK,IAAI,CAAC,SAAS,OAAO,CAAC,KAAK,CAAC,KAAK,MAAM,GAAG;gBACrE,WAAW,IAAI,OAAO,WAAW;gBACjC,WAAW,IAAI,OAAO,WAAW;YACnC;YAEA,kBAAkB;YAElB,aAAa;YACb,YAAY;gBACV,OAAO;gBACP,aAAa;gBACb,SAAS;gBACT,UAAU;gBACV,MAAM;gBACN,QAAQ;gBACR,WAAW;gBACX,MAAM,EAAE;YACV;YACA,YAAY;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;QAC5C,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,SAAS;QACb,MAAM,MAAM,SAAS,IAAI,GAAG,WAAW;QACvC,IAAI,OAAO,CAAC,SAAS,IAAI,CAAC,QAAQ,CAAC,MAAM;YACvC,YAAY,CAAA,OAAQ,CAAC;oBACnB,GAAG,IAAI;oBACP,MAAM;2BAAI,KAAK,IAAI;wBAAE;qBAAI;gBAC3B,CAAC;YACD,YAAY;QACd;IACF;IAEA,MAAM,YAAY,CAAC;QACjB,YAAY,CAAA,OAAQ,CAAC;gBACnB,GAAG,IAAI;gBACP,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,CAAA,MAAO,QAAQ;YACxC,CAAC;IACH;IAEA,MAAM,iBAAiB,CAAC;QACtB,IAAI,EAAE,GAAG,KAAK,SAAS;YACrB,EAAE,cAAc;YAChB;QACF;IACF;IAEA,qBACE,2QAAC,yKAAM;QAAC,MAAM;QAAM,cAAc;kBAChC,cAAA,2QAAC,gLAAa;YAAC,WAAU;;8BACvB,2QAAC,+KAAY;;sCACX,2QAAC,8KAAW;sCAAC;;;;;;sCACb,2QAAC,oLAAiB;sCAAC;;;;;;;;;;;;8BAKrB,2QAAC;oBAAI,WAAU;;sCAEb,2QAAC;4BAAI,WAAU;;8CACb,2QAAC,uKAAK;oCAAC,SAAQ;8CAAQ;;;;;;8CACvB,2QAAC,uKAAK;oCACJ,IAAG;oCACH,aAAY;oCACZ,OAAO,SAAS,KAAK;oCACrB,UAAU,CAAC,IAAM,YAAY,CAAA,OAAQ,CAAC;gDAAE,GAAG,IAAI;gDAAE,OAAO,EAAE,MAAM,CAAC,KAAK;4CAAC,CAAC;;;;;;;;;;;;sCAK5E,2QAAC;4BAAI,WAAU;;8CACb,2QAAC,uKAAK;oCAAC,SAAQ;8CAAc;;;;;;8CAC7B,2QAAC,6KAAQ;oCACP,IAAG;oCACH,aAAY;oCACZ,MAAM;oCACN,OAAO,SAAS,WAAW;oCAC3B,UAAU,CAAC,IAAM,YAAY,CAAA,OAAQ,CAAC;gDAAE,GAAG,IAAI;gDAAE,aAAa,EAAE,MAAM,CAAC,KAAK;4CAAC,CAAC;;;;;;;;;;;;sCAKlF,2QAAC;4BAAI,WAAU;;8CACb,2QAAC;oCAAI,WAAU;;sDACb,2QAAC,uKAAK;4CAAC,SAAQ;sDAAW;;;;;;sDAC1B,2QAAC,yKAAM;4CACL,OAAO,SAAS,QAAQ;4CACxB,eAAe,CAAC,QAAU,YAAY,CAAA,OAAQ,CAAC;wDAAE,GAAG,IAAI;wDAAE,UAAU;oDAAM,CAAC;;8DAE3E,2QAAC,gLAAa;8DACZ,cAAA,2QAAC,8KAAW;;;;;;;;;;8DAEd,2QAAC,gLAAa;8DACX,WAAW,GAAG,CAAC,CAAC,yBACf,2QAAC,6KAAU;4DAAgB,OAAO;sEAC/B;2DADc;;;;;;;;;;;;;;;;;;;;;;8CAQzB,2QAAC;oCAAI,WAAU;;sDACb,2QAAC,uKAAK;4CAAC,SAAQ;sDAAO;;;;;;sDACtB,2QAAC,yKAAM;4CACL,OAAO,SAAS,IAAI;4CACpB,eAAe,CAAC,QAAU,YAAY,CAAA,OAAQ,CAAC;wDAAE,GAAG,IAAI;wDAAE,MAAM;oDAAM,CAAC;;8DAEvE,2QAAC,gLAAa;8DACZ,cAAA,2QAAC,8KAAW;;;;;;;;;;8DAEd,2QAAC,gLAAa;8DACX,MAAM,GAAG,CAAC,CAAC,qBACV,2QAAC,6KAAU;4DAAY,OAAO;sEAC3B;2DADc;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAU3B,2QAAC;4BAAI,WAAU;;8CACb,2QAAC;oCAAI,WAAU;;sDACb,2QAAC,uKAAK;4CAAC,SAAQ;sDAAU;;;;;;sDACzB,2QAAC,yKAAM;4CACL,OAAO,SAAS,SAAS;4CACzB,eAAe,CAAC,QAAU,YAAY,CAAA,OAAQ,CAAC;wDAAE,GAAG,IAAI;wDAAE,WAAW;oDAAM,CAAC;;8DAE5E,2QAAC,gLAAa;8DACZ,cAAA,2QAAC,8KAAW;wDAAC,aAAY;;;;;;;;;;;8DAE3B,2QAAC,gLAAa;;sEACZ,2QAAC,6KAAU;4DAAC,OAAM;sEAAG;;;;;;wDACpB,6KAAQ,CAAC,GAAG,CAAC,CAAC,wBACb,2QAAC,6KAAU;gEAAkB,OAAO,QAAQ,EAAE;0EAC3C,QAAQ,KAAK;+DADC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;8CAQnC,2QAAC;oCAAI,WAAU;;sDACb,2QAAC,uKAAK;4CAAC,SAAQ;sDAAS;;;;;;sDACxB,2QAAC,yKAAM;4CACL,OAAO,SAAS,MAAM;4CACtB,eAAe,CAAC,QAAU,YAAY,CAAA,OAAQ,CAAC;wDAAE,GAAG,IAAI;wDAAE,QAAQ;oDAAM,CAAC;;8DAEzE,2QAAC,gLAAa;8DACZ,cAAA,2QAAC,8KAAW;;;;;;;;;;8DAEd,2QAAC,gLAAa;8DACX,SAAS,GAAG,CAAC,CAAC,uBACb,2QAAC,6KAAU;4DAAoB,OAAO,OAAO,KAAK;sEAC/C,OAAO,KAAK;2DADE,OAAO,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAUvC,2QAAC;4BAAI,WAAU;;8CACb,2QAAC,uKAAK;oCAAC,SAAQ;8CAAO;;;;;;8CACtB,2QAAC;oCAAI,WAAU;8CACZ,SAAS,IAAI,CAAC,GAAG,CAAC,CAAC,oBAClB,2QAAC,uKAAK;4CAAW,SAAQ;4CAAY,WAAU;;gDAC5C;8DACD,2QAAC;oDACC,MAAK;oDACL,SAAS,IAAM,UAAU;oDACzB,WAAU;8DAEV,cAAA,2QAAC,8NAAC;wDAAC,WAAU;;;;;;;;;;;;2CAPL;;;;;;;;;;8CAYhB,2QAAC;oCAAI,WAAU;;sDACb,2QAAC,uKAAK;4CACJ,aAAY;4CACZ,OAAO;4CACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4CAC3C,YAAY;;;;;;sDAEd,2QAAC,yKAAM;4CACL,MAAK;4CACL,SAAQ;4CACR,MAAK;4CACL,SAAS;4CACT,UAAU,CAAC,SAAS,IAAI;sDAExB,cAAA,2QAAC,uOAAI;gDAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;sCAMtB,2QAAC;4BAAI,WAAU;;8CACb,2QAAC,uKAAK;oCAAC,SAAQ;8CAAU;;;;;;8CACzB,2QAAC,6KAAQ;oCACP,IAAG;oCACH,aAAY;oCACZ,MAAM;oCACN,OAAO,SAAS,OAAO;oCACvB,UAAU,CAAC,IAAM,YAAY,CAAA,OAAQ,CAAC;gDAAE,GAAG,IAAI;gDAAE,SAAS,EAAE,MAAM,CAAC,KAAK;4CAAC,CAAC;;;;;;8CAE5E,2QAAC;oCAAE,WAAU;;wCAAgC;wCAC9B,SAAS,OAAO,CAAC,KAAK,CAAC,KAAK,MAAM,CAAC,CAAA,OAAQ,KAAK,MAAM,GAAG,GAAG,MAAM;wCAAC;wCAC/E,SAAS,OAAO,IAAI,CAAC,mBAAmB,EAAE,KAAK,GAAG,CAAC,GAAG,KAAK,IAAI,CAAC,SAAS,OAAO,CAAC,KAAK,CAAC,KAAK,MAAM,CAAC,CAAA,OAAQ,KAAK,MAAM,GAAG,GAAG,MAAM,GAAG,MAAM,IAAI,CAAC;;;;;;;;;;;;;;;;;;;8BAKvJ,2QAAC;oBAAI,WAAU;;sCACb,2QAAC,yKAAM;4BAAC,SAAQ;4BAAU,SAAS,IAAM,aAAa;sCAAQ;;;;;;sCAG9D,2QAAC,yKAAM;4BACL,SAAS;4BACT,UAAU,WAAW,CAAC,SAAS,KAAK,CAAC,IAAI,MAAM,CAAC,SAAS,WAAW,CAAC,IAAI;sCAExE,UAAU,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;AAMvC","debugId":null}},
    {"offset": {"line": 6824, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/projects/project-documentation.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useMemo } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Badge } from '@/components/ui/badge'\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select'\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu'\nimport { \n  Search, \n  Plus, \n  FileText, \n  MoreHorizontal,\n  Eye,\n  Edit,\n  Copy,\n  Download,\n  Share,\n  Trash2,\n  Clock,\n  User,\n  BookOpen,\n  Filter\n} from 'lucide-react'\nimport { team } from '@/lib/utils/dummy-data'\nimport { format } from 'date-fns'\nimport { CreateDocumentModal } from '@/components/modals/create-document-modal'\n\ninterface ProjectDocumentationProps {\n  projectId: string\n}\n\n// Mock project documentation data - filter by projectId\nconst getProjectDocumentation = (projectId: string) => [\n  {\n    id: \"doc1\",\n    title: \"Project Setup Guide\",\n    description: \"Complete guide for setting up this project\",\n    category: \"Setup\",\n    type: \"Guide\",\n    status: \"published\",\n    author: \"u1\",\n    projectId: projectId,\n    createdAt: \"2025-09-01T10:00:00Z\",\n    updatedAt: \"2025-09-10T14:30:00Z\",\n    tags: [\"setup\", \"getting-started\", \"configuration\"],\n    wordCount: 1250,\n    readTime: 5\n  },\n  {\n    id: \"doc2\",\n    title: \"API Documentation\",\n    description: \"RESTful API endpoints for this project\",\n    category: \"API\",\n    type: \"Reference\",\n    status: \"published\",\n    author: \"u2\",\n    projectId: projectId,\n    createdAt: \"2025-08-15T09:00:00Z\",\n    updatedAt: \"2025-09-08T16:45:00Z\",\n    tags: [\"api\", \"endpoints\", \"integration\"],\n    wordCount: 3200,\n    readTime: 12\n  },\n  {\n    id: \"doc3\",\n    title: \"Design System\",\n    description: \"Brand guidelines and component library\",\n    category: \"Design\",\n    type: \"Guidelines\",\n    status: \"draft\",\n    author: \"u3\",\n    projectId: projectId,\n    createdAt: \"2025-09-05T11:20:00Z\",\n    updatedAt: \"2025-09-11T10:15:00Z\",\n    tags: [\"design\", \"branding\", \"components\"],\n    wordCount: 890,\n    readTime: 4\n  },\n  {\n    id: \"doc4\",\n    title: \"Deployment Guide\",\n    description: \"Step-by-step deployment procedures\",\n    category: \"Operations\",\n    type: \"Guide\",\n    status: \"review\",\n    author: \"u2\",\n    projectId: projectId,\n    createdAt: \"2025-09-07T13:30:00Z\",\n    updatedAt: \"2025-09-09T09:20:00Z\",\n    tags: [\"deployment\", \"operations\", \"production\"],\n    wordCount: 1800,\n    readTime: 7\n  }\n]\n\nexport function ProjectDocumentation({ projectId }: ProjectDocumentationProps) {\n  const [searchTerm, setSearchTerm] = useState('')\n  const [statusFilter, setStatusFilter] = useState<string>('all')\n  const [categoryFilter, setCategoryFilter] = useState<string>('all')\n  const [createModalOpen, setCreateModalOpen] = useState(false)\n\n  const documentation = getProjectDocumentation(projectId)\n\n  const filteredDocumentation = useMemo(() => {\n    return documentation.filter(doc => {\n      const matchesSearch = doc.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           doc.description.toLowerCase().includes(searchTerm.toLowerCase())\n      const matchesStatus = statusFilter === 'all' || doc.status === statusFilter\n      const matchesCategory = categoryFilter === 'all' || doc.category === categoryFilter\n      \n      return matchesSearch && matchesStatus && matchesCategory\n    })\n  }, [documentation, searchTerm, statusFilter, categoryFilter])\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'published':\n        return 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-300'\n      case 'draft':\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-300'\n      case 'review':\n        return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-300'\n      default:\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-300'\n    }\n  }\n\n  const getCategoryIcon = (category: string) => {\n    switch (category) {\n      case 'API':\n        return '🔌'\n      case 'Design':\n        return '🎨'\n      case 'Setup':\n        return '🚀'\n      case 'Operations':\n        return '⚙️'\n      default:\n        return '📄'\n    }\n  }\n\n  const getAuthor = (userId: string) => team.find(t => t.id === userId)\n\n  const handleDocumentAction = (action: string, document: any) => {\n    switch (action) {\n      case 'view':\n        console.log('View document:', document.id)\n        break\n      case 'edit':\n        console.log('Edit document:', document.id)\n        break\n      case 'copy':\n        console.log('Copy document link:', document.id)\n        break\n      case 'download':\n        console.log('Download document:', document.id)\n        break\n      case 'share':\n        console.log('Share document:', document.id)\n        break\n      case 'delete':\n        console.log('Delete document:', document.id)\n        break\n      default:\n        break\n    }\n  }\n\n  const handleDocumentCreate = (newDocument: any) => {\n    console.log('Document created for project:', projectId, newDocument)\n    setCreateModalOpen(false)\n  }\n\n  // Calculate stats\n  const totalDocs = documentation.length\n  const publishedDocs = documentation.filter(d => d.status === 'published').length\n  const draftDocs = documentation.filter(d => d.status === 'draft').length\n  const totalWords = documentation.reduce((sum, doc) => sum + doc.wordCount, 0)\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Filters */}\n      <div className=\"flex items-center space-x-4\">\n        <div className=\"relative flex-1 max-w-sm\">\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\n          <Input\n            placeholder=\"Search documentation...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"pl-10\"\n          />\n        </div>\n        \n        <Select value={statusFilter} onValueChange={setStatusFilter}>\n          <SelectTrigger className=\"w-40\">\n            <Filter className=\"h-4 w-4 mr-2\" />\n            <SelectValue />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"all\">All Status</SelectItem>\n            <SelectItem value=\"published\">Published</SelectItem>\n            <SelectItem value=\"draft\">Draft</SelectItem>\n            <SelectItem value=\"review\">In Review</SelectItem>\n          </SelectContent>\n        </Select>\n\n        <Select value={categoryFilter} onValueChange={setCategoryFilter}>\n          <SelectTrigger className=\"w-40\">\n            <SelectValue placeholder=\"Category\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"all\">All Categories</SelectItem>\n            <SelectItem value=\"Setup\">Setup</SelectItem>\n            <SelectItem value=\"API\">API</SelectItem>\n            <SelectItem value=\"Design\">Design</SelectItem>\n            <SelectItem value=\"Operations\">Operations</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      {/* Documentation Grid */}\n      {filteredDocumentation.length === 0 ? (\n        <Card>\n          <CardContent className=\"text-center py-12\">\n            <BookOpen className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n              {documentation.length === 0 ? 'No documentation yet' : 'No documentation matches your search'}\n            </h3>\n            <p className=\"text-gray-500 mb-4\">\n              {documentation.length === 0 \n                ? 'Create your first document to get started'\n                : 'Try adjusting your search or filters'\n              }\n            </p>\n            {documentation.length === 0 && (\n              <Button onClick={() => setCreateModalOpen(true)}>\n                <Plus className=\"h-4 w-4 mr-2\" />\n                Create First Document\n              </Button>\n            )}\n          </CardContent>\n        </Card>\n      ) : (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {filteredDocumentation.map((doc) => {\n            const author = getAuthor(doc.author)\n            \n            return (\n              <Card key={doc.id} className=\"group hover:shadow-lg transition-shadow\">\n                <CardHeader className=\"pb-3\">\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"text-2xl\">{getCategoryIcon(doc.category)}</div>\n                      <div className=\"flex-1 min-w-0\">\n                        <CardTitle className=\"text-lg line-clamp-2\">{doc.title}</CardTitle>\n                        <Badge className={`mt-1 ${getStatusColor(doc.status)}`}>\n                          {doc.status}\n                        </Badge>\n                      </div>\n                    </div>\n                    <DropdownMenu>\n                      <DropdownMenuTrigger asChild>\n                        <Button variant=\"ghost\" size=\"sm\" className=\"opacity-0 group-hover:opacity-100\">\n                          <MoreHorizontal className=\"h-4 w-4\" />\n                        </Button>\n                      </DropdownMenuTrigger>\n                      <DropdownMenuContent align=\"end\">\n                        <DropdownMenuItem onClick={() => handleDocumentAction('view', doc)}>\n                          <Eye className=\"h-4 w-4 mr-2\" />\n                          View\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onClick={() => handleDocumentAction('edit', doc)}>\n                          <Edit className=\"h-4 w-4 mr-2\" />\n                          Edit\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onClick={() => handleDocumentAction('copy', doc)}>\n                          <Copy className=\"h-4 w-4 mr-2\" />\n                          Copy Link\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onClick={() => handleDocumentAction('download', doc)}>\n                          <Download className=\"h-4 w-4 mr-2\" />\n                          Download\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onClick={() => handleDocumentAction('share', doc)}>\n                          <Share className=\"h-4 w-4 mr-2\" />\n                          Share\n                        </DropdownMenuItem>\n                        <DropdownMenuItem \n                          onClick={() => handleDocumentAction('delete', doc)}\n                          className=\"text-red-600\"\n                        >\n                          <Trash2 className=\"h-4 w-4 mr-2\" />\n                          Delete\n                        </DropdownMenuItem>\n                      </DropdownMenuContent>\n                    </DropdownMenu>\n                  </div>\n                </CardHeader>\n                \n                <CardContent className=\"pt-0\">\n                  <p className=\"text-sm text-muted-foreground line-clamp-3 mb-4\">\n                    {doc.description}\n                  </p>\n                  \n                  {/* Tags */}\n                  <div className=\"flex flex-wrap gap-1 mb-4\">\n                    {doc.tags.slice(0, 3).map((tag) => (\n                      <Badge key={tag} variant=\"secondary\" className=\"text-xs\">\n                        {tag}\n                      </Badge>\n                    ))}\n                    {doc.tags.length > 3 && (\n                      <Badge variant=\"secondary\" className=\"text-xs\">\n                        +{doc.tags.length - 3}\n                      </Badge>\n                    )}\n                  </div>\n                  \n                  {/* Meta Information */}\n                  <div className=\"flex items-center justify-between text-xs text-muted-foreground border-t pt-3\">\n                    <div className=\"flex items-center space-x-4\">\n                      <div className=\"flex items-center space-x-1\">\n                        <User className=\"h-3 w-3\" />\n                        <span>{author?.name || 'Unknown'}</span>\n                      </div>\n                      <div className=\"flex items-center space-x-1\">\n                        <Clock className=\"h-3 w-3\" />\n                        <span>{doc.readTime}m read</span>\n                      </div>\n                    </div>\n                    <span>{format(new Date(doc.updatedAt), 'MMM d')}</span>\n                  </div>\n                </CardContent>\n              </Card>\n            )\n          })}\n        </div>\n      )}\n\n      <CreateDocumentModal\n        open={createModalOpen}\n        onOpenChange={setCreateModalOpen}\n        onDocumentCreated={handleDocumentCreate}\n      />\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7619, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n    </SwitchPrimitive.Root>\n  )\n}\n\nexport { Switch }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,OAAO,EACd,SAAS,EACT,GAAG,OAC+C;IAClD,qBACE,2QAAC,uMAAoB;QACnB,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,6WACA;QAED,GAAG,KAAK;kBAET,cAAA,2QAAC,wMAAqB;YACpB,aAAU;YACV,WAAW,IAAA,sJAAE,EACX;;;;;;;;;;;AAKV","debugId":null}},
    {"offset": {"line": 7654, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nfunction AlertDialog({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Root>) {\n  return <AlertDialogPrimitive.Root data-slot=\"alert-dialog\" {...props} />\n}\n\nfunction AlertDialogTrigger({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Trigger>) {\n  return (\n    <AlertDialogPrimitive.Trigger data-slot=\"alert-dialog-trigger\" {...props} />\n  )\n}\n\nfunction AlertDialogPortal({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Portal>) {\n  return (\n    <AlertDialogPrimitive.Portal data-slot=\"alert-dialog-portal\" {...props} />\n  )\n}\n\nfunction AlertDialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Overlay>) {\n  return (\n    <AlertDialogPrimitive.Overlay\n      data-slot=\"alert-dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Content>) {\n  return (\n    <AlertDialogPortal>\n      <AlertDialogOverlay />\n      <AlertDialogPrimitive.Content\n        data-slot=\"alert-dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      />\n    </AlertDialogPortal>\n  )\n}\n\nfunction AlertDialogHeader({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-dialog-header\"\n      className={cn(\"flex flex-col gap-4 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogFooter({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-4 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Title>) {\n  return (\n    <AlertDialogPrimitive.Title\n      data-slot=\"alert-dialog-title\"\n      className={cn(\"text-lg font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Description>) {\n  return (\n    <AlertDialogPrimitive.Description\n      data-slot=\"alert-dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogAction({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Action>) {\n  return (\n    <AlertDialogPrimitive.Action\n      className={cn(buttonVariants(), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogCancel({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Cancel>) {\n  return (\n    <AlertDialogPrimitive.Cancel\n      className={cn(buttonVariants({ variant: \"outline\" }), className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAGA;AAEA;AACA;AANA;;;;;AAQA,SAAS,YAAY,EACnB,GAAG,OACoD;IACvD,qBAAO,2QAAC,gNAAyB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,mBAAmB,EAC1B,GAAG,OACuD;IAC1D,qBACE,2QAAC,mNAA4B;QAAC,aAAU;QAAwB,GAAG,KAAK;;;;;;AAE5E;AAEA,SAAS,kBAAkB,EACzB,GAAG,OACsD;IACzD,qBACE,2QAAC,kNAA2B;QAAC,aAAU;QAAuB,GAAG,KAAK;;;;;;AAE1E;AAEA,SAAS,mBAAmB,EAC1B,SAAS,EACT,GAAG,OACuD;IAC1D,qBACE,2QAAC,mNAA4B;QAC3B,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,mBAAmB,EAC1B,SAAS,EACT,GAAG,OACuD;IAC1D,qBACE,2QAAC;;0BACC,2QAAC;;;;;0BACD,2QAAC,mNAA4B;gBAC3B,aAAU;gBACV,WAAW,IAAA,sJAAE,EACX,+WACA;gBAED,GAAG,KAAK;;;;;;;;;;;;AAIjB;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACqD;IACxD,qBACE,2QAAC,iNAA0B;QACzB,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,uBAAuB,EAC9B,SAAS,EACT,GAAG,OAC2D;IAC9D,qBACE,2QAAC,uNAAgC;QAC/B,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,2QAAC,kNAA2B;QAC1B,WAAW,IAAA,sJAAE,EAAC,IAAA,iLAAc,KAAI;QAC/B,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,2QAAC,kNAA2B;QAC1B,WAAW,IAAA,sJAAE,EAAC,IAAA,iLAAc,EAAC;YAAE,SAAS;QAAU,IAAI;QACrD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 7823, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/projects/project-settings.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Switch } from \"@/components/ui/switch\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\nimport { \n  Settings, \n  Save, \n  Trash2, \n  Archive,\n  ExternalLink,\n  Shield,\n  Bell\n} from \"lucide-react\";\nimport { \n  Project\n} from \"@/lib/utils/dummy-data\";\n\ninterface ProjectSettingsProps {\n  project: Project;\n}\n\nexport function ProjectSettings({ project }: ProjectSettingsProps) {\n  const [formData, setFormData] = React.useState({\n    title: project.title,\n    description: project.description || \"\",\n    url: project.url || \"\",\n    status: project.status,\n    isPublic: true,\n    allowComments: true,\n    emailNotifications: true,\n    slackNotifications: false,\n    autoArchive: false,\n  });\n\n  const [hasChanges, setHasChanges] = React.useState(false);\n\n  const handleInputChange = (field: string, value: any) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    setHasChanges(true);\n  };\n\n  const handleSave = () => {\n    // In a real app, this would make an API call\n    console.log(\"Saving project settings:\", formData);\n    setHasChanges(false);\n  };\n\n  const handleArchiveProject = () => {\n    console.log(\"Archiving project:\", project.id);\n  };\n\n  const handleDeleteProject = () => {\n    console.log(\"Deleting project:\", project.id);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Basic Settings */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center space-x-2\">\n            <Settings className=\"h-5 w-5\" />\n            <span>Basic Settings</span>\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"title\">Project Name</Label>\n              <Input\n                id=\"title\"\n                value={formData.title}\n                onChange={(e) => handleInputChange(\"title\", e.target.value)}\n                placeholder=\"Enter project name\"\n              />\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label htmlFor=\"status\">Project Status</Label>\n              <Select\n                value={formData.status}\n                onValueChange={(value) => handleInputChange(\"status\", value)}\n              >\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"active\">Active</SelectItem>\n                  <SelectItem value=\"completed\">Completed</SelectItem>\n                  <SelectItem value=\"archived\">Archived</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n          \n          <div className=\"space-y-2\">\n            <Label htmlFor=\"url\">Project URL</Label>\n            <div className=\"flex items-center space-x-2\">\n              <Input\n                id=\"url\"\n                value={formData.url}\n                onChange={(e) => handleInputChange(\"url\", e.target.value)}\n                placeholder=\"https://example.com\"\n              />\n              {formData.url && (\n                <Button variant=\"outline\" size=\"sm\" asChild>\n                  <a href={formData.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <ExternalLink className=\"h-4 w-4\" />\n                  </a>\n                </Button>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"space-y-2\">\n            <Label htmlFor=\"description\">Project Description</Label>\n            <Textarea\n              id=\"description\"\n              value={formData.description}\n              onChange={(e) => handleInputChange(\"description\", e.target.value)}\n              placeholder=\"Describe your project goals, requirements, and objectives\"\n              rows={4}\n            />\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Privacy & Access */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center space-x-2\">\n            <Shield className=\"h-5 w-5\" />\n            <span>Privacy & Access</span>\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"space-y-0.5\">\n              <Label className=\"text-sm\">Public Project</Label>\n              <p className=\"text-sm text-muted-foreground\">\n                Make this project visible to all team members\n              </p>\n            </div>\n            <Switch\n              checked={formData.isPublic}\n              onCheckedChange={(checked) => handleInputChange(\"isPublic\", checked)}\n            />\n          </div>\n          \n          <div className=\"flex items-center justify-between\">\n            <div className=\"space-y-0.5\">\n              <Label className=\"text-sm\">Allow Comments</Label>\n              <p className=\"text-sm text-muted-foreground\">\n                Team members can leave comments on tasks and content\n              </p>\n            </div>\n            <Switch\n              checked={formData.allowComments}\n              onCheckedChange={(checked) => handleInputChange(\"allowComments\", checked)}\n            />\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Notifications */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center space-x-2\">\n            <Bell className=\"h-5 w-5\" />\n            <span>Notifications</span>\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"space-y-0.5\">\n              <Label className=\"text-sm\">Email Notifications</Label>\n              <p className=\"text-sm text-muted-foreground\">\n                Receive email updates about project activity\n              </p>\n            </div>\n            <Switch\n              checked={formData.emailNotifications}\n              onCheckedChange={(checked) => handleInputChange(\"emailNotifications\", checked)}\n            />\n          </div>\n          \n          <div className=\"flex items-center justify-between\">\n            <div className=\"space-y-0.5\">\n              <Label className=\"text-sm\">Slack Notifications</Label>\n              <p className=\"text-sm text-muted-foreground\">\n                Send updates to connected Slack channels\n              </p>\n            </div>\n            <Switch\n              checked={formData.slackNotifications}\n              onCheckedChange={(checked) => handleInputChange(\"slackNotifications\", checked)}\n            />\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Automation */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Automation</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"space-y-0.5\">\n              <Label className=\"text-sm\">Auto Archive</Label>\n              <p className=\"text-sm text-muted-foreground\">\n                Automatically archive when all tasks are completed\n              </p>\n            </div>\n            <Switch\n              checked={formData.autoArchive}\n              onCheckedChange={(checked) => handleInputChange(\"autoArchive\", checked)}\n            />\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Project Information */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Project Information</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <Label className=\"text-sm font-medium\">Project ID</Label>\n              <p className=\"text-sm text-muted-foreground\">{project.id}</p>\n            </div>\n            <div>\n              <Label className=\"text-sm font-medium\">Created Date</Label>\n              <p className=\"text-sm text-muted-foreground\">\n                {new Date(project.createdAt).toLocaleDateString()}\n              </p>\n            </div>\n            <div>\n              <Label className=\"text-sm font-medium\">Last Updated</Label>\n              <p className=\"text-sm text-muted-foreground\">\n                {new Date(project.updatedAt).toLocaleDateString()}\n              </p>\n            </div>\n            <div>\n              <Label className=\"text-sm font-medium\">Team Members</Label>\n              <p className=\"text-sm text-muted-foreground\">\n                {project.assignedTo?.length || 0} members\n              </p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Danger Zone */}\n      <Card className=\"border-red-200\">\n        <CardHeader>\n          <CardTitle className=\"text-red-600\">Danger Zone</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"flex items-center justify-between p-4 border border-red-200 rounded-lg\">\n            <div>\n              <Label className=\"text-sm font-medium\">Archive Project</Label>\n              <p className=\"text-sm text-muted-foreground\">\n                Archive this project to hide it from active projects list\n              </p>\n            </div>\n            <AlertDialog>\n              <AlertDialogTrigger asChild>\n                <Button variant=\"outline\" className=\"border-orange-200 text-orange-600 hover:bg-orange-50\">\n                  <Archive className=\"h-4 w-4 mr-2\" />\n                  Archive\n                </Button>\n              </AlertDialogTrigger>\n              <AlertDialogContent>\n                <AlertDialogHeader>\n                  <AlertDialogTitle>Archive Project</AlertDialogTitle>\n                  <AlertDialogDescription>\n                    Are you sure you want to archive this project? It will be moved to the archived projects list and hidden from active projects.\n                  </AlertDialogDescription>\n                </AlertDialogHeader>\n                <AlertDialogFooter>\n                  <AlertDialogCancel>Cancel</AlertDialogCancel>\n                  <AlertDialogAction onClick={handleArchiveProject}>\n                    Archive Project\n                  </AlertDialogAction>\n                </AlertDialogFooter>\n              </AlertDialogContent>\n            </AlertDialog>\n          </div>\n\n          <div className=\"flex items-center justify-between p-4 border border-red-200 rounded-lg\">\n            <div>\n              <Label className=\"text-sm font-medium text-red-600\">Delete Project</Label>\n              <p className=\"text-sm text-muted-foreground\">\n                Permanently delete this project and all its data. This action cannot be undone.\n              </p>\n            </div>\n            <AlertDialog>\n              <AlertDialogTrigger asChild>\n                <Button variant=\"destructive\">\n                  <Trash2 className=\"h-4 w-4 mr-2\" />\n                  Delete\n                </Button>\n              </AlertDialogTrigger>\n              <AlertDialogContent>\n                <AlertDialogHeader>\n                  <AlertDialogTitle>Delete Project</AlertDialogTitle>\n                  <AlertDialogDescription>\n                    Are you sure you want to delete this project? This action cannot be undone and will permanently remove all project data including tasks, assets, and content.\n                  </AlertDialogDescription>\n                </AlertDialogHeader>\n                <AlertDialogFooter>\n                  <AlertDialogCancel>Cancel</AlertDialogCancel>\n                  <AlertDialogAction \n                    onClick={handleDeleteProject}\n                    className=\"bg-red-600 hover:bg-red-700\"\n                  >\n                    Delete Project\n                  </AlertDialogAction>\n                </AlertDialogFooter>\n              </AlertDialogContent>\n            </AlertDialog>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8876, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/projects/project-tabs.tsx"],"sourcesContent":["\"use client\";\n\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { ProjectOverview } from \"./project-overview\";\nimport { ProjectTasksList } from \"./project-tasks-list\";\nimport { ProjectAssetsList } from \"./project-assets-list\";\nimport { ProjectContentList } from \"./project-content-list\";\nimport { ProjectTeam } from \"./project-team\";\nimport { ProjectDocumentation } from '@/components/projects/project-documentation'\nimport { ProjectSettings } from \"./project-settings\";\nimport { \n  FileText, \n  CheckSquare, \n  FileImage, \n  Users, \n  Settings,\n  LayoutDashboard\n} from \"lucide-react\";\nimport { Project } from \"@/lib/utils/dummy-data\";\n\ninterface ProjectTabsProps {\n  project: Project;\n}\n\nexport function ProjectTabs({ project }: ProjectTabsProps) {\n  return (\n    <Tabs defaultValue=\"overview\" className=\"w-full\">\n      <TabsList className=\"grid w-full grid-cols-7\">\n        <TabsTrigger value=\"overview\" className=\"flex items-center space-x-2\">\n          <LayoutDashboard className=\"h-4 w-4\" />\n          <span>Overview</span>\n        </TabsTrigger>\n        <TabsTrigger value=\"tasks\" className=\"flex items-center space-x-2\">\n          <CheckSquare className=\"h-4 w-4\" />\n          <span>Tasks</span>\n        </TabsTrigger>\n        <TabsTrigger value=\"assets\" className=\"flex items-center space-x-2\">\n          <FileImage className=\"h-4 w-4\" />\n          <span>Assets</span>\n        </TabsTrigger>\n        <TabsTrigger value=\"content\" className=\"flex items-center space-x-2\">\n          <FileText className=\"h-4 w-4\" />\n          <span>Content</span>\n        </TabsTrigger>\n        <TabsTrigger value=\"team\" className=\"flex items-center space-x-2\">\n          <Users className=\"h-4 w-4\" />\n          <span>Team</span>\n        </TabsTrigger>\n        <TabsTrigger value=\"documentation\" className=\"flex items-center space-x-2\">\n          <Settings className=\"h-4 w-4\" />\n          <span>Documentation</span>\n        </TabsTrigger>\n        <TabsTrigger value=\"settings\" className=\"flex items-center space-x-2\">\n          <Settings className=\"h-4 w-4\" />\n          <span>Settings</span>\n        </TabsTrigger>\n      </TabsList>\n\n      <TabsContent value=\"overview\">\n        <ProjectOverview project={project} />\n      </TabsContent>\n\n      <TabsContent value=\"tasks\">\n        <ProjectTasksList project={project} />\n      </TabsContent>\n\n      <TabsContent value=\"assets\">\n        <ProjectAssetsList project={project} />\n      </TabsContent>\n\n      <TabsContent value=\"content\">\n        <ProjectContentList project={project} />\n      </TabsContent>\n\n      <TabsContent value=\"team\">\n        <ProjectTeam project={project} />\n      </TabsContent>\n\n      <TabsContent value=\"documentation\">\n        <ProjectDocumentation projectId={project.id} />\n      </TabsContent>\n\n      <TabsContent value=\"settings\">\n        <ProjectSettings project={project} />\n      </TabsContent>\n    </Tabs>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;;;;;;;;;;;AAwBO,SAAS,YAAY,EAAE,OAAO,EAAoB;IACvD,qBACE,2QAAC,qKAAI;QAAC,cAAa;QAAW,WAAU;;0BACtC,2QAAC,yKAAQ;gBAAC,WAAU;;kCAClB,2QAAC,4KAAW;wBAAC,OAAM;wBAAW,WAAU;;0CACtC,2QAAC,4QAAe;gCAAC,WAAU;;;;;;0CAC3B,2QAAC;0CAAK;;;;;;;;;;;;kCAER,2QAAC,4KAAW;wBAAC,OAAM;wBAAQ,WAAU;;0CACnC,2QAAC,uQAAW;gCAAC,WAAU;;;;;;0CACvB,2QAAC;0CAAK;;;;;;;;;;;;kCAER,2QAAC,4KAAW;wBAAC,OAAM;wBAAS,WAAU;;0CACpC,2QAAC,0PAAS;gCAAC,WAAU;;;;;;0CACrB,2QAAC;0CAAK;;;;;;;;;;;;kCAER,2QAAC,4KAAW;wBAAC,OAAM;wBAAU,WAAU;;0CACrC,2QAAC,uPAAQ;gCAAC,WAAU;;;;;;0CACpB,2QAAC;0CAAK;;;;;;;;;;;;kCAER,2QAAC,4KAAW;wBAAC,OAAM;wBAAO,WAAU;;0CAClC,2QAAC,0OAAK;gCAAC,WAAU;;;;;;0CACjB,2QAAC;0CAAK;;;;;;;;;;;;kCAER,2QAAC,4KAAW;wBAAC,OAAM;wBAAgB,WAAU;;0CAC3C,2QAAC,mPAAQ;gCAAC,WAAU;;;;;;0CACpB,2QAAC;0CAAK;;;;;;;;;;;;kCAER,2QAAC,4KAAW;wBAAC,OAAM;wBAAW,WAAU;;0CACtC,2QAAC,mPAAQ;gCAAC,WAAU;;;;;;0CACpB,2QAAC;0CAAK;;;;;;;;;;;;;;;;;;0BAIV,2QAAC,4KAAW;gBAAC,OAAM;0BACjB,cAAA,2QAAC,qMAAe;oBAAC,SAAS;;;;;;;;;;;0BAG5B,2QAAC,4KAAW;gBAAC,OAAM;0BACjB,cAAA,2QAAC,2MAAgB;oBAAC,SAAS;;;;;;;;;;;0BAG7B,2QAAC,4KAAW;gBAAC,OAAM;0BACjB,cAAA,2QAAC,6MAAiB;oBAAC,SAAS;;;;;;;;;;;0BAG9B,2QAAC,4KAAW;gBAAC,OAAM;0BACjB,cAAA,2QAAC,+MAAkB;oBAAC,SAAS;;;;;;;;;;;0BAG/B,2QAAC,4KAAW;gBAAC,OAAM;0BACjB,cAAA,2QAAC,6LAAW;oBAAC,SAAS;;;;;;;;;;;0BAGxB,2QAAC,4KAAW;gBAAC,OAAM;0BACjB,cAAA,2QAAC,+MAAoB;oBAAC,WAAW,QAAQ,EAAE;;;;;;;;;;;0BAG7C,2QAAC,4KAAW;gBAAC,OAAM;0BACjB,cAAA,2QAAC,qMAAe;oBAAC,SAAS;;;;;;;;;;;;;;;;;AAIlC","debugId":null}}]
}