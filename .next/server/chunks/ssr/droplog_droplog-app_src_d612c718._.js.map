{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col rounded-xl border py-6 gap-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-regularm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,2EACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-4\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,2QAAC,qMAAkB;QACjB,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,2QAAC,qMAAkB;QACjB,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,2QAAC,wMAAqB;QACpB,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,qoBACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,2QAAC,wMAAqB;QACpB,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,oMAAG,EACvB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OAC8D;IACjE,qBACE,2QAAC;QACC,aAAU;QACV,MAAK;QACL,WAAW,IAAA,sJAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,+DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,kGACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/lib/utils/dummy-data-integrations.ts"],"sourcesContent":["// lib/utils/dummy-data-integrations.ts\n\nexport interface Integration {\n  id: string\n  name: string\n  category: 'productivity' | 'storage' | 'communication' | 'development' | 'analytics' | 'automation'\n  status: 'connected' | 'disconnected' | 'error' | 'pending'\n  description: string\n  icon: string // Icon name for Lucide React\n  plan: 'free' | 'pro' | 'enterprise' | null\n  features: string[]\n  settings?: Record<string, any>\n  lastSync?: string\n  connectedAt?: string\n  syncFrequency?: 'realtime' | 'hourly' | 'daily' | 'weekly' | 'manual'\n  dataTypes?: string[]\n  permissions?: string[]\n}\n\nexport interface Webhook {\n  id: string\n  name: string\n  url: string\n  events: string[]\n  status: 'active' | 'inactive' | 'error'\n  secret?: string\n  createdAt: string\n  lastTriggered?: string\n  successCount: number\n  errorCount: number\n  description?: string\n}\n\nexport interface ApiKey {\n  id: string\n  name: string\n  key: string // Masked for security\n  permissions: string[]\n  createdAt: string\n  lastUsed?: string\n  status: 'active' | 'inactive' | 'expired'\n  expiresAt?: string\n  usageCount: number\n}\n\n// Integrations dummy data\nexport const integrations: Integration[] = [\n  // Productivity\n  {\n    id: 'google-calendar',\n    name: 'Google Calendar',\n    category: 'productivity',\n    status: 'connected',\n    description: 'Sync tasks and deadlines with your Google Calendar',\n    icon: 'Calendar',\n    plan: 'free',\n    features: ['Two-way sync', 'Event creation', 'Deadline reminders', 'Meeting scheduling'],\n    settings: {\n      calendarId: 'primary',\n      syncTaskDeadlines: true,\n      createMeetingEvents: true,\n      reminderMinutes: [15, 30]\n    },\n    lastSync: '2025-09-12T08:30:00Z',\n    connectedAt: '2025-09-01T10:00:00Z',\n    syncFrequency: 'hourly',\n    dataTypes: ['tasks', 'events', 'deadlines'],\n    permissions: ['calendar.read', 'calendar.write']\n  },\n  {\n    id: 'apple-calendar',\n    name: 'Apple Calendar',\n    category: 'productivity',\n    status: 'disconnected',\n    description: 'Integrate with iCloud Calendar for seamless task scheduling',\n    icon: 'Calendar',\n    plan: 'pro',\n    features: ['Two-way sync', 'Event creation', 'Reminder integration', 'Cross-device sync'],\n    syncFrequency: 'daily',\n    dataTypes: ['tasks', 'events', 'reminders']\n  },\n  {\n    id: 'microsoft-calendar',\n    name: 'Microsoft Calendar',\n    category: 'productivity',\n    status: 'error',\n    description: 'Connect with Outlook Calendar for unified scheduling',\n    icon: 'Calendar',\n    plan: 'free',\n    features: ['Outlook integration', 'Teams meeting sync', 'Exchange support'],\n    lastSync: '2025-09-11T14:20:00Z',\n    connectedAt: '2025-08-15T09:00:00Z',\n    syncFrequency: 'hourly',\n    dataTypes: ['tasks', 'meetings', 'events']\n  },\n  {\n    id: 'trello',\n    name: 'Trello',\n    category: 'productivity',\n    status: 'connected',\n    description: 'Import boards and sync cards with your Droplog projects',\n    icon: 'Trello',\n    plan: 'free',\n    features: ['Board import', 'Card sync', 'Checklist integration', 'Due date sync'],\n    settings: {\n      boardIds: ['abc123', 'def456'],\n      syncChecklists: true,\n      importLabels: true\n    },\n    lastSync: '2025-09-12T07:45:00Z',\n    connectedAt: '2025-08-20T11:30:00Z',\n    syncFrequency: 'daily',\n    dataTypes: ['projects', 'tasks', 'checklists']\n  },\n  {\n    id: 'monday',\n    name: 'Monday.com',\n    category: 'productivity',\n    status: 'disconnected',\n    description: 'Sync boards and items from Monday.com workspaces',\n    icon: 'Grid3X3',\n    plan: 'pro',\n    features: ['Board sync', 'Status tracking', 'Timeline integration', 'Pulse updates'],\n    syncFrequency: 'hourly',\n    dataTypes: ['projects', 'tasks', 'statuses', 'timelines']\n  },\n  {\n    id: 'notion',\n    name: 'Notion',\n    category: 'productivity',\n    status: 'connected',\n    description: 'Import pages and databases from your Notion workspace',\n    icon: 'FileText',\n    plan: 'pro',\n    features: ['Database sync', 'Page import', 'Block-level sync', 'Template sharing'],\n    settings: {\n      databaseIds: ['notion-db-1', 'notion-db-2'],\n      syncBlocks: false,\n      importPages: true\n    },\n    lastSync: '2025-09-12T06:15:00Z',\n    connectedAt: '2025-09-05T16:00:00Z',\n    syncFrequency: 'daily',\n    dataTypes: ['content', 'databases', 'pages']\n  },\n\n  // Storage\n  {\n    id: 'google-drive',\n    name: 'Google Drive',\n    category: 'storage',\n    status: 'connected',\n    description: 'Store and manage project assets in Google Drive',\n    icon: 'HardDrive',\n    plan: 'free',\n    features: ['File sync', 'Automatic backup', 'Shared folder access', 'Version control'],\n    settings: {\n      folderId: 'drive-folder-123',\n      autoBackup: true,\n      shareFiles: true,\n      maxFileSize: '100MB'\n    },\n    lastSync: '2025-09-12T09:00:00Z',\n    connectedAt: '2025-08-10T14:30:00Z',\n    syncFrequency: 'realtime',\n    dataTypes: ['files', 'documents', 'images'],\n    permissions: ['drive.read', 'drive.write', 'drive.share']\n  },\n  {\n    id: 'apple-cloud',\n    name: 'iCloud Drive',\n    category: 'storage',\n    status: 'disconnected',\n    description: 'Access and sync files from your iCloud Drive',\n    icon: 'Cloud',\n    plan: 'pro',\n    features: ['File sync', 'Cross-device access', 'Automatic backup', 'Family sharing'],\n    syncFrequency: 'daily',\n    dataTypes: ['files', 'documents', 'media']\n  },\n  {\n    id: 'microsoft-onedrive',\n    name: 'OneDrive',\n    category: 'storage',\n    status: 'pending',\n    description: 'Integrate with Microsoft OneDrive for file management',\n    icon: 'HardDrive',\n    plan: 'free',\n    features: ['File sync', 'Office integration', 'Shared libraries', 'Version history'],\n    syncFrequency: 'hourly',\n    dataTypes: ['files', 'documents', 'office-files']\n  },\n  {\n    id: 'dropbox',\n    name: 'Dropbox',\n    category: 'storage',\n    status: 'disconnected',\n    description: 'Connect your Dropbox for seamless file sharing',\n    icon: 'Droplets',\n    plan: 'free',\n    features: ['File sync', 'Smart sync', 'File recovery', 'Team folders'],\n    syncFrequency: 'realtime',\n    dataTypes: ['files', 'documents', 'media']\n  },\n\n  // Communication\n  {\n    id: 'slack',\n    name: 'Slack',\n    category: 'communication',\n    status: 'connected',\n    description: 'Send notifications and updates to Slack channels',\n    icon: 'MessageSquare',\n    plan: 'free',\n    features: ['Channel notifications', 'Direct messages', 'Task updates', 'Project alerts'],\n    settings: {\n      channels: ['#general', '#projects', '#notifications'],\n      mentionUsers: true,\n      taskUpdates: true\n    },\n    lastSync: '2025-09-12T09:15:00Z',\n    connectedAt: '2025-08-25T12:00:00Z',\n    syncFrequency: 'realtime',\n    dataTypes: ['notifications', 'messages', 'updates']\n  },\n  {\n    id: 'discord',\n    name: 'Discord',\n    category: 'communication',\n    status: 'disconnected',\n    description: 'Post updates and notifications to Discord servers',\n    icon: 'MessageCircle',\n    plan: 'pro',\n    features: ['Server notifications', 'Webhook support', 'Role mentions', 'Embed messages'],\n    syncFrequency: 'realtime',\n    dataTypes: ['notifications', 'messages']\n  },\n  {\n    id: 'microsoft-teams',\n    name: 'Microsoft Teams',\n    category: 'communication',\n    status: 'error',\n    description: 'Integrate with Teams for seamless collaboration',\n    icon: 'Users',\n    plan: 'enterprise',\n    features: ['Team notifications', 'Meeting integration', 'File sharing', 'Chat sync'],\n    lastSync: '2025-09-10T16:30:00Z',\n    connectedAt: '2025-09-01T08:00:00Z',\n    syncFrequency: 'hourly',\n    dataTypes: ['notifications', 'meetings', 'files']\n  },\n\n  // Development\n  {\n    id: 'github',\n    name: 'GitHub',\n    category: 'development',\n    status: 'connected',\n    description: 'Link repositories and track issues with your projects',\n    icon: 'Github',\n    plan: 'free',\n    features: ['Repository linking', 'Issue tracking', 'Pull request sync', 'Commit history'],\n    settings: {\n      repositories: ['user/repo1', 'user/repo2'],\n      syncIssues: true,\n      trackCommits: true,\n      webhookUrl: 'https://api.droplog.com/webhooks/github'\n    },\n    lastSync: '2025-09-12T08:45:00Z',\n    connectedAt: '2025-08-01T10:00:00Z',\n    syncFrequency: 'realtime',\n    dataTypes: ['repositories', 'issues', 'pull-requests', 'commits']\n  },\n  {\n    id: 'gitlab',\n    name: 'GitLab',\n    category: 'development',\n    status: 'disconnected',\n    description: 'Connect GitLab projects and manage merge requests',\n    icon: 'GitBranch',\n    plan: 'pro',\n    features: ['Project sync', 'Issue management', 'Pipeline tracking', 'Merge requests'],\n    syncFrequency: 'hourly',\n    dataTypes: ['projects', 'issues', 'pipelines', 'merge-requests']\n  },\n  {\n    id: 'jira',\n    name: 'Jira',\n    category: 'development',\n    status: 'disconnected',\n    description: 'Sync issues and epics from your Jira projects',\n    icon: 'Bug',\n    plan: 'enterprise',\n    features: ['Issue sync', 'Epic tracking', 'Sprint integration', 'Status updates'],\n    syncFrequency: 'daily',\n    dataTypes: ['issues', 'epics', 'sprints', 'stories']\n  },\n\n  // Analytics\n  {\n    id: 'google-analytics',\n    name: 'Google Analytics',\n    category: 'analytics',\n    status: 'connected',\n    description: 'Track project performance and website analytics',\n    icon: 'BarChart3',\n    plan: 'pro',\n    features: ['Traffic tracking', 'Goal monitoring', 'Custom reports', 'Real-time data'],\n    settings: {\n      propertyId: 'GA-123456789',\n      trackingGoals: ['conversions', 'engagement'],\n      reportFrequency: 'weekly'\n    },\n    lastSync: '2025-09-12T07:00:00Z',\n    connectedAt: '2025-08-15T09:30:00Z',\n    syncFrequency: 'daily',\n    dataTypes: ['analytics', 'reports', 'goals']\n  },\n  {\n    id: 'hotjar',\n    name: 'Hotjar',\n    category: 'analytics',\n    status: 'disconnected',\n    description: 'Analyze user behavior with heatmaps and recordings',\n    icon: 'Activity',\n    plan: 'pro',\n    features: ['Heatmaps', 'Session recordings', 'Feedback polls', 'Conversion funnels'],\n    syncFrequency: 'daily',\n    dataTypes: ['heatmaps', 'recordings', 'feedback']\n  },\n\n  // Automation\n  {\n    id: 'zapier',\n    name: 'Zapier',\n    category: 'automation',\n    status: 'connected',\n    description: 'Automate workflows with 5000+ app integrations',\n    icon: 'Zap',\n    plan: 'pro',\n    features: ['Multi-step workflows', 'Conditional logic', 'Webhooks', 'Custom triggers'],\n    settings: {\n      activeZaps: 5,\n      maxZaps: 20,\n      webhookEndpoint: 'https://hooks.zapier.com/droplog'\n    },\n    lastSync: '2025-09-12T09:30:00Z',\n    connectedAt: '2025-08-20T14:15:00Z',\n    syncFrequency: 'realtime',\n    dataTypes: ['triggers', 'actions', 'workflows']\n  },\n  {\n    id: 'make',\n    name: 'Make (Integromat)',\n    category: 'automation',\n    status: 'disconnected',\n    description: 'Create advanced automation scenarios',\n    icon: 'Settings2',\n    plan: 'enterprise',\n    features: ['Visual scenarios', 'Error handling', 'Data transformation', 'API connections'],\n    syncFrequency: 'realtime',\n    dataTypes: ['scenarios', 'modules', 'connections']\n  },\n  {\n    id: 'webhooks',\n    name: 'Custom Webhooks',\n    category: 'automation',\n    status: 'connected',\n    description: 'Set up custom webhook endpoints for real-time integrations',\n    icon: 'Webhook',\n    plan: 'free',\n    features: ['Custom endpoints', 'Event filtering', 'Retry logic', 'Payload transformation'],\n    settings: {\n      activeWebhooks: 3,\n      maxWebhooks: 10\n    },\n    lastSync: '2025-09-12T09:45:00Z',\n    connectedAt: '2025-08-01T10:00:00Z',\n    syncFrequency: 'realtime',\n    dataTypes: ['events', 'payloads', 'responses']\n  }\n]\n\n// Webhooks dummy data\nexport const webhooks: Webhook[] = [\n  {\n    id: 'wh-1',\n    name: 'Project Status Updates',\n    url: 'https://hooks.example.com/project-updates',\n    events: ['project.created', 'project.updated', 'project.completed'],\n    status: 'active',\n    secret: 'wh_secret_***',\n    createdAt: '2025-08-15T10:00:00Z',\n    lastTriggered: '2025-09-12T08:30:00Z',\n    successCount: 245,\n    errorCount: 3,\n    description: 'Sends notifications when project status changes'\n  },\n  {\n    id: 'wh-2',\n    name: 'Task Assignments',\n    url: 'https://hooks.example.com/task-assignments',\n    events: ['task.assigned', 'task.completed', 'task.overdue'],\n    status: 'active',\n    secret: 'wh_secret_***',\n    createdAt: '2025-08-20T14:30:00Z',\n    lastTriggered: '2025-09-12T09:15:00Z',\n    successCount: 156,\n    errorCount: 0,\n    description: 'Notifies external systems about task assignments and completions'\n  },\n  {\n    id: 'wh-3',\n    name: 'Asset Uploads',\n    url: 'https://hooks.example.com/asset-uploads',\n    events: ['asset.uploaded', 'asset.updated', 'asset.deleted'],\n    status: 'error',\n    createdAt: '2025-09-01T09:00:00Z',\n    lastTriggered: '2025-09-10T15:45:00Z',\n    successCount: 28,\n    errorCount: 12,\n    description: 'Triggers when project assets are modified'\n  },\n  {\n    id: 'wh-4',\n    name: 'Team Activity',\n    url: 'https://hooks.example.com/team-activity',\n    events: ['user.login', 'user.project_joined', 'user.task_created'],\n    status: 'inactive',\n    createdAt: '2025-07-10T12:00:00Z',\n    successCount: 89,\n    errorCount: 5,\n    description: 'Tracks team member activities and engagement'\n  }\n]\n\n// API Keys dummy data\nexport const apiKeys: ApiKey[] = [\n  {\n    id: 'api-1',\n    name: 'Mobile App API',\n    key: 'pk_live_51H***************',\n    permissions: ['projects.read', 'tasks.read', 'tasks.write'],\n    createdAt: '2025-08-01T10:00:00Z',\n    lastUsed: '2025-09-12T08:45:00Z',\n    status: 'active',\n    usageCount: 15420\n  },\n  {\n    id: 'api-2',\n    name: 'Analytics Dashboard',\n    key: 'pk_live_52G***************',\n    permissions: ['analytics.read', 'projects.read'],\n    createdAt: '2025-08-15T14:30:00Z',\n    lastUsed: '2025-09-11T22:30:00Z',\n    status: 'active',\n    usageCount: 8934\n  },\n  {\n    id: 'api-3',\n    name: 'Automation Scripts',\n    key: 'pk_live_53F***************',\n    permissions: ['projects.write', 'tasks.write', 'webhooks.manage'],\n    createdAt: '2025-07-20T09:15:00Z',\n    lastUsed: '2025-09-05T16:20:00Z',\n    status: 'inactive',\n    expiresAt: '2025-12-20T09:15:00Z',\n    usageCount: 2156\n  },\n  {\n    id: 'api-4',\n    name: 'Third-party Integration',\n    key: 'pk_test_54H***************',\n    permissions: ['projects.read', 'tasks.read'],\n    createdAt: '2025-09-01T11:00:00Z',\n    status: 'expired',\n    expiresAt: '2025-09-10T11:00:00Z',\n    usageCount: 45\n  }\n]"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 923, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n    </SwitchPrimitive.Root>\n  )\n}\n\nexport { Switch }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,OAAO,EACd,SAAS,EACT,GAAG,OAC+C;IAClD,qBACE,2QAAC,uMAAoB;QACnB,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,6WACA;QAED,GAAG,KAAK;kBAET,cAAA,2QAAC,wMAAqB;YACpB,aAAU;YACV,WAAW,IAAA,sJAAE,EACX;;;;;;;;;;;AAKV","debugId":null}},
    {"offset": {"line": 958, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/integrations/integration-card.tsx"],"sourcesContent":["// components/integrations/integration-card.tsx\n'use client'\n\nimport { useState } from 'react'\nimport { \n  Card, \n  CardContent, \n  CardDescription, \n  CardHeader, \n  CardTitle \n} from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu'\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from '@/components/ui/dialog'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Switch } from '@/components/ui/switch'\nimport { Separator } from '@/components/ui/separator'\nimport {\n  MoreHorizontal,\n  Settings,\n  Unlink,\n  RefreshCw,\n  ExternalLink,\n  AlertCircle,\n  CheckCircle2\n} from 'lucide-react'\nimport { type Integration } from '@/lib/utils/dummy-data-integrations'\nimport { formatRelativeTime } from '@/lib/utils'\n\ninterface IntegrationCardProps {\n  integration: Integration\n  icon: React.ComponentType<any>\n  statusIcon: React.ReactNode\n  statusBadge: React.ReactNode\n  planBadge: React.ReactNode\n}\n\nexport function IntegrationCard({ \n  integration, \n  icon: IconComponent, \n  statusIcon, \n  statusBadge, \n  planBadge \n}: IntegrationCardProps) {\n  const [isConfigOpen, setIsConfigOpen] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleConnect = async () => {\n    setIsLoading(true)\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 2000))\n    setIsLoading(false)\n    // In real app, update integration status\n  }\n\n  const handleDisconnect = async () => {\n    setIsLoading(true)\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000))\n    setIsLoading(false)\n    // In real app, update integration status\n  }\n\n  const handleSync = async () => {\n    setIsLoading(true)\n    // Simulate sync\n    await new Promise(resolve => setTimeout(resolve, 1500))\n    setIsLoading(false)\n  }\n\n  return (\n    <>\n      <Card className=\"h-full\">\n        <CardHeader className=\"pb-3\">\n          <div className=\"flex items-start justify-between\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-10 h-10 bg-muted rounded-lg flex items-center justify-center\">\n                <IconComponent className=\"h-5 w-5\" />\n              </div>\n              <div className=\"space-y-1\">\n                <CardTitle className=\"text-base flex items-center gap-2\">\n                  {integration.name}\n                  {statusIcon}\n                </CardTitle>\n                <div className=\"flex items-center gap-2\">\n                  {statusBadge}\n                  {planBadge}\n                </div>\n              </div>\n            </div>\n            \n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <Button variant=\"ghost\" size=\"sm\" className=\"h-8 w-8 p-0\">\n                  <MoreHorizontal className=\"h-4 w-4\" />\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent align=\"end\">\n                {integration.status === 'connected' ? (\n                  <>\n                    <DropdownMenuItem onClick={() => setIsConfigOpen(true)}>\n                      <Settings className=\"h-4 w-4 mr-2\" />\n                      Configure\n                    </DropdownMenuItem>\n                    <DropdownMenuItem onClick={handleSync} disabled={isLoading}>\n                      <RefreshCw className=\"h-4 w-4 mr-2\" />\n                      Sync Now\n                    </DropdownMenuItem>\n                    <DropdownMenuItem onClick={handleDisconnect} disabled={isLoading}>\n                      <Unlink className=\"h-4 w-4 mr-2\" />\n                      Disconnect\n                    </DropdownMenuItem>\n                  </>\n                ) : (\n                  <DropdownMenuItem onClick={handleConnect} disabled={isLoading}>\n                    <ExternalLink className=\"h-4 w-4 mr-2\" />\n                    Connect\n                  </DropdownMenuItem>\n                )}\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </div>\n        </CardHeader>\n        \n        <CardContent className=\"space-y-4\">\n          <CardDescription className=\"text-sm\">\n            {integration.description}\n          </CardDescription>\n\n          {/* Connection Info */}\n          {integration.status === 'connected' && (\n            <div className=\"space-y-2 text-xs text-muted-foreground\">\n              {integration.lastSync && (\n                <div className=\"flex justify-between\">\n                  <span>Last synced:</span>\n                  <span>{formatRelativeTime(integration.lastSync)}</span>\n                </div>\n              )}\n              {integration.syncFrequency && (\n                <div className=\"flex justify-between\">\n                  <span>Sync frequency:</span>\n                  <span className=\"capitalize\">{integration.syncFrequency}</span>\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Error State */}\n          {integration.status === 'error' && (\n            <div className=\"flex items-center gap-2 p-2 bg-red-50 text-red-700 rounded text-xs\">\n              <AlertCircle className=\"h-3 w-3\" />\n              <span>Connection failed. Check settings.</span>\n            </div>\n          )}\n\n          {/* Features */}\n          <div className=\"space-y-2\">\n            <div className=\"text-xs font-medium text-muted-foreground\">Features:</div>\n            <div className=\"space-y-1\">\n              {integration.features.slice(0, 3).map((feature, index) => (\n                <div key={index} className=\"flex items-center gap-2 text-xs\">\n                  <CheckCircle2 className=\"h-3 w-3 text-green-500\" />\n                  <span>{feature}</span>\n                </div>\n              ))}\n              {integration.features.length > 3 && (\n                <div className=\"text-xs text-muted-foreground\">\n                  +{integration.features.length - 3} more\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Action Button */}\n          <div className=\"pt-2\">\n            {integration.status === 'connected' ? (\n              <Button \n                size=\"sm\" \n                variant=\"outline\" \n                className=\"w-full\"\n                onClick={() => setIsConfigOpen(true)}\n              >\n                <Settings className=\"h-4 w-4 mr-2\" />\n                Configure\n              </Button>\n            ) : (\n              <Button \n                size=\"sm\" \n                className=\"w-full\" \n                onClick={handleConnect}\n                disabled={isLoading}\n              >\n                {isLoading ? (\n                  <RefreshCw className=\"h-4 w-4 mr-2 animate-spin\" />\n                ) : (\n                  <ExternalLink className=\"h-4 w-4 mr-2\" />\n                )}\n                {isLoading ? 'Connecting...' : 'Connect'}\n              </Button>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Configuration Dialog */}\n      <Dialog open={isConfigOpen} onOpenChange={setIsConfigOpen}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2\">\n              <IconComponent className=\"h-5 w-5\" />\n              Configure {integration.name}\n            </DialogTitle>\n            <DialogDescription>\n              Manage settings and preferences for this integration\n            </DialogDescription>\n          </DialogHeader>\n          \n          <div className=\"space-y-6\">\n            {/* Current Status */}\n            <div className=\"flex items-center justify-between p-4 bg-muted rounded-lg\">\n              <div className=\"flex items-center gap-3\">\n                <div>{statusIcon}</div>\n                <div>\n                  <div className=\"font-medium\">Connection Status</div>\n                  <div className=\"text-sm text-muted-foreground\">\n                    {integration.status === 'connected' ? 'Successfully connected' : 'Not connected'}\n                  </div>\n                </div>\n              </div>\n              {statusBadge}\n            </div>\n\n            {/* Settings */}\n            {integration.settings && (\n              <div className=\"space-y-4\">\n                <h4 className=\"font-medium\">Settings</h4>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  {Object.entries(integration.settings).map(([key, value]) => (\n                    <div key={key} className=\"space-y-2\">\n                      <Label className=\"capitalize\">{key.replace(/([A-Z])/g, ' $1').toLowerCase()}</Label>\n                      {typeof value === 'boolean' ? (\n                        <div className=\"flex items-center space-x-2\">\n                          <Switch checked={value} />\n                          <span className=\"text-sm text-muted-foreground\">\n                            {value ? 'Enabled' : 'Disabled'}\n                          </span>\n                        </div>\n                      ) : (\n                        <Input \n                          value={Array.isArray(value) ? value.join(', ') : String(value)}\n                          placeholder={`Enter ${key.replace(/([A-Z])/g, ' $1').toLowerCase()}`}\n                        />\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n            \n            {/* Features */}\n            <div className=\"space-y-4\">\n              <h4 className=\"font-medium\">Available Features</h4>\n              <div className=\"grid grid-cols-2 gap-2\">\n                {integration.features.map((feature, index) => (\n                  <div key={index} className=\"flex items-center gap-2\">\n                    <CheckCircle2 className=\"h-4 w-4 text-green-500\" />\n                    <span className=\"text-sm\">{feature}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Data Types */}\n            {integration.dataTypes && (\n              <div className=\"space-y-4\">\n                <h4 className=\"font-medium\">Synchronized Data</h4>\n                <div className=\"flex flex-wrap gap-2\">\n                  {integration.dataTypes.map((dataType) => (\n                    <Badge key={dataType} variant=\"secondary\">\n                      {dataType.replace(/[_-]/g, ' ')}\n                    </Badge>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            <Separator />\n\n            {/* Actions */}\n            <div className=\"flex justify-end gap-2\">\n              <Button variant=\"outline\" onClick={() => setIsConfigOpen(false)}>\n                Cancel\n              </Button>\n              <Button>\n                Save Changes\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1719, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-white bg-black h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,2QAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,2QAAC;YACC,aAAU;YACV,WAAW,IAAA,sJAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1843, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { CheckIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Checkbox({\n  className,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\n  return (\n    <CheckboxPrimitive.Root\n      data-slot=\"checkbox\"\n      className={cn(\n        \"peer border-input dark:bg-input/90 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator\n        data-slot=\"checkbox-indicator\"\n        className=\"flex items-center justify-center text-current transition-none\"\n      >\n        <CheckIcon className=\"size-3.5\" />\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  )\n}\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACiD;IACpD,qBACE,2QAAC,yMAAsB;QACrB,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,+eACA;QAED,GAAG,KAAK;kBAET,cAAA,2QAAC,8MAA2B;YAC1B,aAAU;YACV,WAAU;sBAEV,cAAA,2QAAC,kPAAS;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI7B","debugId":null}},
    {"offset": {"line": 1887, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/integrations/api-keys-list.tsx"],"sourcesContent":["// components/integrations/api-keys-list.tsx\n'use client'\n\nimport { useState } from 'react'\nimport { \n  Card, \n  CardContent, \n  CardDescription, \n  CardHeader, \n  CardTitle \n} from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table'\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu'\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from '@/components/ui/dialog'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport {\n  Plus,\n  MoreHorizontal,\n  Edit,\n  Trash2,\n  Copy,\n  Eye,\n  EyeOff,\n  Key,\n  CheckCircle,\n  XCircle,\n  AlertTriangle,\n  ExternalLink,\n  Calendar,\n  Activity,\n  Shield\n} from 'lucide-react'\nimport { type ApiKey } from '@/lib/utils/dummy-data-integrations'\nimport { formatRelativeTime, formatDate } from '@/lib/utils'\n\ninterface ApiKeysListProps {\n  apiKeys: ApiKey[]\n}\n\nconst availablePermissions = [\n  'projects.read',\n  'projects.write',\n  'tasks.read',\n  'tasks.write',\n  'content.read',\n  'content.write',\n  'assets.read',\n  'assets.write',\n  'team.read',\n  'analytics.read',\n  'webhooks.read',\n  'webhooks.write',\n  'webhooks.manage'\n]\n\nexport function ApiKeysList({ apiKeys }: ApiKeysListProps) {\n  const [isCreateOpen, setIsCreateOpen] = useState(false)\n  const [isViewOpen, setIsViewOpen] = useState(false)\n  const [selectedApiKey, setSelectedApiKey] = useState<ApiKey | null>(null)\n  const [newApiKey, setNewApiKey] = useState({\n    name: '',\n    permissions: [] as string[],\n    expiresAt: ''\n  })\n  const [showKey, setShowKey] = useState<string | null>(null)\n  const [newlyCreatedKey, setNewlyCreatedKey] = useState<string | null>(null)\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'active':\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />\n      case 'expired':\n        return <XCircle className=\"h-4 w-4 text-red-500\" />\n      case 'inactive':\n        return <XCircle className=\"h-4 w-4 text-gray-400\" />\n      default:\n        return <XCircle className=\"h-4 w-4 text-gray-400\" />\n    }\n  }\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'active':\n        return <Badge variant=\"default\" className=\"bg-green-100 text-green-800 hover:bg-green-100\">Active</Badge>\n      case 'expired':\n        return <Badge variant=\"destructive\">Expired</Badge>\n      case 'inactive':\n        return <Badge variant=\"secondary\">Inactive</Badge>\n      default:\n        return <Badge variant=\"outline\">Unknown</Badge>\n    }\n  }\n\n  const handlePermissionChange = (permission: string, checked: boolean) => {\n    setNewApiKey(prev => ({\n      ...prev,\n      permissions: checked \n        ? [...prev.permissions, permission]\n        : prev.permissions.filter(p => p !== permission)\n    }))\n  }\n\n  const handleCreateApiKey = () => {\n    // In real app, this would make an API call and return the actual key\n    const generatedKey = `pk_live_${Math.random().toString(36).substring(2, 15)}${Math.random().toString(36).substring(2, 15)}`\n    setNewlyCreatedKey(generatedKey)\n    console.log('Creating API key:', newApiKey)\n    setNewApiKey({ name: '', permissions: [], expiresAt: '' })\n    setIsCreateOpen(false)\n  }\n\n  const handleViewApiKey = (apiKey: ApiKey) => {\n    setSelectedApiKey(apiKey)\n    setIsViewOpen(true)\n  }\n\n  const handleDeleteApiKey = (apiKeyId: string) => {\n    // In real app, this would make an API call\n    console.log('Deleting API key:', apiKeyId)\n  }\n\n  const handleRevokeApiKey = (apiKeyId: string) => {\n    console.log('Revoking API key:', apiKeyId)\n  }\n\n  const copyApiKey = (key: string) => {\n    navigator.clipboard.writeText(key)\n  }\n\n  const toggleKeyVisibility = (keyId: string) => {\n    setShowKey(showKey === keyId ? null : keyId)\n  }\n\n  const isExpiringSoon = (expiresAt?: string) => {\n    if (!expiresAt) return false\n    const expiryDate = new Date(expiresAt)\n    const now = new Date()\n    const daysUntilExpiry = Math.ceil((expiryDate.getTime() - now.getTime()) / (1000 * 60 * 60 * 24))\n    return daysUntilExpiry <= 30 && daysUntilExpiry > 0\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Key className=\"h-5 w-5\" />\n                API Keys\n              </CardTitle>\n              <CardDescription>\n                Manage API keys for programmatic access to your Droplog data\n              </CardDescription>\n            </div>\n            <Button onClick={() => setIsCreateOpen(true)}>\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Create API Key\n            </Button>\n          </div>\n        </CardHeader>\n      </Card>\n\n      {/* Newly Created Key Alert */}\n      {newlyCreatedKey && (\n        <Alert>\n          <Shield className=\"h-4 w-4\" />\n          <AlertDescription>\n            <div className=\"space-y-2\">\n              <div className=\"font-medium\">Your new API key has been created!</div>\n              <div className=\"flex items-center gap-2\">\n                <code className=\"text-xs bg-muted px-2 py-1 rounded font-mono\">\n                  {newlyCreatedKey}\n                </code>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => copyApiKey(newlyCreatedKey)}\n                >\n                  <Copy className=\"h-3 w-3 mr-1\" />\n                  Copy\n                </Button>\n              </div>\n              <div className=\"text-sm text-muted-foreground\">\n                Make sure to copy this key now. You won't be able to see it again for security reasons.\n              </div>\n              <Button \n                variant=\"outline\" \n                size=\"sm\" \n                onClick={() => setNewlyCreatedKey(null)}\n              >\n                Got it, dismiss\n              </Button>\n            </div>\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Expiring Keys Alert */}\n      {apiKeys.some(key => isExpiringSoon(key.expiresAt)) && (\n        <Alert>\n          <AlertTriangle className=\"h-4 w-4\" />\n          <AlertDescription>\n            Some of your API keys are expiring soon. Review and renew them to avoid service interruption.\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Quick Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center gap-2\">\n              <Activity className=\"h-4 w-4 text-blue-500\" />\n              <div>\n                <div className=\"text-2xl font-bold\">\n                  {apiKeys.filter(k => k.status === 'active').length}\n                </div>\n                <div className=\"text-sm text-muted-foreground\">Active Keys</div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center gap-2\">\n              <AlertTriangle className=\"h-4 w-4 text-yellow-500\" />\n              <div>\n                <div className=\"text-2xl font-bold\">\n                  {apiKeys.filter(k => isExpiringSoon(k.expiresAt)).length}\n                </div>\n                <div className=\"text-sm text-muted-foreground\">Expiring Soon</div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center gap-2\">\n              <XCircle className=\"h-4 w-4 text-red-500\" />\n              <div>\n                <div className=\"text-2xl font-bold\">\n                  {apiKeys.filter(k => k.status === 'expired').length}\n                </div>\n                <div className=\"text-sm text-muted-foreground\">Expired</div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center gap-2\">\n              <Activity className=\"h-4 w-4 text-green-500\" />\n              <div>\n                <div className=\"text-2xl font-bold\">\n                  {apiKeys.reduce((sum, key) => sum + key.usageCount, 0).toLocaleString()}\n                </div>\n                <div className=\"text-sm text-muted-foreground\">Total Calls</div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* API Keys Table */}\n      <Card>\n        <CardContent className=\"p-0\">\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Name</TableHead>\n                <TableHead>Key</TableHead>\n                <TableHead>Permissions</TableHead>\n                <TableHead>Status</TableHead>\n                <TableHead>Usage</TableHead>\n                <TableHead>Last Used</TableHead>\n                <TableHead>Expires</TableHead>\n                <TableHead className=\"w-[50px]\"></TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {apiKeys.map((apiKey) => (\n                <TableRow key={apiKey.id}>\n                  <TableCell>\n                    <div className=\"font-medium\">{apiKey.name}</div>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"flex items-center gap-2\">\n                      <code className=\"text-xs bg-muted px-2 py-1 rounded font-mono\">\n                        {showKey === apiKey.id ? apiKey.key : `${apiKey.key.substring(0, 8)}${'*'.repeat(15)}`}\n                      </code>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"h-6 w-6 p-0\"\n                        onClick={() => toggleKeyVisibility(apiKey.id)}\n                      >\n                        {showKey === apiKey.id ? (\n                          <EyeOff className=\"h-3 w-3\" />\n                        ) : (\n                          <Eye className=\"h-3 w-3\" />\n                        )}\n                      </Button>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"h-6 w-6 p-0\"\n                        onClick={() => copyApiKey(apiKey.key)}\n                      >\n                        <Copy className=\"h-3 w-3\" />\n                      </Button>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"flex flex-wrap gap-1\">\n                      {apiKey.permissions.slice(0, 2).map((permission) => (\n                        <Badge key={permission} variant=\"outline\" className=\"text-xs\">\n                          {permission}\n                        </Badge>\n                      ))}\n                      {apiKey.permissions.length > 2 && (\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          +{apiKey.permissions.length - 2}\n                        </Badge>\n                      )}\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"flex items-center gap-2\">\n                      {getStatusIcon(apiKey.status)}\n                      {getStatusBadge(apiKey.status)}\n                      {isExpiringSoon(apiKey.expiresAt) && (\n                        <AlertTriangle className=\"h-4 w-4 text-yellow-500\" />\n                      )}\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"text-sm\">\n                      {apiKey.usageCount.toLocaleString()} calls\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"text-sm text-muted-foreground\">\n                      {apiKey.lastUsed \n                        ? formatRelativeTime(apiKey.lastUsed)\n                        : 'Never'\n                      }\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"text-sm text-muted-foreground\">\n                      {apiKey.expiresAt ? (\n                        <div className={isExpiringSoon(apiKey.expiresAt) ? 'text-yellow-600' : ''}>\n                          {formatDate(apiKey.expiresAt)}\n                        </div>\n                      ) : (\n                        'Never'\n                      )}\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <DropdownMenu>\n                      <DropdownMenuTrigger asChild>\n                        <Button variant=\"ghost\" size=\"sm\" className=\"h-8 w-8 p-0\">\n                          <MoreHorizontal className=\"h-4 w-4\" />\n                        </Button>\n                      </DropdownMenuTrigger>\n                      <DropdownMenuContent align=\"end\">\n                        <DropdownMenuItem onClick={() => handleViewApiKey(apiKey)}>\n                          <Eye className=\"h-4 w-4 mr-2\" />\n                          View Details\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onClick={() => copyApiKey(apiKey.key)}>\n                          <Copy className=\"h-4 w-4 mr-2\" />\n                          Copy Key\n                        </DropdownMenuItem>\n                        {apiKey.status === 'active' && (\n                          <DropdownMenuItem onClick={() => handleRevokeApiKey(apiKey.id)}>\n                            <XCircle className=\"h-4 w-4 mr-2\" />\n                            Revoke\n                          </DropdownMenuItem>\n                        )}\n                        <DropdownMenuItem \n                          onClick={() => handleDeleteApiKey(apiKey.id)}\n                          className=\"text-red-600\"\n                        >\n                          <Trash2 className=\"h-4 w-4 mr-2\" />\n                          Delete\n                        </DropdownMenuItem>\n                      </DropdownMenuContent>\n                    </DropdownMenu>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </CardContent>\n      </Card>\n\n      {/* Create API Key Dialog */}\n      <Dialog open={isCreateOpen} onOpenChange={setIsCreateOpen}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle>Create New API Key</DialogTitle>\n            <DialogDescription>\n              Generate a new API key for programmatic access to your Droplog data\n            </DialogDescription>\n          </DialogHeader>\n          \n          <div className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"api-key-name\">Name</Label>\n              <Input\n                id=\"api-key-name\"\n                placeholder=\"e.g., Mobile App, Analytics Dashboard\"\n                value={newApiKey.name}\n                onChange={(e) => setNewApiKey(prev => ({ ...prev, name: e.target.value }))}\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"api-key-expires\">Expires At (Optional)</Label>\n              <Input\n                id=\"api-key-expires\"\n                type=\"date\"\n                value={newApiKey.expiresAt}\n                onChange={(e) => setNewApiKey(prev => ({ ...prev, expiresAt: e.target.value }))}\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label>Permissions</Label>\n              <div className=\"grid grid-cols-2 gap-2 max-h-48 overflow-y-auto border rounded-lg p-3\">\n                {availablePermissions.map((permission) => (\n                  <div key={permission} className=\"flex items-center space-x-2\">\n                    <Checkbox\n                      id={permission}\n                      checked={newApiKey.permissions.includes(permission)}\n                      onCheckedChange={(checked) => handlePermissionChange(permission, checked as boolean)}\n                    />\n                    <Label htmlFor={permission} className=\"text-sm font-normal\">\n                      {permission}\n                    </Label>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <Alert>\n              <AlertTriangle className=\"h-4 w-4\" />\n              <AlertDescription>\n                Make sure to copy your API key after creation. You won't be able to see it again for security reasons.\n              </AlertDescription>\n            </Alert>\n\n            <div className=\"flex justify-end gap-2 pt-4\">\n              <Button variant=\"outline\" onClick={() => setIsCreateOpen(false)}>\n                Cancel\n              </Button>\n              <Button \n                onClick={handleCreateApiKey}\n                disabled={!newApiKey.name || newApiKey.permissions.length === 0}\n              >\n                Create API Key\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      {/* View API Key Dialog */}\n      <Dialog open={isViewOpen} onOpenChange={setIsViewOpen}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle>API Key Details</DialogTitle>\n            <DialogDescription>\n              View detailed information about this API key\n            </DialogDescription>\n          </DialogHeader>\n          \n          {selectedApiKey && (\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-2\">\n                  <Label>Name</Label>\n                  <div className=\"font-medium\">{selectedApiKey.name}</div>\n                </div>\n                <div className=\"space-y-2\">\n                  <Label>Status</Label>\n                  <div className=\"flex items-center gap-2\">\n                    {getStatusIcon(selectedApiKey.status)}\n                    {getStatusBadge(selectedApiKey.status)}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label>API Key</Label>\n                <div className=\"flex items-center gap-2\">\n                  <code className=\"text-xs bg-muted px-3 py-2 rounded font-mono flex-1\">\n                    {showKey === selectedApiKey.id ? selectedApiKey.key : `${selectedApiKey.key.substring(0, 8)}${'*'.repeat(15)}`}\n                  </code>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => toggleKeyVisibility(selectedApiKey.id)}\n                  >\n                    {showKey === selectedApiKey.id ? (\n                      <EyeOff className=\"h-4 w-4\" />\n                    ) : (\n                      <Eye className=\"h-4 w-4\" />\n                    )}\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => copyApiKey(selectedApiKey.key)}\n                  >\n                    <Copy className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-2\">\n                  <Label>Created</Label>\n                  <div className=\"text-sm text-muted-foreground\">\n                    {formatDate(selectedApiKey.createdAt)}\n                  </div>\n                </div>\n                <div className=\"space-y-2\">\n                  <Label>Last Used</Label>\n                  <div className=\"text-sm text-muted-foreground\">\n                    {selectedApiKey.lastUsed \n                      ? formatRelativeTime(selectedApiKey.lastUsed)\n                      : 'Never'\n                    }\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-2\">\n                  <Label>Usage Count</Label>\n                  <div className=\"text-sm\">{selectedApiKey.usageCount.toLocaleString()} calls</div>\n                </div>\n                <div className=\"space-y-2\">\n                  <Label>Expires</Label>\n                  <div className=\"text-sm text-muted-foreground\">\n                    {selectedApiKey.expiresAt ? formatDate(selectedApiKey.expiresAt) : 'Never'}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label>Permissions</Label>\n                <div className=\"flex flex-wrap gap-2\">\n                  {selectedApiKey.permissions.map((permission) => (\n                    <Badge key={permission} variant=\"secondary\">\n                      {permission}\n                    </Badge>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"flex justify-end gap-2 pt-4\">\n                <Button variant=\"outline\" onClick={() => setIsViewOpen(false)}>\n                  Close\n                </Button>\n                {selectedApiKey.status === 'active' && (\n                  <Button \n                    variant=\"destructive\" \n                    onClick={() => handleRevokeApiKey(selectedApiKey.id)}\n                  >\n                    Revoke Key\n                  </Button>\n                )}\n              </div>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n\n      {/* API Documentation Info */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <ExternalLink className=\"h-5 w-5\" />\n            API Documentation\n          </CardTitle>\n          <CardDescription>\n            Learn how to use the Droplog API with your newly created keys\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"p-4 border rounded-lg\">\n              <h4 className=\"font-medium mb-2\">Base URL</h4>\n              <code className=\"text-xs bg-muted px-2 py-1 rounded\">\n                https://api.droplog.com/v1\n              </code>\n            </div>\n            <div className=\"p-4 border rounded-lg\">\n              <h4 className=\"font-medium mb-2\">Authentication</h4>\n              <code className=\"text-xs bg-muted px-2 py-1 rounded\">\n                Authorization: Bearer YOUR_API_KEY\n              </code>\n            </div>\n          </div>\n          \n          <div className=\"space-y-2\">\n            <h4 className=\"font-medium\">Example Usage</h4>\n            <div className=\"bg-muted p-3 rounded-lg\">\n              <code className=\"text-xs\">\n                curl -H \"Authorization: Bearer YOUR_API_KEY\" \\<br/>\n                &nbsp;&nbsp;&nbsp;&nbsp;https://api.droplog.com/v1/projects\n              </code>\n            </div>\n          </div>\n          \n          <Button variant=\"outline\" className=\"w-full\">\n            <ExternalLink className=\"h-4 w-4 mr-2\" />\n            View Full API Documentation\n          </Button>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3636, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/integrations/integrations-view.tsx"],"sourcesContent":["// components/integrations/integrations-view.tsx\n'use client'\n\nimport { useState } from 'react'\nimport { \n  Card, \n  CardContent, \n  CardDescription, \n  CardHeader, \n  CardTitle \n} from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport { \n  Tabs, \n  TabsContent, \n  TabsList, \n  TabsTrigger \n} from '@/components/ui/tabs'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport {\n  Plug,\n  AlertTriangle,\n  CheckCircle,\n  XCircle,\n  Clock,\n  BarChart3,\n  MessageSquare,\n  Cloud,\n  Github,\n  Grid3X3,\n  Calendar,\n  HardDrive,\n  FileText,\n  MessageCircle,\n  Users,\n  Bug,\n  Activity,\n  Zap,\n  Settings2,\n  Webhook,\n  Trello,\n  Droplets,\n  GitBranch\n} from 'lucide-react'\nimport { integrations, webhooks, apiKeys, type Integration } from '@/lib/utils/dummy-data-integrations'\nimport { IntegrationCard } from './integration-card'\nimport { WebhooksList } from './webhooks-list'\nimport { ApiKeysList } from './api-keys-list'\n\n// Icon mapping for integrations\nconst iconMap = {\n  Calendar,\n  Grid3X3,\n  FileText,\n  HardDrive,\n  Cloud,\n  Droplets,\n  MessageSquare,\n  MessageCircle,\n  Users,\n  Github,\n  GitBranch,\n  Bug,\n  BarChart3,\n  Activity,\n  Zap,\n  Settings2,\n  Webhook,\n  Trello,\n  CheckCircle,\n  XCircle,\n  Clock\n}\n\nexport function IntegrationsView() {\n  const [selectedCategory, setSelectedCategory] = useState<string>('all')\n\n  // Group integrations by category\n  const categories = [\n    { key: 'all', label: 'All Integrations', icon: Plug },\n    { key: 'productivity', label: 'Productivity', icon: CheckCircle },\n    { key: 'storage', label: 'Storage', icon: Cloud },\n    { key: 'communication', label: 'Communication', icon: MessageSquare },\n    { key: 'development', label: 'Development', icon: Github },\n    { key: 'analytics', label: 'Analytics', icon: BarChart3 },\n    { key: 'automation', label: 'Automation', icon: Zap }\n  ]\n\n  const filteredIntegrations = selectedCategory === 'all' \n    ? integrations \n    : integrations.filter(integration => integration.category === selectedCategory)\n\n  // Statistics\n  const connectedCount = integrations.filter(i => i.status === 'connected').length\n  const availableCount = integrations.filter(i => i.status === 'disconnected').length\n  const errorCount = integrations.filter(i => i.status === 'error').length\n  const activeWebhooksCount = webhooks.filter(w => w.status === 'active').length\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'connected': return <CheckCircle className=\"h-4 w-4 text-green-500\" />\n      case 'error': return <XCircle className=\"h-4 w-4 text-red-500\" />\n      case 'pending': return <Clock className=\"h-4 w-4 text-yellow-500\" />\n      default: return <XCircle className=\"h-4 w-4 text-gray-400\" />\n    }\n  }\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'connected':\n        return <Badge variant=\"default\" className=\"bg-green-100 text-green-800 hover:bg-green-100\">Connected</Badge>\n      case 'error':\n        return <Badge variant=\"destructive\">Error</Badge>\n      case 'pending':\n        return <Badge variant=\"secondary\" className=\"bg-yellow-100 text-yellow-800\">Pending</Badge>\n      default:\n        return <Badge variant=\"outline\">Available</Badge>\n    }\n  }\n\n  const getPlanBadge = (plan: string | null) => {\n    if (!plan) return null\n    \n    switch (plan) {\n      case 'free':\n        return <Badge variant=\"secondary\" className=\"text-xs\">Free</Badge>\n      case 'pro':\n        return <Badge variant=\"default\" className=\"text-xs bg-blue-100 text-blue-800 hover:bg-blue-100\">Pro</Badge>\n      case 'enterprise':\n        return <Badge variant=\"default\" className=\"text-xs bg-purple-100 text-purple-800 hover:bg-purple-100\">Enterprise</Badge>\n      default:\n        return null\n    }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Overview Stats */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Plug className=\"h-5 w-5\" />\n            Integrations Overview\n          </CardTitle>\n          <CardDescription>\n            Monitor and manage all your connected services\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n            <div className=\"text-center p-4 border rounded-lg\">\n              <div className=\"text-2xl font-bold text-green-600\">{connectedCount}</div>\n              <div className=\"text-sm text-muted-foreground\">Connected</div>\n            </div>\n            <div className=\"text-center p-4 border rounded-lg\">\n              <div className=\"text-2xl font-bold text-gray-600\">{availableCount}</div>\n              <div className=\"text-sm text-muted-foreground\">Available</div>\n            </div>\n            <div className=\"text-center p-4 border rounded-lg\">\n              <div className=\"text-2xl font-bold text-red-600\">{errorCount}</div>\n              <div className=\"text-sm text-muted-foreground\">Errors</div>\n            </div>\n            <div className=\"text-center p-4 border rounded-lg\">\n              <div className=\"text-2xl font-bold text-blue-600\">{activeWebhooksCount}</div>\n              <div className=\"text-sm text-muted-foreground\">Active Webhooks</div>\n            </div>\n          </div>\n\n          {errorCount > 0 && (\n            <Alert>\n              <AlertTriangle className=\"h-4 w-4\" />\n              <AlertDescription>\n                {errorCount} integration{errorCount > 1 ? 's' : ''} require attention. \n                Check the connection settings and try reconnecting.\n              </AlertDescription>\n            </Alert>\n          )}\n        </CardContent>\n      </Card>\n\n      <Tabs defaultValue=\"integrations\" className=\"space-y-6\">\n        <TabsList className=\"grid w-full grid-cols-3\">\n          <TabsTrigger value=\"integrations\">Integrations</TabsTrigger>\n          <TabsTrigger value=\"webhooks\">Webhooks</TabsTrigger>\n          <TabsTrigger value=\"api\">API Keys</TabsTrigger>\n        </TabsList>\n\n        {/* Integrations Tab */}\n        <TabsContent value=\"integrations\" className=\"space-y-6\">\n          {/* Category Filter */}\n          <div className=\"flex flex-wrap gap-2 mb-6\">\n            {categories.map((category) => {\n              const IconComponent = category.icon\n              return (\n                <Button\n                  key={category.key}\n                  variant={selectedCategory === category.key ? 'default' : 'outline'}\n                  size=\"sm\"\n                  onClick={() => setSelectedCategory(category.key)}\n                  className=\"flex items-center gap-2\"\n                >\n                  <IconComponent className=\"h-4 w-4\" />\n                  {category.label}\n                </Button>\n              )\n            })}\n          </div>\n\n          {/* Integrations Grid */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {filteredIntegrations.map((integration) => {\n              const IconComponent = iconMap[integration.icon as keyof typeof iconMap] || Plug\n              \n              return (\n                <IntegrationCard\n                  key={integration.id}\n                  integration={integration}\n                  icon={IconComponent}\n                  statusIcon={getStatusIcon(integration.status)}\n                  statusBadge={getStatusBadge(integration.status)}\n                  planBadge={getPlanBadge(integration.plan)}\n                />\n              )\n            })}\n          </div>\n\n          {filteredIntegrations.length === 0 && (\n            <div className=\"text-center py-12\">\n              <Plug className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-muted-foreground mb-2\">\n                No integrations found\n              </h3>\n              <p className=\"text-sm text-muted-foreground\">\n                Try selecting a different category or check back later for new integrations.\n              </p>\n            </div>\n          )}\n        </TabsContent>\n\n        {/* Webhooks Tab */}\n        <TabsContent value=\"webhooks\" className=\"space-y-6\">\n          <WebhooksList webhooks={webhooks} />\n        </TabsContent>\n\n        {/* API Keys Tab */}\n        <TabsContent value=\"api\" className=\"space-y-6\">\n          <ApiKeysList apiKeys={apiKeys} />\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n}"],"names":[],"mappings":"AAAA,gDAAgD;;;;;;AAGhD;AACA;AAOA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA;AACA;;;;;;AAEA;AA/CA;;;;;;;;;;;;;AAiDA,gCAAgC;AAChC,MAAM,UAAU;IACd,UAAA,mPAAQ;IACR,SAAA,oPAAO;IACP,UAAA,uPAAQ;IACR,WAAA,0PAAS;IACT,OAAA,0OAAK;IACL,UAAA,mPAAQ;IACR,eAAA,sQAAa;IACb,eAAA,sQAAa;IACb,OAAA,0OAAK;IACL,QAAA,6OAAM;IACN,WAAA,0PAAS;IACT,KAAA,oOAAG;IACH,WAAA,4PAAS;IACT,UAAA,mPAAQ;IACR,KAAA,oOAAG;IACH,WAAA,0PAAS;IACT,SAAA,gPAAO;IACP,QAAA,6OAAM;IACN,aAAA,uQAAW;IACX,SAAA,oPAAO;IACP,OAAA,0OAAK;AACP;AAEO,SAAS;IACd,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,8OAAQ,EAAS;IAEjE,iCAAiC;IACjC,MAAM,aAAa;QACjB;YAAE,KAAK;YAAO,OAAO;YAAoB,MAAM,uOAAI;QAAC;QACpD;YAAE,KAAK;YAAgB,OAAO;YAAgB,MAAM,uQAAW;QAAC;QAChE;YAAE,KAAK;YAAW,OAAO;YAAW,MAAM,0OAAK;QAAC;QAChD;YAAE,KAAK;YAAiB,OAAO;YAAiB,MAAM,sQAAa;QAAC;QACpE;YAAE,KAAK;YAAe,OAAO;YAAe,MAAM,6OAAM;QAAC;QACzD;YAAE,KAAK;YAAa,OAAO;YAAa,MAAM,4PAAS;QAAC;QACxD;YAAE,KAAK;YAAc,OAAO;YAAc,MAAM,oOAAG;QAAC;KACrD;IAED,MAAM,uBAAuB,qBAAqB,QAC9C,iMAAY,GACZ,iMAAY,CAAC,MAAM,CAAC,CAAA,cAAe,YAAY,QAAQ,KAAK;IAEhE,aAAa;IACb,MAAM,iBAAiB,iMAAY,CAAC,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,aAAa,MAAM;IAChF,MAAM,iBAAiB,iMAAY,CAAC,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,gBAAgB,MAAM;IACnF,MAAM,aAAa,iMAAY,CAAC,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,SAAS,MAAM;IACxE,MAAM,sBAAsB,6LAAQ,CAAC,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,UAAU,MAAM;IAE9E,MAAM,gBAAgB,CAAC;QACrB,OAAQ;YACN,KAAK;gBAAa,qBAAO,2QAAC,uQAAW;oBAAC,WAAU;;;;;;YAChD,KAAK;gBAAS,qBAAO,2QAAC,oPAAO;oBAAC,WAAU;;;;;;YACxC,KAAK;gBAAW,qBAAO,2QAAC,0OAAK;oBAAC,WAAU;;;;;;YACxC;gBAAS,qBAAO,2QAAC,oPAAO;oBAAC,WAAU;;;;;;QACrC;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,OAAQ;YACN,KAAK;gBACH,qBAAO,2QAAC,uKAAK;oBAAC,SAAQ;oBAAU,WAAU;8BAAiD;;;;;;YAC7F,KAAK;gBACH,qBAAO,2QAAC,uKAAK;oBAAC,SAAQ;8BAAc;;;;;;YACtC,KAAK;gBACH,qBAAO,2QAAC,uKAAK;oBAAC,SAAQ;oBAAY,WAAU;8BAAgC;;;;;;YAC9E;gBACE,qBAAO,2QAAC,uKAAK;oBAAC,SAAQ;8BAAU;;;;;;QACpC;IACF;IAEA,MAAM,eAAe,CAAC;QACpB,IAAI,CAAC,MAAM,OAAO;QAElB,OAAQ;YACN,KAAK;gBACH,qBAAO,2QAAC,uKAAK;oBAAC,SAAQ;oBAAY,WAAU;8BAAU;;;;;;YACxD,KAAK;gBACH,qBAAO,2QAAC,uKAAK;oBAAC,SAAQ;oBAAU,WAAU;8BAAsD;;;;;;YAClG,KAAK;gBACH,qBAAO,2QAAC,uKAAK;oBAAC,SAAQ;oBAAU,WAAU;8BAA4D;;;;;;YACxG;gBACE,OAAO;QACX;IACF;IAEA,qBACE,2QAAC;QAAI,WAAU;;0BAEb,2QAAC,qKAAI;;kCACH,2QAAC,2KAAU;;0CACT,2QAAC,0KAAS;gCAAC,WAAU;;kDACnB,2QAAC,uOAAI;wCAAC,WAAU;;;;;;oCAAY;;;;;;;0CAG9B,2QAAC,gLAAe;0CAAC;;;;;;;;;;;;kCAInB,2QAAC,4KAAW;;0CACV,2QAAC;gCAAI,WAAU;;kDACb,2QAAC;wCAAI,WAAU;;0DACb,2QAAC;gDAAI,WAAU;0DAAqC;;;;;;0DACpD,2QAAC;gDAAI,WAAU;0DAAgC;;;;;;;;;;;;kDAEjD,2QAAC;wCAAI,WAAU;;0DACb,2QAAC;gDAAI,WAAU;0DAAoC;;;;;;0DACnD,2QAAC;gDAAI,WAAU;0DAAgC;;;;;;;;;;;;kDAEjD,2QAAC;wCAAI,WAAU;;0DACb,2QAAC;gDAAI,WAAU;0DAAmC;;;;;;0DAClD,2QAAC;gDAAI,WAAU;0DAAgC;;;;;;;;;;;;kDAEjD,2QAAC;wCAAI,WAAU;;0DACb,2QAAC;gDAAI,WAAU;0DAAoC;;;;;;0DACnD,2QAAC;gDAAI,WAAU;0DAAgC;;;;;;;;;;;;;;;;;;4BAIlD,aAAa,mBACZ,2QAAC,uKAAK;;kDACJ,2QAAC,sQAAa;wCAAC,WAAU;;;;;;kDACzB,2QAAC,kLAAgB;;4CACd;4CAAW;4CAAa,aAAa,IAAI,MAAM;4CAAG;;;;;;;;;;;;;;;;;;;;;;;;;0BAQ7D,2QAAC,qKAAI;gBAAC,cAAa;gBAAe,WAAU;;kCAC1C,2QAAC,yKAAQ;wBAAC,WAAU;;0CAClB,2QAAC,4KAAW;gCAAC,OAAM;0CAAe;;;;;;0CAClC,2QAAC,4KAAW;gCAAC,OAAM;0CAAW;;;;;;0CAC9B,2QAAC,4KAAW;gCAAC,OAAM;0CAAM;;;;;;;;;;;;kCAI3B,2QAAC,4KAAW;wBAAC,OAAM;wBAAe,WAAU;;0CAE1C,2QAAC;gCAAI,WAAU;0CACZ,WAAW,GAAG,CAAC,CAAC;oCACf,MAAM,gBAAgB,SAAS,IAAI;oCACnC,qBACE,2QAAC,yKAAM;wCAEL,SAAS,qBAAqB,SAAS,GAAG,GAAG,YAAY;wCACzD,MAAK;wCACL,SAAS,IAAM,oBAAoB,SAAS,GAAG;wCAC/C,WAAU;;0DAEV,2QAAC;gDAAc,WAAU;;;;;;4CACxB,SAAS,KAAK;;uCAPV,SAAS,GAAG;;;;;gCAUvB;;;;;;0CAIF,2QAAC;gCAAI,WAAU;0CACZ,qBAAqB,GAAG,CAAC,CAAC;oCACzB,MAAM,gBAAgB,OAAO,CAAC,YAAY,IAAI,CAAyB,IAAI,uOAAI;oCAE/E,qBACE,2QAAC,yMAAe;wCAEd,aAAa;wCACb,MAAM;wCACN,YAAY,cAAc,YAAY,MAAM;wCAC5C,aAAa,eAAe,YAAY,MAAM;wCAC9C,WAAW,aAAa,YAAY,IAAI;uCALnC,YAAY,EAAE;;;;;gCAQzB;;;;;;4BAGD,qBAAqB,MAAM,KAAK,mBAC/B,2QAAC;gCAAI,WAAU;;kDACb,2QAAC,uOAAI;wCAAC,WAAU;;;;;;kDAChB,2QAAC;wCAAG,WAAU;kDAAiD;;;;;;kDAG/D,2QAAC;wCAAE,WAAU;kDAAgC;;;;;;;;;;;;;;;;;;kCAQnD,2QAAC,4KAAW;wBAAC,OAAM;wBAAW,WAAU;kCACtC,cAAA,2QAAC;4BAAa,UAAU,6LAAQ;;;;;;;;;;;kCAIlC,2QAAC,4KAAW;wBAAC,OAAM;wBAAM,WAAU;kCACjC,cAAA,2QAAC,qMAAW;4BAAC,SAAS,4LAAO;;;;;;;;;;;;;;;;;;;;;;;AAKvC","debugId":null}},
    {"offset": {"line": 4241, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/app/app/integrations/page.tsx"],"sourcesContent":["// app/integrations/page.tsx\n'use client'\n\nimport { IntegrationsView } from '@/components/integrations/integrations-view'\n\nexport default function IntegrationsPage() {\n  return (\n    <div className=\"container mx-auto px-6 py-8 max-w-7xl\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900\">Integrations</h1>\n        <p className=\"text-gray-600 mt-2\">\n          Connect your favorite tools and services to streamline your workflow across all projects\n        </p>\n      </div>\n\n      <IntegrationsView />\n    </div>\n  )\n}"],"names":[],"mappings":"AAAA,4BAA4B;;;;;;AAG5B;AAFA;;;AAIe,SAAS;IACtB,qBACE,2QAAC;QAAI,WAAU;;0BACb,2QAAC;gBAAI,WAAU;;kCACb,2QAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,2QAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;0BAKpC,2QAAC,2MAAgB;;;;;;;;;;;AAGvB","debugId":null}}]
}