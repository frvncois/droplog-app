{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AAAA;AAAA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,2QAAC,uMAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,2QAAC,wMAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,2QAAC,wMAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,OAAO,SAAS,EAChB,QAAQ,EACR,GAAG,OAGJ;IACC,qBACE,2QAAC,0MAAuB;QACtB,aAAU;QACV,aAAW;QACX,WAAW,IAAA,sJAAE,EACX,gzBACA;QAED,GAAG,KAAK;;YAER;0BACD,2QAAC,uMAAoB;gBAAC,OAAO;0BAC3B,cAAA,2QAAC,wQAAe;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAInC;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,WAAW,QAAQ,EACnB,GAAG,OACkD;IACrD,qBACE,2QAAC,yMAAsB;kBACrB,cAAA,2QAAC,0MAAuB;YACtB,aAAU;YACV,WAAW,IAAA,sJAAE,EACX,ijBACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;;8BAET,2QAAC;;;;;8BACD,2QAAC,2MAAwB;oBACvB,WAAW,IAAA,sJAAE,EACX,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,2QAAC;;;;;;;;;;;;;;;;AAIT;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,2QAAC,wMAAqB;QACpB,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAClB,SAAS,EACT,QAAQ,EACR,GAAG,OAC+C;IAClD,qBACE,2QAAC,uMAAoB;QACnB,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,6aACA;QAED,GAAG,KAAK;;0BAET,2QAAC;gBAAK,WAAU;0BACd,cAAA,2QAAC,gNAA6B;8BAC5B,cAAA,2QAAC,kPAAS;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAGzB,2QAAC,2MAAwB;0BAAE;;;;;;;;;;;;AAGjC;AAEA,SAAS,gBAAgB,EACvB,SAAS,EACT,GAAG,OACoD;IACvD,qBACE,2QAAC,4MAAyB;QACxB,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,iDAAiD;QAC9D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,qBAAqB,EAC5B,SAAS,EACT,GAAG,OACyD;IAC5D,qBACE,2QAAC,iNAA8B;QAC7B,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,2QAAC,kQAAa;YAAC,WAAU;;;;;;;;;;;AAG/B;AAEA,SAAS,uBAAuB,EAC9B,SAAS,EACT,GAAG,OAC2D;IAC9D,qBACE,2QAAC,mNAAgC;QAC/B,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,2QAAC,wQAAe;YAAC,WAAU;;;;;;;;;;;AAGjC","debugId":null}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/assets/assets-header.tsx"],"sourcesContent":["'use client'\n\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Badge } from '@/components/ui/badge'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select'\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuCheckboxItem,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu'\nimport { \n  Upload, \n  Search, \n  Filter, \n  ArrowUpDown, \n  Grid3X3, \n  List,\n  Download,\n  MoreHorizontal \n} from 'lucide-react'\nimport { projects } from '@/lib/utils/dummy-data'\n\ninterface AssetsHeaderProps {\n  assets: any[]\n  searchTerm: string\n  setSearchTerm: (term: string) => void\n  typeFilter: string\n  setTypeFilter: (filter: string) => void\n  projectFilter: string\n  setProjectFilter: (filter: string) => void\n  sortBy: string\n  setSortBy: (sort: string) => void\n  viewMode: 'grid' | 'list'\n  setViewMode: (mode: 'grid' | 'list') => void\n  onUpload: () => void\n}\n\nexport function AssetsHeader({\n  assets,\n  searchTerm,\n  setSearchTerm,\n  typeFilter,\n  setTypeFilter,\n  projectFilter,\n  setProjectFilter,\n  sortBy,\n  setSortBy,\n  viewMode,\n  setViewMode,\n  onUpload\n}: AssetsHeaderProps) {\n  const totalAssets = assets.length\n  const totalSize = assets.reduce((acc, asset) => acc + (asset.size || 0), 0)\n  const formatFileSize = (bytes: number) => {\n    if (bytes === 0) return '0 Bytes'\n    const k = 1024\n    const sizes = ['Bytes', 'KB', 'MB', 'GB']\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Page Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold\">Assets</h1>\n          <p className=\"text-muted-foreground\">\n            Manage files, images, and documents across all projects\n          </p>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <Button variant=\"outline\" size=\"sm\">\n            <Download className=\"h-4 w-4 mr-2\" />\n            Export\n          </Button>\n          <Button onClick={onUpload}>\n            <Upload className=\"h-4 w-4 mr-2\" />\n            Upload Assets\n          </Button>\n        </div>\n      </div>\n\n      {/* Quick Stats */}\n      <div className=\"flex items-center gap-4\">\n        <Badge variant=\"secondary\" className=\"py-1 px-3\">\n          {totalAssets} Assets\n        </Badge>\n        <Badge variant=\"outline\" className=\"py-1 px-3\">\n          {formatFileSize(totalSize)} Total Size\n        </Badge>\n        <Badge variant=\"outline\" className=\"py-1 px-3\">\n          {assets.filter(a => a.type === 'image').length} Images\n        </Badge>\n        <Badge variant=\"outline\" className=\"py-1 px-3\">\n          {assets.filter(a => a.type === 'video').length} Videos\n        </Badge>\n        <Badge variant=\"outline\" className=\"py-1 px-3\">\n          {assets.filter(a => a.type === 'document').length} Documents\n        </Badge>\n      </div>\n\n      {/* Filters and Controls */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-3\">\n          {/* Search */}\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\n            <Input\n              placeholder=\"Search assets...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10 w-64\"\n            />\n          </div>\n\n          {/* Type Filter */}\n          <Select value={typeFilter} onValueChange={setTypeFilter}>\n            <SelectTrigger className=\"w-40\">\n              <Filter className=\"h-4 w-4 mr-2\" />\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">All Types</SelectItem>\n              <SelectItem value=\"image\">Images</SelectItem>\n              <SelectItem value=\"video\">Videos</SelectItem>\n              <SelectItem value=\"document\">Documents</SelectItem>\n              <SelectItem value=\"pdf\">PDFs</SelectItem>\n              <SelectItem value=\"other\">Other</SelectItem>\n            </SelectContent>\n          </Select>\n\n          {/* Project Filter */}\n          <Select value={projectFilter} onValueChange={setProjectFilter}>\n            <SelectTrigger className=\"w-48\">\n              <SelectValue placeholder=\"All Projects\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">All Projects</SelectItem>\n              {projects.map((project) => (\n                <SelectItem key={project.id} value={project.id}>\n                  {project.title}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n\n        <div className=\"flex items-center gap-2\">\n          {/* Sort Dropdown */}\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"outline\" size=\"sm\">\n                <ArrowUpDown className=\"h-4 w-4 mr-2\" />\n                Sort by\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              <DropdownMenuCheckboxItem\n                checked={sortBy === 'newest'}\n                onCheckedChange={() => setSortBy('newest')}\n              >\n                Newest\n              </DropdownMenuCheckboxItem>\n              <DropdownMenuCheckboxItem\n                checked={sortBy === 'oldest'}\n                onCheckedChange={() => setSortBy('oldest')}\n              >\n                Oldest\n              </DropdownMenuCheckboxItem>\n              <DropdownMenuCheckboxItem\n                checked={sortBy === 'alphabetical'}\n                onCheckedChange={() => setSortBy('alphabetical')}\n              >\n                Alphabetical\n              </DropdownMenuCheckboxItem>\n              <DropdownMenuCheckboxItem\n                checked={sortBy === 'size'}\n                onCheckedChange={() => setSortBy('size')}\n              >\n                File Size\n              </DropdownMenuCheckboxItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n\n          {/* View Mode Toggle */}\n          <div className=\"flex border rounded-md\">\n            <Button\n              variant={viewMode === 'grid' ? 'default' : 'ghost'}\n              size=\"sm\"\n              onClick={() => setViewMode('grid')}\n              className=\"rounded-r-none\"\n            >\n              <Grid3X3 className=\"h-4 w-4\" />\n            </Button>\n            <Button\n              variant={viewMode === 'list' ? 'default' : 'ghost'}\n              size=\"sm\"\n              onClick={() => setViewMode('list')}\n              className=\"rounded-l-none\"\n            >\n              <List className=\"h-4 w-4\" />\n            </Button>\n          </div>\n\n          {/* More Actions */}\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"outline\" size=\"sm\">\n                <MoreHorizontal className=\"h-4 w-4\" />\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              <DropdownMenuCheckboxItem>\n                Show File Previews\n              </DropdownMenuCheckboxItem>\n              <DropdownMenuCheckboxItem>\n                Show File Details\n              </DropdownMenuCheckboxItem>\n              <DropdownMenuCheckboxItem>\n                Show Project Context\n              </DropdownMenuCheckboxItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 809, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col rounded-xl border py-6 gap-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-regularm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,2EACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 911, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,2QAAC,yMAAsB;QACrB,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,2QAAC,8MAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE","debugId":null}},
    {"offset": {"line": 949, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/assets/assets-stats.tsx"],"sourcesContent":["'use client'\n\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Progress } from '@/components/ui/progress'\nimport { \n  Image, \n  Video, \n  FileText, \n  HardDrive, \n  TrendingUp, \n  Download,\n  Upload as UploadIcon,\n  Eye\n} from 'lucide-react'\n\ninterface AssetsStatsProps {\n  assets: any[]\n}\n\nexport function AssetsStats({ assets }: AssetsStatsProps) {\n  // Calculate stats\n  const totalAssets = assets.length\n  const totalSize = assets.reduce((acc, asset) => acc + (asset.size || 0), 0)\n  \n  const assetTypes = {\n    images: assets.filter(a => a.type === 'image').length,\n    videos: assets.filter(a => a.type === 'video').length,\n    documents: assets.filter(a => a.type === 'document' || a.type === 'pdf').length,\n    other: assets.filter(a => !['image', 'video', 'document', 'pdf'].includes(a.type)).length\n  }\n\n  // Calculate storage usage (mock data for demo)\n  const storageLimit = 50 * 1024 * 1024 * 1024 // 50GB in bytes\n  const storageUsed = totalSize\n  const storagePercentage = Math.min((storageUsed / storageLimit) * 100, 100)\n\n  // Recent activity (mock data)\n  const recentUploads = assets.filter(asset => {\n    const uploadDate = new Date(asset.updatedAt)\n    const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)\n    return uploadDate > weekAgo\n  }).length\n\n  // Most viewed assets (mock data)\n  const mostViewedAssets = assets\n    .sort((a, b) => (b.views || 0) - (a.views || 0))\n    .slice(0, 5)\n\n  const formatFileSize = (bytes: number) => {\n    if (bytes === 0) return '0 Bytes'\n    const k = 1024\n    const sizes = ['Bytes', 'KB', 'MB', 'GB']\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n      {/* Total Assets */}\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Total Assets</CardTitle>\n          <HardDrive className=\"h-4 w-4 text-muted-foreground\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">{totalAssets}</div>\n          <p className=\"text-xs text-muted-foreground\">\n            {formatFileSize(totalSize)} total size\n          </p>\n        </CardContent>\n      </Card>\n\n      {/* Images */}\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Images</CardTitle>\n          <Image className=\"h-4 w-4 text-muted-foreground\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">{assetTypes.images}</div>\n          <p className=\"text-xs text-muted-foreground\">\n            {totalAssets > 0 ? Math.round((assetTypes.images / totalAssets) * 100) : 0}% of total assets\n          </p>\n        </CardContent>\n      </Card>\n\n      {/* Videos */}\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Videos</CardTitle>\n          <Video className=\"h-4 w-4 text-muted-foreground\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">{assetTypes.videos}</div>\n          <p className=\"text-xs text-muted-foreground\">\n            {totalAssets > 0 ? Math.round((assetTypes.videos / totalAssets) * 100) : 0}% of total assets\n          </p>\n        </CardContent>\n      </Card>\n\n      {/* Documents */}\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Documents</CardTitle>\n          <FileText className=\"h-4 w-4 text-muted-foreground\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">{assetTypes.documents}</div>\n          <p className=\"text-xs text-muted-foreground\">\n            {totalAssets > 0 ? Math.round((assetTypes.documents / totalAssets) * 100) : 0}% of total assets\n          </p>\n        </CardContent>\n      </Card>\n\n      {/* Storage Usage */}\n      <Card className=\"md:col-span-2\">\n        <CardHeader>\n          <CardTitle className=\"text-base flex items-center\">\n            <HardDrive className=\"h-5 w-5 mr-2\" />\n            Storage Usage\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between text-sm\">\n              <span>Used: {formatFileSize(storageUsed)}</span>\n              <span>Limit: {formatFileSize(storageLimit)}</span>\n            </div>\n            <Progress value={storagePercentage} className=\"h-2\" />\n          </div>\n          <div className=\"text-xs text-muted-foreground\">\n            {storagePercentage < 80 ? (\n              `${Math.round(100 - storagePercentage)}% storage remaining`\n            ) : (\n              `Warning: Only ${Math.round(100 - storagePercentage)}% storage remaining`\n            )}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Recent Activity */}\n      <Card className=\"md:col-span-2\">\n        <CardHeader>\n          <CardTitle className=\"text-base flex items-center\">\n            <TrendingUp className=\"h-5 w-5 mr-2\" />\n            Recent Activity\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-3 gap-4 text-center\">\n            <div>\n              <div className=\"text-2xl font-bold text-green-600\">{recentUploads}</div>\n              <p className=\"text-xs text-muted-foreground\">Uploads this week</p>\n            </div>\n            <div>\n              <div className=\"text-2xl font-bold text-blue-600\">{Math.floor(Math.random() * 50) + 10}</div>\n              <p className=\"text-xs text-muted-foreground\">Downloads this week</p>\n            </div>\n            <div>\n              <div className=\"text-2xl font-bold text-purple-600\">{Math.floor(Math.random() * 200) + 50}</div>\n              <p className=\"text-xs text-muted-foreground\">Total views</p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Asset Type Breakdown */}\n      <Card className=\"lg:col-span-2\">\n        <CardHeader>\n          <CardTitle className=\"text-base\">Asset Type Distribution</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"space-y-3\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-2\">\n                <Image className=\"h-4 w-4 text-blue-500\" />\n                <span className=\"text-sm\">Images</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Progress \n                  value={totalAssets > 0 ? (assetTypes.images / totalAssets) * 100 : 0} \n                  className=\"w-20 h-2\" \n                />\n                <span className=\"text-sm font-medium w-8\">{assetTypes.images}</span>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-2\">\n                <Video className=\"h-4 w-4 text-red-500\" />\n                <span className=\"text-sm\">Videos</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Progress \n                  value={totalAssets > 0 ? (assetTypes.videos / totalAssets) * 100 : 0} \n                  className=\"w-20 h-2\" \n                />\n                <span className=\"text-sm font-medium w-8\">{assetTypes.videos}</span>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-2\">\n                <FileText className=\"h-4 w-4 text-green-500\" />\n                <span className=\"text-sm\">Documents</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Progress \n                  value={totalAssets > 0 ? (assetTypes.documents / totalAssets) * 100 : 0} \n                  className=\"w-20 h-2\" \n                />\n                <span className=\"text-sm font-medium w-8\">{assetTypes.documents}</span>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Most Viewed Assets */}\n      <Card className=\"lg:col-span-2\">\n        <CardHeader>\n          <CardTitle className=\"text-base flex items-center\">\n            <Eye className=\"h-5 w-5 mr-2\" />\n            Most Viewed Assets\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-3\">\n            {mostViewedAssets.slice(0, 4).map((asset, index) => (\n              <div key={asset.id} className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-8 h-8 bg-gray-100 rounded flex items-center justify-center\">\n                    {asset.type === 'image' && <Image className=\"h-4 w-4\" />}\n                    {asset.type === 'video' && <Video className=\"h-4 w-4\" />}\n                    {(asset.type === 'document' || asset.type === 'pdf') && <FileText className=\"h-4 w-4\" />}\n                  </div>\n                  <div>\n                    <p className=\"text-sm font-medium truncate max-w-32\">{asset.title}</p>\n                    <p className=\"text-xs text-muted-foreground\">{asset.type}</p>\n                  </div>\n                </div>\n                <div className=\"text-sm text-muted-foreground\">\n                  {asset.views || Math.floor(Math.random() * 100) + 10} views\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;;;;;AAmBO,SAAS,YAAY,EAAE,MAAM,EAAoB;IACtD,kBAAkB;IAClB,MAAM,cAAc,OAAO,MAAM;IACjC,MAAM,YAAY,OAAO,MAAM,CAAC,CAAC,KAAK,QAAU,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG;IAEzE,MAAM,aAAa;QACjB,QAAQ,OAAO,MAAM,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,SAAS,MAAM;QACrD,QAAQ,OAAO,MAAM,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,SAAS,MAAM;QACrD,WAAW,OAAO,MAAM,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,cAAc,EAAE,IAAI,KAAK,OAAO,MAAM;QAC/E,OAAO,OAAO,MAAM,CAAC,CAAA,IAAK,CAAC;gBAAC;gBAAS;gBAAS;gBAAY;aAAM,CAAC,QAAQ,CAAC,EAAE,IAAI,GAAG,MAAM;IAC3F;IAEA,+CAA+C;IAC/C,MAAM,eAAe,KAAK,OAAO,OAAO,KAAK,gBAAgB;;IAC7D,MAAM,cAAc;IACpB,MAAM,oBAAoB,KAAK,GAAG,CAAC,AAAC,cAAc,eAAgB,KAAK;IAEvE,8BAA8B;IAC9B,MAAM,gBAAgB,OAAO,MAAM,CAAC,CAAA;QAClC,MAAM,aAAa,IAAI,KAAK,MAAM,SAAS;QAC3C,MAAM,UAAU,IAAI,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK,KAAK,KAAK;QACzD,OAAO,aAAa;IACtB,GAAG,MAAM;IAET,iCAAiC;IACjC,MAAM,mBAAmB,OACtB,IAAI,CAAC,CAAC,GAAG,IAAM,CAAC,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,GAC7C,KAAK,CAAC,GAAG;IAEZ,MAAM,iBAAiB,CAAC;QACtB,IAAI,UAAU,GAAG,OAAO;QACxB,MAAM,IAAI;QACV,MAAM,QAAQ;YAAC;YAAS;YAAM;YAAM;SAAK;QACzC,MAAM,IAAI,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,SAAS,KAAK,GAAG,CAAC;QAChD,OAAO,WAAW,CAAC,QAAQ,KAAK,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,CAAC,MAAM,MAAM,KAAK,CAAC,EAAE;IACzE;IAEA,qBACE,2QAAC;QAAI,WAAU;;0BAEb,2QAAC,qKAAI;;kCACH,2QAAC,2KAAU;wBAAC,WAAU;;0CACpB,2QAAC,0KAAS;gCAAC,WAAU;0CAAsB;;;;;;0CAC3C,2QAAC,0PAAS;gCAAC,WAAU;;;;;;;;;;;;kCAEvB,2QAAC,4KAAW;;0CACV,2QAAC;gCAAI,WAAU;0CAAsB;;;;;;0CACrC,2QAAC;gCAAE,WAAU;;oCACV,eAAe;oCAAW;;;;;;;;;;;;;;;;;;;0BAMjC,2QAAC,qKAAI;;kCACH,2QAAC,2KAAU;wBAAC,WAAU;;0CACpB,2QAAC,0KAAS;gCAAC,WAAU;0CAAsB;;;;;;0CAC3C,2QAAC,0OAAK;gCAAC,WAAU;;;;;;;;;;;;kCAEnB,2QAAC,4KAAW;;0CACV,2QAAC;gCAAI,WAAU;0CAAsB,WAAW,MAAM;;;;;;0CACtD,2QAAC;gCAAE,WAAU;;oCACV,cAAc,IAAI,KAAK,KAAK,CAAC,AAAC,WAAW,MAAM,GAAG,cAAe,OAAO;oCAAE;;;;;;;;;;;;;;;;;;;0BAMjF,2QAAC,qKAAI;;kCACH,2QAAC,2KAAU;wBAAC,WAAU;;0CACpB,2QAAC,0KAAS;gCAAC,WAAU;0CAAsB;;;;;;0CAC3C,2QAAC,0OAAK;gCAAC,WAAU;;;;;;;;;;;;kCAEnB,2QAAC,4KAAW;;0CACV,2QAAC;gCAAI,WAAU;0CAAsB,WAAW,MAAM;;;;;;0CACtD,2QAAC;gCAAE,WAAU;;oCACV,cAAc,IAAI,KAAK,KAAK,CAAC,AAAC,WAAW,MAAM,GAAG,cAAe,OAAO;oCAAE;;;;;;;;;;;;;;;;;;;0BAMjF,2QAAC,qKAAI;;kCACH,2QAAC,2KAAU;wBAAC,WAAU;;0CACpB,2QAAC,0KAAS;gCAAC,WAAU;0CAAsB;;;;;;0CAC3C,2QAAC,uPAAQ;gCAAC,WAAU;;;;;;;;;;;;kCAEtB,2QAAC,4KAAW;;0CACV,2QAAC;gCAAI,WAAU;0CAAsB,WAAW,SAAS;;;;;;0CACzD,2QAAC;gCAAE,WAAU;;oCACV,cAAc,IAAI,KAAK,KAAK,CAAC,AAAC,WAAW,SAAS,GAAG,cAAe,OAAO;oCAAE;;;;;;;;;;;;;;;;;;;0BAMpF,2QAAC,qKAAI;gBAAC,WAAU;;kCACd,2QAAC,2KAAU;kCACT,cAAA,2QAAC,0KAAS;4BAAC,WAAU;;8CACnB,2QAAC,0PAAS;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;;;;;;kCAI1C,2QAAC,4KAAW;wBAAC,WAAU;;0CACrB,2QAAC;gCAAI,WAAU;;kDACb,2QAAC;wCAAI,WAAU;;0DACb,2QAAC;;oDAAK;oDAAO,eAAe;;;;;;;0DAC5B,2QAAC;;oDAAK;oDAAQ,eAAe;;;;;;;;;;;;;kDAE/B,2QAAC,6KAAQ;wCAAC,OAAO;wCAAmB,WAAU;;;;;;;;;;;;0CAEhD,2QAAC;gCAAI,WAAU;0CACZ,oBAAoB,KACnB,GAAG,KAAK,KAAK,CAAC,MAAM,mBAAmB,mBAAmB,CAAC,GAE3D,CAAC,cAAc,EAAE,KAAK,KAAK,CAAC,MAAM,mBAAmB,mBAAmB,CAAC;;;;;;;;;;;;;;;;;;0BAOjF,2QAAC,qKAAI;gBAAC,WAAU;;kCACd,2QAAC,2KAAU;kCACT,cAAA,2QAAC,0KAAS;4BAAC,WAAU;;8CACnB,2QAAC,6PAAU;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;;;;;;kCAI3C,2QAAC,4KAAW;kCACV,cAAA,2QAAC;4BAAI,WAAU;;8CACb,2QAAC;;sDACC,2QAAC;4CAAI,WAAU;sDAAqC;;;;;;sDACpD,2QAAC;4CAAE,WAAU;sDAAgC;;;;;;;;;;;;8CAE/C,2QAAC;;sDACC,2QAAC;4CAAI,WAAU;sDAAoC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM;;;;;;sDACpF,2QAAC;4CAAE,WAAU;sDAAgC;;;;;;;;;;;;8CAE/C,2QAAC;;sDACC,2QAAC;4CAAI,WAAU;sDAAsC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,OAAO;;;;;;sDACvF,2QAAC;4CAAE,WAAU;sDAAgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAOrD,2QAAC,qKAAI;gBAAC,WAAU;;kCACd,2QAAC,2KAAU;kCACT,cAAA,2QAAC,0KAAS;4BAAC,WAAU;sCAAY;;;;;;;;;;;kCAEnC,2QAAC,4KAAW;wBAAC,WAAU;kCACrB,cAAA,2QAAC;4BAAI,WAAU;;8CACb,2QAAC;oCAAI,WAAU;;sDACb,2QAAC;4CAAI,WAAU;;8DACb,2QAAC,0OAAK;oDAAC,WAAU;;;;;;8DACjB,2QAAC;oDAAK,WAAU;8DAAU;;;;;;;;;;;;sDAE5B,2QAAC;4CAAI,WAAU;;8DACb,2QAAC,6KAAQ;oDACP,OAAO,cAAc,IAAI,AAAC,WAAW,MAAM,GAAG,cAAe,MAAM;oDACnE,WAAU;;;;;;8DAEZ,2QAAC;oDAAK,WAAU;8DAA2B,WAAW,MAAM;;;;;;;;;;;;;;;;;;8CAIhE,2QAAC;oCAAI,WAAU;;sDACb,2QAAC;4CAAI,WAAU;;8DACb,2QAAC,0OAAK;oDAAC,WAAU;;;;;;8DACjB,2QAAC;oDAAK,WAAU;8DAAU;;;;;;;;;;;;sDAE5B,2QAAC;4CAAI,WAAU;;8DACb,2QAAC,6KAAQ;oDACP,OAAO,cAAc,IAAI,AAAC,WAAW,MAAM,GAAG,cAAe,MAAM;oDACnE,WAAU;;;;;;8DAEZ,2QAAC;oDAAK,WAAU;8DAA2B,WAAW,MAAM;;;;;;;;;;;;;;;;;;8CAIhE,2QAAC;oCAAI,WAAU;;sDACb,2QAAC;4CAAI,WAAU;;8DACb,2QAAC,uPAAQ;oDAAC,WAAU;;;;;;8DACpB,2QAAC;oDAAK,WAAU;8DAAU;;;;;;;;;;;;sDAE5B,2QAAC;4CAAI,WAAU;;8DACb,2QAAC,6KAAQ;oDACP,OAAO,cAAc,IAAI,AAAC,WAAW,SAAS,GAAG,cAAe,MAAM;oDACtE,WAAU;;;;;;8DAEZ,2QAAC;oDAAK,WAAU;8DAA2B,WAAW,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQzE,2QAAC,qKAAI;gBAAC,WAAU;;kCACd,2QAAC,2KAAU;kCACT,cAAA,2QAAC,0KAAS;4BAAC,WAAU;;8CACnB,2QAAC,oOAAG;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;;;;;;kCAIpC,2QAAC,4KAAW;kCACV,cAAA,2QAAC;4BAAI,WAAU;sCACZ,iBAAiB,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,OAAO,sBACxC,2QAAC;oCAAmB,WAAU;;sDAC5B,2QAAC;4CAAI,WAAU;;8DACb,2QAAC;oDAAI,WAAU;;wDACZ,MAAM,IAAI,KAAK,yBAAW,2QAAC,0OAAK;4DAAC,WAAU;;;;;;wDAC3C,MAAM,IAAI,KAAK,yBAAW,2QAAC,0OAAK;4DAAC,WAAU;;;;;;wDAC3C,CAAC,MAAM,IAAI,KAAK,cAAc,MAAM,IAAI,KAAK,KAAK,mBAAK,2QAAC,uPAAQ;4DAAC,WAAU;;;;;;;;;;;;8DAE9E,2QAAC;;sEACC,2QAAC;4DAAE,WAAU;sEAAyC,MAAM,KAAK;;;;;;sEACjE,2QAAC;4DAAE,WAAU;sEAAiC,MAAM,IAAI;;;;;;;;;;;;;;;;;;sDAG5D,2QAAC;4CAAI,WAAU;;gDACZ,MAAM,KAAK,IAAI,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,OAAO;gDAAG;;;;;;;;mCAb/C,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBhC","debugId":null}},
    {"offset": {"line": 1812, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,ucACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1836, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,2QAAC,sMAAmB;QAClB,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1863, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,2QAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,2QAAC;YACC,aAAU;YACV,WAAW,IAAA,sJAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1987, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,2QAAC,qMAAkB;QACjB,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,2QAAC,qMAAkB;QACjB,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,2QAAC,wMAAqB;QACpB,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,qoBACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,2QAAC,wMAAqB;QACpB,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 2053, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/assets/assets-grid.tsx"],"sourcesContent":["// components/assets/assets-grid.tsx\n'use client'\n\nimport { useState, useMemo } from 'react'\nimport {\n  closestCenter,\n  DndContext,\n  KeyboardSensor,\n  MouseSensor,\n  TouchSensor,\n  useSensor,\n  useSensors,\n  type DragEndEvent,\n  type UniqueIdentifier,\n} from \"@dnd-kit/core\"\nimport { restrictToVerticalAxis } from \"@dnd-kit/modifiers\"\nimport {\n  arrayMove,\n  SortableContext,\n  useSortable,\n  verticalListSortingStrategy,\n} from \"@dnd-kit/sortable\"\nimport { CSS } from \"@dnd-kit/utilities\"\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'\nimport { \n  DropdownMenu, \n  DropdownMenuContent, \n  DropdownMenuTrigger, \n  DropdownMenuItem,\n  DropdownMenuSeparator \n} from '@/components/ui/dropdown-menu'\nimport { \n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from '@/components/ui/sheet'\nimport { Input } from '@/components/ui/input'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Label } from '@/components/ui/label'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table'\nimport {\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n} from '@/components/ui/tabs'\nimport { \n  IconFileText, \n  IconPhoto, \n  IconVideo, \n  IconFileZip, \n  IconDownload, \n  IconEdit, \n  IconTrash, \n  IconEye, \n  IconDotsVertical,\n  IconUpload,\n  IconFilter,\n  IconSearch,\n  IconLayoutGrid,\n  IconList,\n  IconGripVertical,\n  IconUser,\n  IconCalendar,\n  IconFolder\n} from '@tabler/icons-react'\nimport { formatDistanceToNow } from 'date-fns'\nimport { toast } from 'sonner'\n\n// Types based on Droplog playbook\ninterface Asset {\n  id: string\n  projectId: string\n  type: 'image' | 'video' | 'pdf' | 'document' | 'archive' | 'other'\n  title: string\n  fileName: string\n  fileSize: string\n  addedBy: string\n  assignedTo?: string\n  updatedAt: string\n  createdAt: string\n  description?: string\n  tags?: string[]\n  url?: string\n}\n\ninterface TeamMember {\n  id: string\n  name: string\n  role: string\n  avatarUrl?: string\n}\n\n// Dummy data following camelCase naming convention\nconst dummyAssets: Asset[] = [\n  {\n    id: \"a1\",\n    projectId: \"p1\",\n    type: \"image\",\n    title: \"Hero Banner\",\n    fileName: \"hero-banner.jpg\",\n    fileSize: \"2.4 MB\",\n    addedBy: \"u2\",\n    assignedTo: \"u1\",\n    updatedAt: \"2025-09-08T15:00:00Z\",\n    createdAt: \"2025-09-08T15:00:00Z\",\n    description: \"Main homepage hero banner image\",\n    tags: [\"homepage\", \"banner\", \"hero\"]\n  },\n  {\n    id: \"a2\",\n    projectId: \"p1\",\n    type: \"video\",\n    title: \"Product Demo\",\n    fileName: \"product-demo.mp4\",\n    fileSize: \"45.2 MB\",\n    addedBy: \"u3\",\n    updatedAt: \"2025-09-09T10:30:00Z\",\n    createdAt: \"2025-09-09T10:30:00Z\",\n    description: \"Product demonstration video for marketing\",\n    tags: [\"demo\", \"marketing\", \"product\"]\n  },\n  {\n    id: \"a3\",\n    projectId: \"p1\",\n    type: \"pdf\",\n    title: \"Design Guidelines\",\n    fileName: \"design-guidelines.pdf\",\n    fileSize: \"1.8 MB\",\n    addedBy: \"u1\",\n    assignedTo: \"u2\",\n    updatedAt: \"2025-09-07T14:20:00Z\",\n    createdAt: \"2025-09-07T14:20:00Z\",\n    description: \"Brand and design guidelines document\",\n    tags: [\"design\", \"guidelines\", \"brand\"]\n  },\n  {\n    id: \"a4\",\n    projectId: \"p2\",\n    type: \"document\",\n    title: \"API Documentation\",\n    fileName: \"api-docs.docx\",\n    fileSize: \"856 KB\",\n    addedBy: \"u4\",\n    updatedAt: \"2025-09-06T09:15:00Z\",\n    createdAt: \"2025-09-06T09:15:00Z\",\n    description: \"Complete API documentation for developers\",\n    tags: [\"api\", \"documentation\", \"development\"]\n  },\n  {\n    id: \"a5\",\n    projectId: \"p1\",\n    type: \"archive\",\n    title: \"Asset Bundle\",\n    fileName: \"assets-bundle.zip\",\n    fileSize: \"12.3 MB\",\n    addedBy: \"u2\",\n    updatedAt: \"2025-09-05T16:45:00Z\",\n    createdAt: \"2025-09-05T16:45:00Z\",\n    description: \"Complete asset bundle for Q3 release\",\n    tags: [\"bundle\", \"assets\", \"release\"]\n  },\n  {\n    id: \"a6\",\n    projectId: \"p2\",\n    type: \"image\",\n    title: \"Logo Variations\",\n    fileName: \"logo-variations.png\",\n    fileSize: \"3.1 MB\",\n    addedBy: \"u1\",\n    assignedTo: \"u3\",\n    updatedAt: \"2025-09-04T11:00:00Z\",\n    createdAt: \"2025-09-04T11:00:00Z\",\n    description: \"Various logo formats and sizes\",\n    tags: [\"logo\", \"branding\", \"identity\"]\n  }\n]\n\nconst dummyTeam: TeamMember[] = [\n  { id: \"u1\", name: \"Alice Johnson\", role: \"Designer\", avatarUrl: \"/avatars/alice.png\" },\n  { id: \"u2\", name: \"Bob Smith\", role: \"Developer\", avatarUrl: \"/avatars/bob.png\" },\n  { id: \"u3\", name: \"Carol Wilson\", role: \"Project Manager\", avatarUrl: \"/avatars/carol.png\" },\n  { id: \"u4\", name: \"David Kim\", role: \"Content Writer\", avatarUrl: \"/avatars/david.png\" }\n]\n\ninterface AssetsGridProps {\n  projectId?: string\n  showProjectFilter?: boolean\n  onAssetUpdated?: (asset: Asset) => void\n  onAssetDeleted?: (assetId: string) => void\n}\n\n// Drag Handle Component (following your pattern)\nfunction DragHandle({ id }: { id: string }) {\n  const { attributes, listeners } = useSortable({\n    id,\n  })\n\n  return (\n    <Button\n      {...attributes}\n      {...listeners}\n      variant=\"ghost\"\n      size=\"icon\"\n      className=\"text-muted-foreground size-7 hover:bg-transparent\"\n    >\n      <IconGripVertical className=\"text-muted-foreground size-3\" />\n      <span className=\"sr-only\">Drag to reorder</span>\n    </Button>\n  )\n}\n\n// Draggable Row Component (following your pattern)\nfunction DraggableRow({ \n  asset, \n  onView, \n  onEdit, \n  onDelete, \n  onDownload,\n  getTeamMember \n}: {\n  asset: Asset\n  onView: (asset: Asset) => void\n  onEdit: (asset: Asset) => void\n  onDelete: (assetId: string) => void\n  onDownload: (asset: Asset) => void\n  getTeamMember: (userId: string) => TeamMember | undefined\n}) {\n  const { transform, transition, setNodeRef, isDragging } = useSortable({\n    id: asset.id,\n  })\n\n  const getFileIcon = (type: Asset['type']) => {\n    switch (type) {\n      case 'image': return IconPhoto\n      case 'video': return IconVideo\n      case 'pdf': return IconFileText\n      case 'document': return IconFileText\n      case 'archive': return IconFileZip\n      default: return IconFileText\n    }\n  }\n\n  const getFileTypeColor = (type: Asset['type']) => {\n    switch (type) {\n      case 'image': return 'text-blue-600'\n      case 'video': return 'text-purple-600'\n      case 'pdf': return 'text-red-600'\n      case 'document': return 'text-green-600'\n      case 'archive': return 'text-orange-600'\n      default: return 'text-gray-600'\n    }\n  }\n\n  const formatTimeAgo = (dateString: string) => {\n    try {\n      return formatDistanceToNow(new Date(dateString), { addSuffix: true })\n    } catch (error) {\n      return 'Unknown'\n    }\n  }\n\n  const FileIcon = getFileIcon(asset.type)\n  const addedByMember = getTeamMember(asset.addedBy)\n  const assignedToMember = asset.assignedTo ? getTeamMember(asset.assignedTo) : null\n\n  return (\n    <TableRow\n      data-dragging={isDragging}\n      ref={setNodeRef}\n      className=\"relative z-0 data-[dragging=true]:z-10 data-[dragging=true]:opacity-80\"\n      style={{\n        transform: CSS.Transform.toString(transform),\n        transition: transition,\n      }}\n    >\n      {/* Drag Handle */}\n      <TableCell>\n        <DragHandle id={asset.id} />\n      </TableCell>\n\n      {/* Asset */}\n      <TableCell>\n        <div className=\"flex items-center space-x-3\">\n          <div className={`p-2 rounded-lg bg-gray-100 ${getFileTypeColor(asset.type)}`}>\n            <FileIcon className=\"size-4\" />\n          </div>\n          <div className=\"flex-1 min-w-0\">\n            <div \n              className=\"font-medium truncate hover:text-blue-600 cursor-pointer\"\n              onClick={() => onView(asset)}\n            >\n              {asset.title}\n            </div>\n            <div className=\"text-sm text-gray-500 truncate\">{asset.fileName}</div>\n          </div>\n        </div>\n      </TableCell>\n\n      {/* Type */}\n      <TableCell>\n        <Badge variant=\"outline\" className=\"text-xs\">\n          {asset.type}\n        </Badge>\n      </TableCell>\n\n      {/* Size */}\n      <TableCell>\n        <span className=\"text-sm text-gray-600\">{asset.fileSize}</span>\n      </TableCell>\n\n      {/* Added By */}\n      <TableCell>\n        <div className=\"flex items-center space-x-2\">\n          {addedByMember && (\n            <>\n              <Avatar className=\"size-6\">\n                <AvatarImage src={addedByMember.avatarUrl} />\n                <AvatarFallback className=\"text-xs\">\n                  {addedByMember.name.split(' ').map(n => n[0]).join('').toUpperCase()}\n                </AvatarFallback>\n              </Avatar>\n              <span className=\"text-sm text-gray-600 truncate\">{addedByMember.name}</span>\n            </>\n          )}\n        </div>\n      </TableCell>\n\n      {/* Assigned To */}\n      <TableCell>\n        {assignedToMember ? (\n          <div className=\"flex items-center space-x-2\">\n            <Avatar className=\"size-6\">\n              <AvatarImage src={assignedToMember.avatarUrl} />\n              <AvatarFallback className=\"text-xs\">\n                {assignedToMember.name.split(' ').map(n => n[0]).join('').toUpperCase()}\n              </AvatarFallback>\n            </Avatar>\n            <span className=\"text-sm text-gray-600 truncate\">{assignedToMember.name}</span>\n          </div>\n        ) : (\n          <span className=\"text-sm text-gray-400\">Unassigned</span>\n        )}\n      </TableCell>\n\n      {/* Updated */}\n      <TableCell>\n        <div className=\"flex items-center text-sm text-gray-500\">\n          <IconCalendar className=\"size-4 mr-1\" />\n          {formatTimeAgo(asset.updatedAt)}\n        </div>\n      </TableCell>\n\n      {/* Actions */}\n      <TableCell>\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"ghost\" size=\"icon\" className=\"size-8\">\n              <IconDotsVertical className=\"size-4\" />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            <DropdownMenuItem onClick={() => onView(asset)}>\n              <IconEye className=\"size-4 mr-2\" />\n              View Details\n            </DropdownMenuItem>\n            <DropdownMenuItem onClick={() => onDownload(asset)}>\n              <IconDownload className=\"size-4 mr-2\" />\n              Download\n            </DropdownMenuItem>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem onClick={() => onEdit(asset)}>\n              <IconEdit className=\"size-4 mr-2\" />\n              Edit\n            </DropdownMenuItem>\n            <DropdownMenuItem \n              onClick={() => onDelete(asset.id)}\n              className=\"text-red-600\"\n            >\n              <IconTrash className=\"size-4 mr-2\" />\n              Delete\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </TableCell>\n    </TableRow>\n  )\n}\n\n// Asset View Modal Component\nfunction AssetViewModal({ \n  asset, \n  onEdit,\n  getTeamMember \n}: { \n  asset: Asset\n  onEdit: (asset: Asset) => void\n  getTeamMember: (userId: string) => TeamMember | undefined\n}) {\n  const getFileIcon = (type: Asset['type']) => {\n    switch (type) {\n      case 'image': return IconPhoto\n      case 'video': return IconVideo\n      case 'pdf': return IconFileText\n      case 'document': return IconFileText\n      case 'archive': return IconFileZip\n      default: return IconFileText\n    }\n  }\n\n  const FileIcon = getFileIcon(asset.type)\n  const addedByMember = getTeamMember(asset.addedBy)\n  const assignedToMember = asset.assignedTo ? getTeamMember(asset.assignedTo) : null\n\n  return (\n    <div className=\"space-y-6 py-4\">\n      {/* Asset Header */}\n      <div className=\"flex items-center gap-4\">\n        <div className=\"w-12 h-12 rounded-lg bg-gray-100 flex items-center justify-center\">\n          <FileIcon className=\"size-6 text-gray-600\" />\n        </div>\n        <div className=\"flex-1\">\n          <h3 className=\"text-lg font-semibold\">{asset.title}</h3>\n          <p className=\"text-sm text-gray-500\">{asset.fileName}</p>\n        </div>\n        <Badge variant=\"outline\" className=\"capitalize\">\n          {asset.type}\n        </Badge>\n      </div>\n\n      {/* Asset Details Grid */}\n      <div className=\"grid grid-cols-2 gap-6\">\n        <div className=\"space-y-4\">\n          <div>\n            <Label className=\"text-sm font-medium text-gray-700\">File Size</Label>\n            <p className=\"text-sm text-gray-900 mt-1\">{asset.fileSize}</p>\n          </div>\n          \n          <div>\n            <Label className=\"text-sm font-medium text-gray-700\">Added By</Label>\n            <div className=\"flex items-center gap-2 mt-1\">\n              {addedByMember && (\n                <>\n                  <Avatar className=\"size-6\">\n                    <AvatarImage src={addedByMember.avatarUrl} />\n                    <AvatarFallback className=\"text-xs\">\n                      {addedByMember.name.split(' ').map(n => n[0]).join('').toUpperCase()}\n                    </AvatarFallback>\n                  </Avatar>\n                  <span className=\"text-sm text-gray-900\">{addedByMember.name}</span>\n                </>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <Label className=\"text-sm font-medium text-gray-700\">Assigned To</Label>\n            <div className=\"flex items-center gap-2 mt-1\">\n              {assignedToMember ? (\n                <>\n                  <Avatar className=\"size-6\">\n                    <AvatarImage src={assignedToMember.avatarUrl} />\n                    <AvatarFallback className=\"text-xs\">\n                      {assignedToMember.name.split(' ').map(n => n[0]).join('').toUpperCase()}\n                    </AvatarFallback>\n                  </Avatar>\n                  <span className=\"text-sm text-gray-900\">{assignedToMember.name}</span>\n                </>\n              ) : (\n                <span className=\"text-sm text-gray-500\">Unassigned</span>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"space-y-4\">\n          <div>\n            <Label className=\"text-sm font-medium text-gray-700\">Created</Label>\n            <p className=\"text-sm text-gray-900 mt-1\">\n              {formatDistanceToNow(new Date(asset.createdAt), { addSuffix: true })}\n            </p>\n          </div>\n          \n          <div>\n            <Label className=\"text-sm font-medium text-gray-700\">Last Updated</Label>\n            <p className=\"text-sm text-gray-900 mt-1\">\n              {formatDistanceToNow(new Date(asset.updatedAt), { addSuffix: true })}\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* Description */}\n      {asset.description && (\n        <div>\n          <Label className=\"text-sm font-medium text-gray-700\">Description</Label>\n          <p className=\"text-sm text-gray-900 mt-1\">{asset.description}</p>\n        </div>\n      )}\n\n      {/* Tags */}\n      {asset.tags && asset.tags.length > 0 && (\n        <div>\n          <Label className=\"text-sm font-medium text-gray-700\">Tags</Label>\n          <div className=\"flex gap-1 mt-1 flex-wrap\">\n            {asset.tags.map(tag => (\n              <Badge key={tag} variant=\"secondary\" className=\"text-xs\">\n                {tag}\n              </Badge>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Action Buttons */}\n      <div className=\"flex gap-2 pt-4 border-t\">\n        <Button>\n          <IconDownload className=\"size-4 mr-2\" />\n          Download\n        </Button>\n        <Button variant=\"outline\" onClick={() => onEdit(asset)}>\n          <IconEdit className=\"size-4 mr-2\" />\n          Edit Asset\n        </Button>\n      </div>\n    </div>\n  )\n}\n\n// Asset Edit Form Component\nfunction AssetEditForm({ \n  asset, \n  onAssetUpdated, \n  onClose,\n  getTeamMember \n}: { \n  asset: Asset\n  onAssetUpdated: (asset: Asset) => void\n  onClose: () => void\n  getTeamMember: (userId: string) => TeamMember | undefined\n}) {\n  const [loading, setLoading] = useState(false)\n  const [formData, setFormData] = useState({\n    title: asset.title,\n    description: asset.description || '',\n    assignedTo: asset.assignedTo || 'none',\n    tags: asset.tags?.join(', ') || ''\n  })\n\n  const handleSubmit = async () => {\n    setLoading(true)\n    try {\n      // In real implementation, this would call an API\n      const updatedAsset = {\n        ...asset,\n        title: formData.title,\n        description: formData.description || undefined,\n        assignedTo: formData.assignedTo === 'none' ? undefined : formData.assignedTo,\n        tags: formData.tags ? formData.tags.split(',').map(tag => tag.trim()).filter(Boolean) : undefined,\n        updatedAt: new Date().toISOString()\n      }\n      \n      onAssetUpdated(updatedAsset)\n      toast.success('Asset updated successfully')\n      onClose()\n    } catch (error) {\n      toast.error('Failed to update asset')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"space-y-6 py-4\">\n      <div className=\"space-y-4\">\n        <div>\n          <Label htmlFor=\"title\">Title</Label>\n          <Input\n            id=\"title\"\n            value={formData.title}\n            onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n            placeholder=\"Asset title\"\n          />\n        </div>\n        \n        <div>\n          <Label htmlFor=\"description\">Description</Label>\n          <Textarea\n            id=\"description\"\n            value={formData.description}\n            onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n            placeholder=\"Asset description (optional)\"\n            rows={3}\n          />\n        </div>\n        \n        <div>\n          <Label htmlFor=\"assignedTo\">Assigned To</Label>\n          <Select value={formData.assignedTo} onValueChange={(value) => setFormData(prev => ({ ...prev, assignedTo: value }))}>\n            <SelectTrigger>\n              <SelectValue placeholder=\"Select assignee\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"none\">Unassigned</SelectItem>\n              {dummyTeam.map(member => (\n                <SelectItem key={member.id} value={member.id}>\n                  {member.name}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n        \n        <div>\n          <Label htmlFor=\"tags\">Tags</Label>\n          <Input\n            id=\"tags\"\n            value={formData.tags}\n            onChange={(e) => setFormData(prev => ({ ...prev, tags: e.target.value }))}\n            placeholder=\"Enter tags separated by commas\"\n          />\n          <p className=\"text-xs text-gray-500 mt-1\">Separate multiple tags with commas</p>\n        </div>\n      </div>\n\n      <div className=\"flex gap-2 pt-4 border-t\">\n        <Button onClick={handleSubmit} disabled={loading || !formData.title.trim()}>\n          {loading ? 'Saving...' : 'Save Changes'}\n        </Button>\n        <Button variant=\"outline\" onClick={onClose}>\n          Cancel\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport function AssetsGrid({ projectId, showProjectFilter = false, onAssetUpdated, onAssetDeleted }: AssetsGridProps) {\n  const [data, setData] = useState(dummyAssets)\n  const [searchTerm, setSearchTerm] = useState('')\n  const [typeFilter, setTypeFilter] = useState<string>('all')\n  const [assigneeFilter, setAssigneeFilter] = useState<string>('all')\n  const [sortBy, setSortBy] = useState<string>('recent')\n  const [viewMode, setViewMode] = useState<'grid' | 'table'>('table')\n  const [selectedAsset, setSelectedAsset] = useState<Asset | null>(null)\n  const [viewSheetOpen, setViewSheetOpen] = useState(false)\n  const [editSheetOpen, setEditSheetOpen] = useState(false)\n\n  // Sensors for drag and drop (following your pattern)\n  const sensors = useSensors(\n    useSensor(MouseSensor, { activationConstraint: { distance: 10 } }),\n    useSensor(TouchSensor),\n    useSensor(KeyboardSensor)\n  )\n\n  // Filter and sort assets\n  const filteredAssets = useMemo(() => {\n    let assets = projectId \n      ? data.filter(asset => asset.projectId === projectId)\n      : data\n\n    // Apply search filter\n    if (searchTerm) {\n      assets = assets.filter(asset =>\n        asset.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        asset.fileName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        asset.description?.toLowerCase().includes(searchTerm.toLowerCase())\n      )\n    }\n\n    // Apply type filter\n    if (typeFilter !== 'all') {\n      assets = assets.filter(asset => asset.type === typeFilter)\n    }\n\n    // Apply assignee filter\n    if (assigneeFilter !== 'all') {\n      assets = assets.filter(asset => asset.assignedTo === assigneeFilter)\n    }\n\n    // Apply sorting\n    switch (sortBy) {\n      case 'recent':\n        return assets.sort((a, b) => new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime())\n      case 'oldest':\n        return assets.sort((a, b) => new Date(a.updatedAt).getTime() - new Date(b.updatedAt).getTime())\n      case 'alphabetical':\n        return assets.sort((a, b) => a.title.localeCompare(b.title))\n      case 'size':\n        return assets.sort((a, b) => parseFloat(b.fileSize) - parseFloat(a.fileSize))\n      default:\n        return assets\n    }\n  }, [data, searchTerm, typeFilter, assigneeFilter, sortBy, projectId])\n\n  const dataIds = useMemo(() => filteredAssets.map(asset => asset.id), [filteredAssets])\n\n  const getTeamMember = (userId: string) => {\n    return dummyTeam.find(member => member.id === userId)\n  }\n\n  const handleDragEnd = (event: DragEndEvent) => {\n    const { active, over } = event\n    if (active && over && active.id !== over.id) {\n      setData((data) => {\n        const oldIndex = dataIds.indexOf(active.id as string)\n        const newIndex = dataIds.indexOf(over.id as string)\n        return arrayMove(data, oldIndex, newIndex)\n      })\n    }\n  }\n\n  const handleView = (asset: Asset) => {\n    setSelectedAsset(asset)\n    setViewSheetOpen(true)\n  }\n\n  const handleEdit = (asset: Asset) => {\n    setSelectedAsset(asset)\n    setEditSheetOpen(true)\n  }\n\n  const handleDelete = (assetId: string) => {\n    setData(prev => prev.filter(asset => asset.id !== assetId))\n    toast.success('Asset deleted successfully')\n    onAssetDeleted?.(assetId)\n  }\n\n  const handleDownload = (asset: Asset) => {\n    // In real implementation, this would trigger file download\n    toast.success(`Downloading ${asset.fileName}`)\n  }\n\n  const handleAssetUpdated = (updatedAsset: Asset) => {\n    setData(prev => prev.map(asset => \n      asset.id === updatedAsset.id ? updatedAsset : asset\n    ))\n    onAssetUpdated?.(updatedAsset)\n  }\n\n  // Asset type counts for tabs\n  const imagesCount = filteredAssets.filter(a => a.type === 'image').length\n  const videosCount = filteredAssets.filter(a => a.type === 'video').length\n  const documentsCount = filteredAssets.filter(a => a.type === 'pdf' || a.type === 'document').length\n  const archivesCount = filteredAssets.filter(a => a.type === 'archive').length\n\n  if (filteredAssets.length === 0 && (searchTerm || typeFilter !== 'all' || assigneeFilter !== 'all')) {\n    return (\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h2 className=\"text-2xl font-bold\">Assets</h2>\n            <p className=\"text-gray-600\">Manage project files and assets</p>\n          </div>\n          <Button>\n            <IconUpload className=\"size-4 mr-2\" />\n            Upload Assets\n          </Button>\n        </div>\n\n        {/* Filters */}\n        <div className=\"flex items-center gap-4\">\n          <div className=\"relative flex-1 max-w-sm\">\n            <IconSearch className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 size-4\" />\n            <Input\n              placeholder=\"Search assets...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-9\"\n            />\n          </div>\n          \n          <Select value={typeFilter} onValueChange={setTypeFilter}>\n            <SelectTrigger className=\"w-32\">\n              <SelectValue placeholder=\"Type\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">All Types</SelectItem>\n              <SelectItem value=\"image\">Images</SelectItem>\n              <SelectItem value=\"video\">Videos</SelectItem>\n              <SelectItem value=\"pdf\">PDFs</SelectItem>\n              <SelectItem value=\"document\">Documents</SelectItem>\n              <SelectItem value=\"archive\">Archives</SelectItem>\n            </SelectContent>\n          </Select>\n          \n          <Select value={assigneeFilter} onValueChange={setAssigneeFilter}>\n            <SelectTrigger className=\"w-40\">\n              <SelectValue placeholder=\"Assignee\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">All Assignees</SelectItem>\n              {dummyTeam.map(member => (\n                <SelectItem key={member.id} value={member.id}>\n                  {member.name}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n\n        {/* Empty State */}\n        <Card>\n          <CardContent className=\"text-center py-12\">\n            <IconFileText className=\"size-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No assets found</h3>\n            <p className=\"text-gray-500 mb-4\">\n              Try adjusting your filters or search terms\n            </p>\n            <Button onClick={() => {\n              setSearchTerm('')\n              setTypeFilter('all')\n              setAssigneeFilter('all')\n            }}>\n              Clear Filters\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  if (filteredAssets.length === 0) {\n    return (\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h2 className=\"text-2xl font-bold\">Assets</h2>\n            <p className=\"text-gray-600\">Manage project files and assets</p>\n          </div>\n          <Button>\n            <IconUpload className=\"size-4 mr-2\" />\n            Upload Assets\n          </Button>\n        </div>\n\n        {/* Empty State */}\n        <Card>\n          <CardContent className=\"text-center py-12\">\n            <IconFileText className=\"size-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No assets yet</h3>\n            <p className=\"text-gray-500 mb-4\">\n              Upload your first asset to get started\n            </p>\n            <Button>\n              <IconUpload className=\"size-4 mr-2\" />\n              Upload Assets\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h2 className=\"text-2xl font-bold\">Assets</h2>\n            <p className=\"text-gray-600\">Manage project files and assets</p>\n          </div>\n          <Button>\n            <IconUpload className=\"size-4 mr-2\" />\n            Upload Assets\n          </Button>\n        </div>\n\n        {/* Tabs and Controls */}\n        <Tabs defaultValue=\"all\" className=\"w-full\">\n          <div className=\"flex items-center justify-between\">\n            {/* Filter Tabs */}\n            <TabsList className=\"hidden md:flex\">\n              <TabsTrigger value=\"all\">\n                All Assets ({filteredAssets.length})\n              </TabsTrigger>\n              <TabsTrigger value=\"images\">\n                Images <Badge variant=\"secondary\" className=\"ml-1\">{imagesCount}</Badge>\n              </TabsTrigger>\n              <TabsTrigger value=\"videos\">\n                Videos <Badge variant=\"secondary\" className=\"ml-1\">{videosCount}</Badge>\n              </TabsTrigger>\n              <TabsTrigger value=\"documents\">\n                Documents <Badge variant=\"secondary\" className=\"ml-1\">{documentsCount}</Badge>\n              </TabsTrigger>\n              <TabsTrigger value=\"archives\">\n                Archives <Badge variant=\"secondary\" className=\"ml-1\">{archivesCount}</Badge>\n              </TabsTrigger>\n            </TabsList>\n\n            {/* Controls */}\n            <div className=\"flex items-center gap-2\">\n              <div className=\"relative\">\n                <IconSearch className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 size-4\" />\n                <Input\n                  placeholder=\"Search assets...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-9 w-64\"\n                />\n              </div>\n              \n              <Select value={assigneeFilter} onValueChange={setAssigneeFilter}>\n                <SelectTrigger className=\"w-40\">\n                  <SelectValue placeholder=\"Assignee\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Assignees</SelectItem>\n                  {dummyTeam.map(member => (\n                    <SelectItem key={member.id} value={member.id}>\n                      {member.name}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              \n              <Select value={sortBy} onValueChange={setSortBy}>\n                <SelectTrigger className=\"w-36\">\n                  <SelectValue placeholder=\"Sort\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"recent\">Most Recent</SelectItem>\n                  <SelectItem value=\"oldest\">Oldest</SelectItem>\n                  <SelectItem value=\"alphabetical\">Alphabetical</SelectItem>\n                  <SelectItem value=\"size\">File Size</SelectItem>\n                </SelectContent>\n              </Select>\n\n              <Button\n                variant={viewMode === 'grid' ? 'default' : 'outline'}\n                size=\"sm\"\n                onClick={() => setViewMode('grid')}\n              >\n                <IconLayoutGrid className=\"size-4\" />\n              </Button>\n              <Button\n                variant={viewMode === 'table' ? 'default' : 'outline'}\n                size=\"sm\"\n                onClick={() => setViewMode('table')}\n              >\n                <IconList className=\"size-4\" />\n              </Button>\n            </div>\n          </div>\n\n          {/* All Assets Tab */}\n          <TabsContent value=\"all\" className=\"relative flex flex-col gap-4 overflow-auto\">\n            {viewMode === 'table' ? (\n              <div className=\"overflow-hidden rounded-lg border\">\n                <DndContext\n                  collisionDetection={closestCenter}\n                  modifiers={[restrictToVerticalAxis]}\n                  onDragEnd={handleDragEnd}\n                  sensors={sensors}\n                >\n                  <Table>\n                    <TableHeader className=\"bg-muted sticky top-0 z-10\">\n                      <TableRow>\n                        <TableHead className=\"w-12\"></TableHead>\n                        <TableHead>Asset</TableHead>\n                        <TableHead>Type</TableHead>\n                        <TableHead>Size</TableHead>\n                        <TableHead>Added By</TableHead>\n                        <TableHead>Assigned To</TableHead>\n                        <TableHead>Updated</TableHead>\n                        <TableHead className=\"w-12\"></TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      <SortableContext\n                        items={dataIds}\n                        strategy={verticalListSortingStrategy}\n                      >\n                        {filteredAssets.map((asset) => (\n                          <DraggableRow\n                            key={asset.id}\n                            asset={asset}\n                            onView={handleView}\n                            onEdit={handleEdit}\n                            onDelete={handleDelete}\n                            onDownload={handleDownload}\n                            getTeamMember={getTeamMember}\n                          />\n                        ))}\n                      </SortableContext>\n                    </TableBody>\n                  </Table>\n                </DndContext>\n              </div>\n            ) : (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n                {filteredAssets.map((asset) => {\n                  const FileIcon = (() => {\n                    switch (asset.type) {\n                      case 'image': return IconPhoto\n                      case 'video': return IconVideo\n                      case 'pdf': return IconFileText\n                      case 'document': return IconFileText\n                      case 'archive': return IconFileZip\n                      default: return IconFileText\n                    }\n                  })()\n                  \n                  const addedByMember = getTeamMember(asset.addedBy)\n                  const assignedToMember = asset.assignedTo ? getTeamMember(asset.assignedTo) : null\n\n                  return (\n                    <Card key={asset.id} className=\"hover:shadow-md transition-shadow\">\n                      <CardHeader className=\"pb-3\">\n                        <div className=\"flex items-start justify-between\">\n                          <div className=\"flex items-center gap-3 flex-1 min-w-0\">\n                            <div className=\"w-10 h-10 rounded-lg bg-gray-100 flex items-center justify-center flex-shrink-0\">\n                              <FileIcon className=\"size-5 text-gray-600\" />\n                            </div>\n                            <div className=\"flex-1 min-w-0\">\n                              <CardTitle className=\"text-sm font-medium truncate\">{asset.title}</CardTitle>\n                              <p className=\"text-xs text-gray-500 truncate\">{asset.fileName}</p>\n                            </div>\n                          </div>\n                          \n                          <DropdownMenu>\n                            <DropdownMenuTrigger asChild>\n                              <Button variant=\"ghost\" size=\"sm\">\n                                <IconDotsVertical className=\"size-4\" />\n                              </Button>\n                            </DropdownMenuTrigger>\n                            <DropdownMenuContent align=\"end\">\n                              <DropdownMenuItem onClick={() => handleView(asset)}>\n                                <IconEye className=\"size-4 mr-2\" />\n                                View Details\n                              </DropdownMenuItem>\n                              <DropdownMenuItem onClick={() => handleDownload(asset)}>\n                                <IconDownload className=\"size-4 mr-2\" />\n                                Download\n                              </DropdownMenuItem>\n                              <DropdownMenuSeparator />\n                              <DropdownMenuItem onClick={() => handleEdit(asset)}>\n                                <IconEdit className=\"size-4 mr-2\" />\n                                Edit\n                              </DropdownMenuItem>\n                              <DropdownMenuItem \n                                onClick={() => handleDelete(asset.id)}\n                                className=\"text-red-600\"\n                              >\n                                <IconTrash className=\"size-4 mr-2\" />\n                                Delete\n                              </DropdownMenuItem>\n                            </DropdownMenuContent>\n                          </DropdownMenu>\n                        </div>\n                      </CardHeader>\n                      \n                      <CardContent className=\"pt-0\">\n                        <div className=\"space-y-3\">\n                          <div className=\"flex items-center gap-2\">\n                            <Badge variant=\"outline\" className=\"text-xs capitalize\">\n                              {asset.type}\n                            </Badge>\n                            <span className=\"text-sm text-gray-500\">{asset.fileSize}</span>\n                          </div>\n                          \n                          {asset.description && (\n                            <p className=\"text-sm text-gray-600 line-clamp-2\">{asset.description}</p>\n                          )}\n                          \n                          <div className=\"flex items-center justify-between\">\n                            <div className=\"flex items-center gap-2\">\n                              {addedByMember && (\n                                <>\n                                  <Avatar className=\"size-6\">\n                                    <AvatarImage src={addedByMember.avatarUrl} />\n                                    <AvatarFallback className=\"text-xs\">\n                                      {addedByMember.name.split(' ').map(n => n[0]).join('').toUpperCase()}\n                                    </AvatarFallback>\n                                  </Avatar>\n                                  <span className=\"text-xs text-gray-500 truncate\">\n                                    {addedByMember.name}\n                                  </span>\n                                </>\n                              )}\n                            </div>\n                            \n                            {assignedToMember && (\n                              <div className=\"flex items-center gap-1\">\n                                <Avatar className=\"size-5\">\n                                  <AvatarImage src={assignedToMember.avatarUrl} />\n                                  <AvatarFallback className=\"text-xs\">\n                                    {assignedToMember.name.split(' ').map(n => n[0]).join('').toUpperCase()}\n                                  </AvatarFallback>\n                                </Avatar>\n                              </div>\n                            )}\n                          </div>\n                          \n                          <div className=\"text-xs text-gray-500\">\n                            Updated {formatDistanceToNow(new Date(asset.updatedAt), { addSuffix: true })}\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  )\n                })}\n              </div>\n            )}\n          </TabsContent>\n\n          {/* Individual Type Tabs */}\n          <TabsContent value=\"images\">\n            <div className=\"text-center py-8\">\n              <IconPhoto className=\"size-12 text-gray-400 mx-auto mb-4\" />\n              <p className=\"text-gray-500\">Filter by images will be implemented here</p>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"videos\">\n            <div className=\"text-center py-8\">\n              <IconVideo className=\"size-12 text-gray-400 mx-auto mb-4\" />\n              <p className=\"text-gray-500\">Filter by videos will be implemented here</p>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"documents\">\n            <div className=\"text-center py-8\">\n              <IconFileText className=\"size-12 text-gray-400 mx-auto mb-4\" />\n              <p className=\"text-gray-500\">Filter by documents will be implemented here</p>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"archives\">\n            <div className=\"text-center py-8\">\n              <IconFileZip className=\"size-12 text-gray-400 mx-auto mb-4\" />\n              <p className=\"text-gray-500\">Filter by archives will be implemented here</p>\n            </div>\n          </TabsContent>\n        </Tabs>\n      </div>\n\n      {/* Asset View Sheet */}\n      <Sheet open={viewSheetOpen} onOpenChange={setViewSheetOpen}>\n        <SheetContent className=\"w-full sm:max-w-2xl\">\n          <SheetHeader>\n            <SheetTitle>Asset Details</SheetTitle>\n            <SheetDescription>\n              View asset information and details\n            </SheetDescription>\n          </SheetHeader>\n          {selectedAsset && (\n            <AssetViewModal\n              asset={selectedAsset}\n              onEdit={() => {\n                setViewSheetOpen(false)\n                setEditSheetOpen(true)\n              }}\n              getTeamMember={getTeamMember}\n            />\n          )}\n        </SheetContent>\n      </Sheet>\n\n      {/* Asset Edit Sheet */}\n      <Sheet open={editSheetOpen} onOpenChange={setEditSheetOpen}>\n        <SheetContent className=\"w-full sm:max-w-2xl\">\n          <SheetHeader>\n            <SheetTitle>Edit Asset</SheetTitle>\n            <SheetDescription>\n              Update asset details and information\n            </SheetDescription>\n          </SheetHeader>\n          {selectedAsset && (\n            <AssetEditForm\n              asset={selectedAsset}\n              onAssetUpdated={(updatedAsset) => {\n                handleAssetUpdated(updatedAsset)\n                setEditSheetOpen(false)\n              }}\n              onClose={() => setEditSheetOpen(false)}\n              getTeamMember={getTeamMember}\n            />\n          )}\n        </SheetContent>\n      </Sheet>\n    </>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4904, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  showCloseButton = true,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content> & {\n  showCloseButton?: boolean\n}) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        {showCloseButton && (\n          <DialogPrimitive.Close\n            data-slot=\"dialog-close\"\n            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\"\n          >\n            <XIcon />\n            <span className=\"sr-only\">Close</span>\n          </DialogPrimitive.Close>\n        )}\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,2QAAC,uMAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,2QAAC,0MAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,2QAAC,yMAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,2QAAC,wMAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,2QAAC,0MAAuB;QACtB,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,kBAAkB,IAAI,EACtB,GAAG,OAGJ;IACC,qBACE,2QAAC;QAAa,aAAU;;0BACtB,2QAAC;;;;;0BACD,2QAAC,0MAAuB;gBACtB,aAAU;gBACV,WAAW,IAAA,sJAAE,EACX,+WACA;gBAED,GAAG,KAAK;;oBAER;oBACA,iCACC,2QAAC,wMAAqB;wBACpB,aAAU;wBACV,WAAU;;0CAEV,2QAAC,sOAAK;;;;;0CACN,2QAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAMtC;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,2QAAC,wMAAqB;QACpB,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,2QAAC,8MAA2B;QAC1B,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 5086, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/modals/upload-asset-modal.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useRef } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { \n  Upload, \n  FileImage, \n  Loader2,\n  X,\n  File,\n  Image,\n  Video,\n  FileText\n} from \"lucide-react\";\nimport { projects, team } from \"@/lib/utils/dummy-data\";\n\ninterface UploadAssetModalProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  projectId?: string;\n  trigger?: React.ReactNode;\n}\n\ninterface FileUpload {\n  file: File;\n  title: string;\n  description: string;\n  type: \"image\" | \"video\" | \"pdf\" | \"document\" | \"other\";\n}\n\nexport function UploadAssetModal({ open, onOpenChange, projectId, trigger }: UploadAssetModalProps) {\n  const [formData, setFormData] = useState({\n    projectId: projectId || \"\",\n    assignedTo: \"\",\n  });\n  const [uploads, setUploads] = useState<FileUpload[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const resetForm = () => {\n    setFormData({\n      projectId: projectId || \"\",\n      assignedTo: \"\",\n    });\n    setUploads([]);\n    setUploadProgress(0);\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (uploads.length === 0) return;\n\n    setIsLoading(true);\n    setUploadProgress(0);\n\n    try {\n      // Simulate file upload with progress\n      for (let i = 0; i <= 100; i += 10) {\n        setUploadProgress(i);\n        await new Promise(resolve => setTimeout(resolve, 100));\n      }\n      \n      // Here you would typically upload files to your storage service\n      console.log(\"Uploading assets:\", { formData, uploads });\n      \n      // Close modal and reset form\n      onOpenChange(false);\n      resetForm();\n    } catch (error) {\n      console.error(\"Error uploading assets:\", error);\n    } finally {\n      setIsLoading(false);\n      setUploadProgress(0);\n    }\n  };\n\n  const handleInputChange = (field: string, value: any) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const detectFileType = (file: File): FileUpload[\"type\"] => {\n    const mimeType = file.type;\n    if (mimeType.startsWith(\"image/\")) return \"image\";\n    if (mimeType.startsWith(\"video/\")) return \"video\";\n    if (mimeType === \"application/pdf\") return \"pdf\";\n    if (mimeType.includes(\"document\") || mimeType.includes(\"text\") || \n        mimeType.includes(\"word\") || mimeType.includes(\"sheet\")) return \"document\";\n    return \"other\";\n  };\n\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = Array.from(e.target.files || []);\n    const newUploads: FileUpload[] = files.map(file => ({\n      file,\n      title: file.name.replace(/\\.[^/.]+$/, \"\"), // Remove extension\n      description: \"\",\n      type: detectFileType(file),\n    }));\n    \n    setUploads(prev => [...prev, ...newUploads]);\n  };\n\n  const updateUpload = (index: number, field: keyof Omit<FileUpload, \"file\">, value: string) => {\n    setUploads(prev => prev.map((upload, i) => \n      i === index ? { ...upload, [field]: value } : upload\n    ));\n  };\n\n  const removeUpload = (index: number) => {\n    setUploads(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const getFileIcon = (type: FileUpload[\"type\"]) => {\n    switch (type) {\n      case \"image\":\n        return Image;\n      case \"video\":\n        return Video;\n      case \"pdf\":\n      case \"document\":\n        return FileText;\n      default:\n        return File;\n    }\n  };\n\n  const formatFileSize = (bytes: number) => {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    if (bytes === 0) return '0 Byte';\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)).toString());\n    return Math.round(bytes / Math.pow(1024, i) * 100) / 100 + ' ' + sizes[i];\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      {trigger && <DialogTrigger asChild>{trigger}</DialogTrigger>}\n      <DialogContent className=\"sm:max-w-[700px] max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <FileImage className=\"h-5 w-5\" />\n            Upload Assets\n          </DialogTitle>\n          <DialogDescription>\n            Upload files and organize them for your project team.\n          </DialogDescription>\n        </DialogHeader>\n\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          {/* Project and Assignment */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label>Project *</Label>\n              <Select\n                value={formData.projectId}\n                onValueChange={(value) => handleInputChange(\"projectId\", value)}\n                required\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select a project\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {projects.map((project) => (\n                    <SelectItem key={project.id} value={project.id}>\n                      <div className=\"flex items-center gap-2\">\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          {project.status}\n                        </Badge>\n                        <span>{project.title}</span>\n                      </div>\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label>Assign to</Label>\n              <Select\n                value={formData.assignedTo}\n                onValueChange={(value) => handleInputChange(\"assignedTo\", value)}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select assignee\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"\">Unassigned</SelectItem>\n                  {team.map((member) => (\n                    <SelectItem key={member.id} value={member.id}>\n                      <div className=\"flex items-center gap-2\">\n                        <Avatar className=\"h-6 w-6\">\n                          <AvatarImage src={member.avatarUrl} />\n                          <AvatarFallback className=\"text-xs\">\n                            {member.name.split(\" \").map(n => n[0]).join(\"\")}\n                          </AvatarFallback>\n                        </Avatar>\n                        <div>\n                          <div className=\"font-medium\">{member.name}</div>\n                          <div className=\"text-xs text-muted-foreground capitalize\">\n                            {member.role.replace(\"_\", \" \")}\n                          </div>\n                        </div>\n                      </div>\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n\n          {/* File Upload Area */}\n          <div className=\"space-y-4\">\n            <Label>Upload Files</Label>\n            <div \n              className=\"border-2 border-dashed border-muted-foreground/25 rounded-lg p-8 text-center cursor-pointer hover:border-muted-foreground/50 transition-colors\"\n              onClick={() => fileInputRef.current?.click()}\n            >\n              <Upload className=\"h-8 w-8 mx-auto mb-4 text-muted-foreground\" />\n              <div className=\"space-y-2\">\n                <p className=\"text-sm font-medium\">Click to upload files</p>\n                <p className=\"text-xs text-muted-foreground\">\n                  Support for images, videos, PDFs, and documents\n                </p>\n                <p className=\"text-xs text-muted-foreground\">\n                  Maximum file size: 50MB per file\n                </p>\n              </div>\n            </div>\n            <input\n              ref={fileInputRef}\n              type=\"file\"\n              multiple\n              accept=\"image/*,video/*,.pdf,.doc,.docx,.txt,.md\"\n              onChange={handleFileSelect}\n              className=\"hidden\"\n            />\n          </div>\n\n          {/* Uploaded Files List */}\n          {uploads.length > 0 && (\n            <div className=\"space-y-4\">\n              <Label>Files to Upload ({uploads.length})</Label>\n              <div className=\"space-y-3 max-h-64 overflow-y-auto\">\n                {uploads.map((upload, index) => {\n                  const Icon = getFileIcon(upload.type);\n                  return (\n                    <div key={index} className=\"border rounded-lg p-4 space-y-3\">\n                      <div className=\"flex items-start justify-between\">\n                        <div className=\"flex items-center gap-3\">\n                          <div className=\"p-2 bg-muted rounded-lg\">\n                            <Icon className=\"h-4 w-4\" />\n                          </div>\n                          <div className=\"flex-1 min-w-0\">\n                            <p className=\"font-medium text-sm truncate\">{upload.file.name}</p>\n                            <div className=\"flex items-center gap-2 text-xs text-muted-foreground\">\n                              <Badge variant=\"outline\" className=\"text-xs\">\n                                {upload.type}\n                              </Badge>\n                              <span>{formatFileSize(upload.file.size)}</span>\n                            </div>\n                          </div>\n                        </div>\n                        <Button\n                          type=\"button\"\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => removeUpload(index)}\n                          className=\"h-8 w-8 p-0\"\n                        >\n                          <X className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                      \n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                        <div className=\"space-y-1\">\n                          <Label className=\"text-xs\">Asset Title</Label>\n                          <Input\n                            placeholder=\"Enter asset title\"\n                            value={upload.title}\n                            onChange={(e) => updateUpload(index, \"title\", e.target.value)}\n                            className=\"h-8 text-sm\"\n                          />\n                        </div>\n                        <div className=\"space-y-1\">\n                          <Label className=\"text-xs\">Type</Label>\n                          <Select\n                            value={upload.type}\n                            onValueChange={(value) => updateUpload(index, \"type\", value as FileUpload[\"type\"])}\n                          >\n                            <SelectTrigger className=\"h-8 text-sm\">\n                              <SelectValue />\n                            </SelectTrigger>\n                            <SelectContent>\n                              <SelectItem value=\"image\">Image</SelectItem>\n                              <SelectItem value=\"video\">Video</SelectItem>\n                              <SelectItem value=\"pdf\">PDF</SelectItem>\n                              <SelectItem value=\"document\">Document</SelectItem>\n                              <SelectItem value=\"other\">Other</SelectItem>\n                            </SelectContent>\n                          </Select>\n                        </div>\n                      </div>\n                      \n                      <div className=\"space-y-1\">\n                        <Label className=\"text-xs\">Description</Label>\n                        <Textarea\n                          placeholder=\"Optional description\"\n                          value={upload.description}\n                          onChange={(e) => updateUpload(index, \"description\", e.target.value)}\n                          rows={2}\n                          className=\"text-sm\"\n                        />\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n\n          {/* Upload Progress */}\n          {isLoading && (\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center justify-between text-sm\">\n                <span>Uploading files...</span>\n                <span>{uploadProgress}%</span>\n              </div>\n              <Progress value={uploadProgress} className=\"h-2\" />\n            </div>\n          )}\n\n          {/* Upload Summary */}\n          {uploads.length > 0 && (\n            <div className=\"bg-muted/50 rounded-lg p-4 space-y-2\">\n              <h4 className=\"font-medium text-sm\">Upload Summary</h4>\n              <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-muted-foreground\">Total files:</span>\n                  <span>{uploads.length}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-muted-foreground\">Total size:</span>\n                  <span>{formatFileSize(uploads.reduce((sum, upload) => sum + upload.file.size, 0))}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-muted-foreground\">Images:</span>\n                  <span>{uploads.filter(u => u.type === \"image\").length}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-muted-foreground\">Documents:</span>\n                  <span>{uploads.filter(u => u.type === \"pdf\" || u.type === \"document\").length}</span>\n                </div>\n              </div>\n            </div>\n          )}\n\n          <DialogFooter>\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() => onOpenChange(false)}\n              disabled={isLoading}\n            >\n              Cancel\n            </Button>\n            <Button \n              type=\"submit\" \n              disabled={isLoading || uploads.length === 0 || !formData.projectId}\n            >\n              {isLoading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n              Upload {uploads.length} {uploads.length === 1 ? \"File\" : \"Files\"}\n            </Button>\n          </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6072, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/app/app/assets/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useMemo } from 'react'\nimport { AssetsHeader } from '@/components/assets/assets-header'\nimport { AssetsStats } from '@/components/assets/assets-stats'\nimport { AssetsGrid } from '@/components/assets/assets-grid'\nimport { UploadAssetModal } from '@/components/modals/upload-asset-modal'\nimport { assets, projects, team } from '@/lib/utils/dummy-data'\n\nexport default function AssetsPage() {\n  const [searchTerm, setSearchTerm] = useState('')\n  const [typeFilter, setTypeFilter] = useState<string>('all')\n  const [projectFilter, setProjectFilter] = useState<string>('all')\n  const [sortBy, setSortBy] = useState<string>('newest')\n  const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid')\n  const [uploadModalOpen, setUploadModalOpen] = useState(false)\n\n  const filteredAssets = useMemo(() => {\n    let filtered = assets.filter(asset => {\n      const matchesSearch = asset.title.toLowerCase().includes(searchTerm.toLowerCase())\n      const matchesType = typeFilter === 'all' || asset.type === typeFilter\n      const matchesProject = projectFilter === 'all' || asset.projectId === projectFilter\n      \n      return matchesSearch && matchesType && matchesProject\n    })\n\n    // Sort assets\n    switch (sortBy) {\n      case 'newest':\n        filtered.sort((a, b) => new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime())\n        break\n      case 'oldest':\n        filtered.sort((a, b) => new Date(a.updatedAt).getTime() - new Date(b.updatedAt).getTime())\n        break\n      case 'alphabetical':\n        filtered.sort((a, b) => a.title.localeCompare(b.title))\n        break\n      case 'size':\n        filtered.sort((a, b) => (b.size || 0) - (a.size || 0))\n        break\n      default:\n        break\n    }\n\n    return filtered\n  }, [assets, searchTerm, typeFilter, projectFilter, sortBy])\n\n  const handleAssetUpload = (uploadedAssets: any[]) => {\n    console.log('Assets uploaded:', uploadedAssets)\n    // In a real app, this would update the assets list\n    setUploadModalOpen(false)\n  }\n\n  const handleAssetUpdate = (updatedAsset: any) => {\n    console.log('Asset updated:', updatedAsset)\n    // In a real app, this would update the specific asset\n  }\n\n  const handleAssetDelete = (assetId: string) => {\n    console.log('Asset deleted:', assetId)\n    // In a real app, this would remove the asset from the list\n  }\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      <AssetsHeader \n        assets={assets}\n        searchTerm={searchTerm}\n        setSearchTerm={setSearchTerm}\n        typeFilter={typeFilter}\n        setTypeFilter={setTypeFilter}\n        projectFilter={projectFilter}\n        setProjectFilter={setProjectFilter}\n        sortBy={sortBy}\n        setSortBy={setSortBy}\n        viewMode={viewMode}\n        setViewMode={setViewMode}\n        onUpload={() => setUploadModalOpen(true)}\n      />\n      \n      <AssetsStats assets={assets} />\n      \n      <AssetsGrid \n        assets={filteredAssets}\n        viewMode={viewMode}\n        onAssetUpdate={handleAssetUpdate}\n        onAssetDelete={handleAssetDelete}\n      />\n\n      <UploadAssetModal\n        open={uploadModalOpen}\n        onOpenChange={setUploadModalOpen}\n        onAssetsUploaded={handleAssetUpload}\n      />\n    </div>\n  )\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;AASe,SAAS;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,8OAAQ,EAAC;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,8OAAQ,EAAS;IACrD,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,8OAAQ,EAAS;IAC3D,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,8OAAQ,EAAS;IAC7C,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,8OAAQ,EAAkB;IAC1D,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,8OAAQ,EAAC;IAEvD,MAAM,iBAAiB,IAAA,6OAAO,EAAC;QAC7B,IAAI,WAAW,2KAAM,CAAC,MAAM,CAAC,CAAA;YAC3B,MAAM,gBAAgB,MAAM,KAAK,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW;YAC/E,MAAM,cAAc,eAAe,SAAS,MAAM,IAAI,KAAK;YAC3D,MAAM,iBAAiB,kBAAkB,SAAS,MAAM,SAAS,KAAK;YAEtE,OAAO,iBAAiB,eAAe;QACzC;QAEA,cAAc;QACd,OAAQ;YACN,KAAK;gBACH,SAAS,IAAI,CAAC,CAAC,GAAG,IAAM,IAAI,KAAK,EAAE,SAAS,EAAE,OAAO,KAAK,IAAI,KAAK,EAAE,SAAS,EAAE,OAAO;gBACvF;YACF,KAAK;gBACH,SAAS,IAAI,CAAC,CAAC,GAAG,IAAM,IAAI,KAAK,EAAE,SAAS,EAAE,OAAO,KAAK,IAAI,KAAK,EAAE,SAAS,EAAE,OAAO;gBACvF;YACF,KAAK;gBACH,SAAS,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,CAAC,aAAa,CAAC,EAAE,KAAK;gBACrD;YACF,KAAK;gBACH,SAAS,IAAI,CAAC,CAAC,GAAG,IAAM,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC;gBACpD;YACF;gBACE;QACJ;QAEA,OAAO;IACT,GAAG;QAAC,2KAAM;QAAE;QAAY;QAAY;QAAe;KAAO;IAE1D,MAAM,oBAAoB,CAAC;QACzB,QAAQ,GAAG,CAAC,oBAAoB;QAChC,mDAAmD;QACnD,mBAAmB;IACrB;IAEA,MAAM,oBAAoB,CAAC;QACzB,QAAQ,GAAG,CAAC,kBAAkB;IAC9B,sDAAsD;IACxD;IAEA,MAAM,oBAAoB,CAAC;QACzB,QAAQ,GAAG,CAAC,kBAAkB;IAC9B,2DAA2D;IAC7D;IAEA,qBACE,2QAAC;QAAI,WAAU;;0BACb,2QAAC,6LAAY;gBACX,QAAQ,2KAAM;gBACd,YAAY;gBACZ,eAAe;gBACf,YAAY;gBACZ,eAAe;gBACf,eAAe;gBACf,kBAAkB;gBAClB,QAAQ;gBACR,WAAW;gBACX,UAAU;gBACV,aAAa;gBACb,UAAU,IAAM,mBAAmB;;;;;;0BAGrC,2QAAC,2LAAW;gBAAC,QAAQ,2KAAM;;;;;;0BAE3B,2QAAC,yLAAU;gBACT,QAAQ;gBACR,UAAU;gBACV,eAAe;gBACf,eAAe;;;;;;0BAGjB,2QAAC,yMAAgB;gBACf,MAAM;gBACN,cAAc;gBACd,kBAAkB;;;;;;;;;;;;AAI1B","debugId":null}}]
}