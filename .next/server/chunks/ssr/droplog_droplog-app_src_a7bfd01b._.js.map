{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/lib/utils/dummy-data-integrations.ts"],"sourcesContent":["// lib/utils/dummy-data-integrations.ts\n\nexport interface Integration {\n  id: string\n  name: string\n  category: 'productivity' | 'storage' | 'communication' | 'development' | 'analytics' | 'automation'\n  status: 'connected' | 'disconnected' | 'error' | 'pending'\n  description: string\n  icon: string // Icon name for Lucide React\n  plan: 'free' | 'pro' | 'enterprise' | null\n  features: string[]\n  settings?: Record<string, any>\n  lastSync?: string\n  connectedAt?: string\n  syncFrequency?: 'realtime' | 'hourly' | 'daily' | 'weekly' | 'manual'\n  dataTypes?: string[]\n  permissions?: string[]\n}\n\nexport interface Webhook {\n  id: string\n  name: string\n  url: string\n  events: string[]\n  status: 'active' | 'inactive' | 'error'\n  secret?: string\n  createdAt: string\n  lastTriggered?: string\n  successCount: number\n  errorCount: number\n  description?: string\n}\n\nexport interface ApiKey {\n  id: string\n  name: string\n  key: string // Masked for security\n  permissions: string[]\n  createdAt: string\n  lastUsed?: string\n  status: 'active' | 'inactive' | 'expired'\n  expiresAt?: string\n  usageCount: number\n}\n\n// Integrations dummy data\nexport const integrations: Integration[] = [\n  // Productivity\n  {\n    id: 'google-calendar',\n    name: 'Google Calendar',\n    category: 'productivity',\n    status: 'connected',\n    description: 'Sync tasks and deadlines with your Google Calendar',\n    icon: 'Calendar',\n    plan: 'free',\n    features: ['Two-way sync', 'Event creation', 'Deadline reminders', 'Meeting scheduling'],\n    settings: {\n      calendarId: 'primary',\n      syncTaskDeadlines: true,\n      createMeetingEvents: true,\n      reminderMinutes: [15, 30]\n    },\n    lastSync: '2025-09-12T08:30:00Z',\n    connectedAt: '2025-09-01T10:00:00Z',\n    syncFrequency: 'hourly',\n    dataTypes: ['tasks', 'events', 'deadlines'],\n    permissions: ['calendar.read', 'calendar.write']\n  },\n  {\n    id: 'apple-calendar',\n    name: 'Apple Calendar',\n    category: 'productivity',\n    status: 'disconnected',\n    description: 'Integrate with iCloud Calendar for seamless task scheduling',\n    icon: 'Calendar',\n    plan: 'pro',\n    features: ['Two-way sync', 'Event creation', 'Reminder integration', 'Cross-device sync'],\n    syncFrequency: 'daily',\n    dataTypes: ['tasks', 'events', 'reminders']\n  },\n  {\n    id: 'microsoft-calendar',\n    name: 'Microsoft Calendar',\n    category: 'productivity',\n    status: 'error',\n    description: 'Connect with Outlook Calendar for unified scheduling',\n    icon: 'Calendar',\n    plan: 'free',\n    features: ['Outlook integration', 'Teams meeting sync', 'Exchange support'],\n    lastSync: '2025-09-11T14:20:00Z',\n    connectedAt: '2025-08-15T09:00:00Z',\n    syncFrequency: 'hourly',\n    dataTypes: ['tasks', 'meetings', 'events']\n  },\n  {\n    id: 'trello',\n    name: 'Trello',\n    category: 'productivity',\n    status: 'connected',\n    description: 'Import boards and sync cards with your Droplog projects',\n    icon: 'Trello',\n    plan: 'free',\n    features: ['Board import', 'Card sync', 'Checklist integration', 'Due date sync'],\n    settings: {\n      boardIds: ['abc123', 'def456'],\n      syncChecklists: true,\n      importLabels: true\n    },\n    lastSync: '2025-09-12T07:45:00Z',\n    connectedAt: '2025-08-20T11:30:00Z',\n    syncFrequency: 'daily',\n    dataTypes: ['projects', 'tasks', 'checklists']\n  },\n  {\n    id: 'monday',\n    name: 'Monday.com',\n    category: 'productivity',\n    status: 'disconnected',\n    description: 'Sync boards and items from Monday.com workspaces',\n    icon: 'Grid3X3',\n    plan: 'pro',\n    features: ['Board sync', 'Status tracking', 'Timeline integration', 'Pulse updates'],\n    syncFrequency: 'hourly',\n    dataTypes: ['projects', 'tasks', 'statuses', 'timelines']\n  },\n  {\n    id: 'notion',\n    name: 'Notion',\n    category: 'productivity',\n    status: 'connected',\n    description: 'Import pages and databases from your Notion workspace',\n    icon: 'FileText',\n    plan: 'pro',\n    features: ['Database sync', 'Page import', 'Block-level sync', 'Template sharing'],\n    settings: {\n      databaseIds: ['notion-db-1', 'notion-db-2'],\n      syncBlocks: false,\n      importPages: true\n    },\n    lastSync: '2025-09-12T06:15:00Z',\n    connectedAt: '2025-09-05T16:00:00Z',\n    syncFrequency: 'daily',\n    dataTypes: ['content', 'databases', 'pages']\n  },\n\n  // Storage\n  {\n    id: 'google-drive',\n    name: 'Google Drive',\n    category: 'storage',\n    status: 'connected',\n    description: 'Store and manage project assets in Google Drive',\n    icon: 'HardDrive',\n    plan: 'free',\n    features: ['File sync', 'Automatic backup', 'Shared folder access', 'Version control'],\n    settings: {\n      folderId: 'drive-folder-123',\n      autoBackup: true,\n      shareFiles: true,\n      maxFileSize: '100MB'\n    },\n    lastSync: '2025-09-12T09:00:00Z',\n    connectedAt: '2025-08-10T14:30:00Z',\n    syncFrequency: 'realtime',\n    dataTypes: ['files', 'documents', 'images'],\n    permissions: ['drive.read', 'drive.write', 'drive.share']\n  },\n  {\n    id: 'apple-cloud',\n    name: 'iCloud Drive',\n    category: 'storage',\n    status: 'disconnected',\n    description: 'Access and sync files from your iCloud Drive',\n    icon: 'Cloud',\n    plan: 'pro',\n    features: ['File sync', 'Cross-device access', 'Automatic backup', 'Family sharing'],\n    syncFrequency: 'daily',\n    dataTypes: ['files', 'documents', 'media']\n  },\n  {\n    id: 'microsoft-onedrive',\n    name: 'OneDrive',\n    category: 'storage',\n    status: 'pending',\n    description: 'Integrate with Microsoft OneDrive for file management',\n    icon: 'HardDrive',\n    plan: 'free',\n    features: ['File sync', 'Office integration', 'Shared libraries', 'Version history'],\n    syncFrequency: 'hourly',\n    dataTypes: ['files', 'documents', 'office-files']\n  },\n  {\n    id: 'dropbox',\n    name: 'Dropbox',\n    category: 'storage',\n    status: 'disconnected',\n    description: 'Connect your Dropbox for seamless file sharing',\n    icon: 'Droplets',\n    plan: 'free',\n    features: ['File sync', 'Smart sync', 'File recovery', 'Team folders'],\n    syncFrequency: 'realtime',\n    dataTypes: ['files', 'documents', 'media']\n  },\n\n  // Communication\n  {\n    id: 'slack',\n    name: 'Slack',\n    category: 'communication',\n    status: 'connected',\n    description: 'Send notifications and updates to Slack channels',\n    icon: 'MessageSquare',\n    plan: 'free',\n    features: ['Channel notifications', 'Direct messages', 'Task updates', 'Project alerts'],\n    settings: {\n      channels: ['#general', '#projects', '#notifications'],\n      mentionUsers: true,\n      taskUpdates: true\n    },\n    lastSync: '2025-09-12T09:15:00Z',\n    connectedAt: '2025-08-25T12:00:00Z',\n    syncFrequency: 'realtime',\n    dataTypes: ['notifications', 'messages', 'updates']\n  },\n  {\n    id: 'discord',\n    name: 'Discord',\n    category: 'communication',\n    status: 'disconnected',\n    description: 'Post updates and notifications to Discord servers',\n    icon: 'MessageCircle',\n    plan: 'pro',\n    features: ['Server notifications', 'Webhook support', 'Role mentions', 'Embed messages'],\n    syncFrequency: 'realtime',\n    dataTypes: ['notifications', 'messages']\n  },\n  {\n    id: 'microsoft-teams',\n    name: 'Microsoft Teams',\n    category: 'communication',\n    status: 'error',\n    description: 'Integrate with Teams for seamless collaboration',\n    icon: 'Users',\n    plan: 'enterprise',\n    features: ['Team notifications', 'Meeting integration', 'File sharing', 'Chat sync'],\n    lastSync: '2025-09-10T16:30:00Z',\n    connectedAt: '2025-09-01T08:00:00Z',\n    syncFrequency: 'hourly',\n    dataTypes: ['notifications', 'meetings', 'files']\n  },\n\n  // Development\n  {\n    id: 'github',\n    name: 'GitHub',\n    category: 'development',\n    status: 'connected',\n    description: 'Link repositories and track issues with your projects',\n    icon: 'Github',\n    plan: 'free',\n    features: ['Repository linking', 'Issue tracking', 'Pull request sync', 'Commit history'],\n    settings: {\n      repositories: ['user/repo1', 'user/repo2'],\n      syncIssues: true,\n      trackCommits: true,\n      webhookUrl: 'https://api.droplog.com/webhooks/github'\n    },\n    lastSync: '2025-09-12T08:45:00Z',\n    connectedAt: '2025-08-01T10:00:00Z',\n    syncFrequency: 'realtime',\n    dataTypes: ['repositories', 'issues', 'pull-requests', 'commits']\n  },\n  {\n    id: 'gitlab',\n    name: 'GitLab',\n    category: 'development',\n    status: 'disconnected',\n    description: 'Connect GitLab projects and manage merge requests',\n    icon: 'GitBranch',\n    plan: 'pro',\n    features: ['Project sync', 'Issue management', 'Pipeline tracking', 'Merge requests'],\n    syncFrequency: 'hourly',\n    dataTypes: ['projects', 'issues', 'pipelines', 'merge-requests']\n  },\n  {\n    id: 'jira',\n    name: 'Jira',\n    category: 'development',\n    status: 'disconnected',\n    description: 'Sync issues and epics from your Jira projects',\n    icon: 'Bug',\n    plan: 'enterprise',\n    features: ['Issue sync', 'Epic tracking', 'Sprint integration', 'Status updates'],\n    syncFrequency: 'daily',\n    dataTypes: ['issues', 'epics', 'sprints', 'stories']\n  },\n\n  // Analytics\n  {\n    id: 'google-analytics',\n    name: 'Google Analytics',\n    category: 'analytics',\n    status: 'connected',\n    description: 'Track project performance and website analytics',\n    icon: 'BarChart3',\n    plan: 'pro',\n    features: ['Traffic tracking', 'Goal monitoring', 'Custom reports', 'Real-time data'],\n    settings: {\n      propertyId: 'GA-123456789',\n      trackingGoals: ['conversions', 'engagement'],\n      reportFrequency: 'weekly'\n    },\n    lastSync: '2025-09-12T07:00:00Z',\n    connectedAt: '2025-08-15T09:30:00Z',\n    syncFrequency: 'daily',\n    dataTypes: ['analytics', 'reports', 'goals']\n  },\n  {\n    id: 'hotjar',\n    name: 'Hotjar',\n    category: 'analytics',\n    status: 'disconnected',\n    description: 'Analyze user behavior with heatmaps and recordings',\n    icon: 'Activity',\n    plan: 'pro',\n    features: ['Heatmaps', 'Session recordings', 'Feedback polls', 'Conversion funnels'],\n    syncFrequency: 'daily',\n    dataTypes: ['heatmaps', 'recordings', 'feedback']\n  },\n\n  // Automation\n  {\n    id: 'zapier',\n    name: 'Zapier',\n    category: 'automation',\n    status: 'connected',\n    description: 'Automate workflows with 5000+ app integrations',\n    icon: 'Zap',\n    plan: 'pro',\n    features: ['Multi-step workflows', 'Conditional logic', 'Webhooks', 'Custom triggers'],\n    settings: {\n      activeZaps: 5,\n      maxZaps: 20,\n      webhookEndpoint: 'https://hooks.zapier.com/droplog'\n    },\n    lastSync: '2025-09-12T09:30:00Z',\n    connectedAt: '2025-08-20T14:15:00Z',\n    syncFrequency: 'realtime',\n    dataTypes: ['triggers', 'actions', 'workflows']\n  },\n  {\n    id: 'make',\n    name: 'Make (Integromat)',\n    category: 'automation',\n    status: 'disconnected',\n    description: 'Create advanced automation scenarios',\n    icon: 'Settings2',\n    plan: 'enterprise',\n    features: ['Visual scenarios', 'Error handling', 'Data transformation', 'API connections'],\n    syncFrequency: 'realtime',\n    dataTypes: ['scenarios', 'modules', 'connections']\n  },\n  {\n    id: 'webhooks',\n    name: 'Custom Webhooks',\n    category: 'automation',\n    status: 'connected',\n    description: 'Set up custom webhook endpoints for real-time integrations',\n    icon: 'Webhook',\n    plan: 'free',\n    features: ['Custom endpoints', 'Event filtering', 'Retry logic', 'Payload transformation'],\n    settings: {\n      activeWebhooks: 3,\n      maxWebhooks: 10\n    },\n    lastSync: '2025-09-12T09:45:00Z',\n    connectedAt: '2025-08-01T10:00:00Z',\n    syncFrequency: 'realtime',\n    dataTypes: ['events', 'payloads', 'responses']\n  }\n]\n\n// Webhooks dummy data\nexport const webhooks: Webhook[] = [\n  {\n    id: 'wh-1',\n    name: 'Project Status Updates',\n    url: 'https://hooks.example.com/project-updates',\n    events: ['project.created', 'project.updated', 'project.completed'],\n    status: 'active',\n    secret: 'wh_secret_***',\n    createdAt: '2025-08-15T10:00:00Z',\n    lastTriggered: '2025-09-12T08:30:00Z',\n    successCount: 245,\n    errorCount: 3,\n    description: 'Sends notifications when project status changes'\n  },\n  {\n    id: 'wh-2',\n    name: 'Task Assignments',\n    url: 'https://hooks.example.com/task-assignments',\n    events: ['task.assigned', 'task.completed', 'task.overdue'],\n    status: 'active',\n    secret: 'wh_secret_***',\n    createdAt: '2025-08-20T14:30:00Z',\n    lastTriggered: '2025-09-12T09:15:00Z',\n    successCount: 156,\n    errorCount: 0,\n    description: 'Notifies external systems about task assignments and completions'\n  },\n  {\n    id: 'wh-3',\n    name: 'Asset Uploads',\n    url: 'https://hooks.example.com/asset-uploads',\n    events: ['asset.uploaded', 'asset.updated', 'asset.deleted'],\n    status: 'error',\n    createdAt: '2025-09-01T09:00:00Z',\n    lastTriggered: '2025-09-10T15:45:00Z',\n    successCount: 28,\n    errorCount: 12,\n    description: 'Triggers when project assets are modified'\n  },\n  {\n    id: 'wh-4',\n    name: 'Team Activity',\n    url: 'https://hooks.example.com/team-activity',\n    events: ['user.login', 'user.project_joined', 'user.task_created'],\n    status: 'inactive',\n    createdAt: '2025-07-10T12:00:00Z',\n    successCount: 89,\n    errorCount: 5,\n    description: 'Tracks team member activities and engagement'\n  }\n]\n\n// API Keys dummy data\nexport const apiKeys: ApiKey[] = [\n  {\n    id: 'api-1',\n    name: 'Mobile App API',\n    key: 'pk_live_51H***************',\n    permissions: ['projects.read', 'tasks.read', 'tasks.write'],\n    createdAt: '2025-08-01T10:00:00Z',\n    lastUsed: '2025-09-12T08:45:00Z',\n    status: 'active',\n    usageCount: 15420\n  },\n  {\n    id: 'api-2',\n    name: 'Analytics Dashboard',\n    key: 'pk_live_52G***************',\n    permissions: ['analytics.read', 'projects.read'],\n    createdAt: '2025-08-15T14:30:00Z',\n    lastUsed: '2025-09-11T22:30:00Z',\n    status: 'active',\n    usageCount: 8934\n  },\n  {\n    id: 'api-3',\n    name: 'Automation Scripts',\n    key: 'pk_live_53F***************',\n    permissions: ['projects.write', 'tasks.write', 'webhooks.manage'],\n    createdAt: '2025-07-20T09:15:00Z',\n    lastUsed: '2025-09-05T16:20:00Z',\n    status: 'inactive',\n    expiresAt: '2025-12-20T09:15:00Z',\n    usageCount: 2156\n  },\n  {\n    id: 'api-4',\n    name: 'Third-party Integration',\n    key: 'pk_test_54H***************',\n    permissions: ['projects.read', 'tasks.read'],\n    createdAt: '2025-09-01T11:00:00Z',\n    status: 'expired',\n    expiresAt: '2025-09-10T11:00:00Z',\n    usageCount: 45\n  }\n]"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 689, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col rounded-xl border py-6 gap-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-regularm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,2EACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,2QAAC;QACC,aAAU;QACV,WAAW,IAAA,sJAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 791, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n    </SwitchPrimitive.Root>\n  )\n}\n\nexport { Switch }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,OAAO,EACd,SAAS,EACT,GAAG,OAC+C;IAClD,qBACE,2QAAC,uMAAoB;QACnB,aAAU;QACV,WAAW,IAAA,sJAAE,EACX,6WACA;QAED,GAAG,KAAK;kBAET,cAAA,2QAAC,wMAAqB;YACpB,aAAU;YACV,WAAW,IAAA,sJAAE,EACX;;;;;;;;;;;AAKV","debugId":null}},
    {"offset": {"line": 826, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/integrations/integration-card.tsx"],"sourcesContent":["// components/integrations/integration-card.tsx\n'use client'\n\nimport { useState } from 'react'\nimport { \n  Card, \n  CardContent, \n  CardDescription, \n  CardHeader, \n  CardTitle \n} from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu'\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from '@/components/ui/dialog'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Switch } from '@/components/ui/switch'\nimport { Separator } from '@/components/ui/separator'\nimport {\n  MoreHorizontal,\n  Settings,\n  Unlink,\n  RefreshCw,\n  ExternalLink,\n  AlertCircle,\n  CheckCircle2\n} from 'lucide-react'\nimport { type Integration } from '@/lib/utils/dummy-data-integrations'\nimport { formatRelativeTime } from '@/lib/utils'\n\ninterface IntegrationCardProps {\n  integration: Integration\n  icon: React.ComponentType<any>\n  statusIcon: React.ReactNode\n  statusBadge: React.ReactNode\n  planBadge: React.ReactNode\n}\n\nexport function IntegrationCard({ \n  integration, \n  icon: IconComponent, \n  statusIcon, \n  statusBadge, \n  planBadge \n}: IntegrationCardProps) {\n  const [isConfigOpen, setIsConfigOpen] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleConnect = async () => {\n    setIsLoading(true)\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 2000))\n    setIsLoading(false)\n    // In real app, update integration status\n  }\n\n  const handleDisconnect = async () => {\n    setIsLoading(true)\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000))\n    setIsLoading(false)\n    // In real app, update integration status\n  }\n\n  const handleSync = async () => {\n    setIsLoading(true)\n    // Simulate sync\n    await new Promise(resolve => setTimeout(resolve, 1500))\n    setIsLoading(false)\n  }\n\n  return (\n    <>\n      <Card className=\"h-full\">\n        <CardHeader className=\"pb-3\">\n          <div className=\"flex items-start justify-between\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-10 h-10 bg-muted rounded-lg flex items-center justify-center\">\n                <IconComponent className=\"h-5 w-5\" />\n              </div>\n              <div className=\"space-y-1\">\n                <CardTitle className=\"text-base flex items-center gap-2\">\n                  {integration.name}\n                  {statusIcon}\n                </CardTitle>\n                <div className=\"flex items-center gap-2\">\n                  {statusBadge}\n                  {planBadge}\n                </div>\n              </div>\n            </div>\n            \n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <Button variant=\"ghost\" size=\"sm\" className=\"h-8 w-8 p-0\">\n                  <MoreHorizontal className=\"h-4 w-4\" />\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent align=\"end\">\n                {integration.status === 'connected' ? (\n                  <>\n                    <DropdownMenuItem onClick={() => setIsConfigOpen(true)}>\n                      <Settings className=\"h-4 w-4 mr-2\" />\n                      Configure\n                    </DropdownMenuItem>\n                    <DropdownMenuItem onClick={handleSync} disabled={isLoading}>\n                      <RefreshCw className=\"h-4 w-4 mr-2\" />\n                      Sync Now\n                    </DropdownMenuItem>\n                    <DropdownMenuItem onClick={handleDisconnect} disabled={isLoading}>\n                      <Unlink className=\"h-4 w-4 mr-2\" />\n                      Disconnect\n                    </DropdownMenuItem>\n                  </>\n                ) : (\n                  <DropdownMenuItem onClick={handleConnect} disabled={isLoading}>\n                    <ExternalLink className=\"h-4 w-4 mr-2\" />\n                    Connect\n                  </DropdownMenuItem>\n                )}\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </div>\n        </CardHeader>\n        \n        <CardContent className=\"space-y-4\">\n          <CardDescription className=\"text-sm\">\n            {integration.description}\n          </CardDescription>\n\n          {/* Connection Info */}\n          {integration.status === 'connected' && (\n            <div className=\"space-y-2 text-xs text-muted-foreground\">\n              {integration.lastSync && (\n                <div className=\"flex justify-between\">\n                  <span>Last synced:</span>\n                  <span>{formatRelativeTime(integration.lastSync)}</span>\n                </div>\n              )}\n              {integration.syncFrequency && (\n                <div className=\"flex justify-between\">\n                  <span>Sync frequency:</span>\n                  <span className=\"capitalize\">{integration.syncFrequency}</span>\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Error State */}\n          {integration.status === 'error' && (\n            <div className=\"flex items-center gap-2 p-2 bg-red-50 text-red-700 rounded text-xs\">\n              <AlertCircle className=\"h-3 w-3\" />\n              <span>Connection failed. Check settings.</span>\n            </div>\n          )}\n\n          {/* Features */}\n          <div className=\"space-y-2\">\n            <div className=\"text-xs font-medium text-muted-foreground\">Features:</div>\n            <div className=\"space-y-1\">\n              {integration.features.slice(0, 3).map((feature, index) => (\n                <div key={index} className=\"flex items-center gap-2 text-xs\">\n                  <CheckCircle2 className=\"h-3 w-3 text-green-500\" />\n                  <span>{feature}</span>\n                </div>\n              ))}\n              {integration.features.length > 3 && (\n                <div className=\"text-xs text-muted-foreground\">\n                  +{integration.features.length - 3} more\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Action Button */}\n          <div className=\"pt-2\">\n            {integration.status === 'connected' ? (\n              <Button \n                size=\"sm\" \n                variant=\"outline\" \n                className=\"w-full\"\n                onClick={() => setIsConfigOpen(true)}\n              >\n                <Settings className=\"h-4 w-4 mr-2\" />\n                Configure\n              </Button>\n            ) : (\n              <Button \n                size=\"sm\" \n                className=\"w-full\" \n                onClick={handleConnect}\n                disabled={isLoading}\n              >\n                {isLoading ? (\n                  <RefreshCw className=\"h-4 w-4 mr-2 animate-spin\" />\n                ) : (\n                  <ExternalLink className=\"h-4 w-4 mr-2\" />\n                )}\n                {isLoading ? 'Connecting...' : 'Connect'}\n              </Button>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Configuration Dialog */}\n      <Dialog open={isConfigOpen} onOpenChange={setIsConfigOpen}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2\">\n              <IconComponent className=\"h-5 w-5\" />\n              Configure {integration.name}\n            </DialogTitle>\n            <DialogDescription>\n              Manage settings and preferences for this integration\n            </DialogDescription>\n          </DialogHeader>\n          \n          <div className=\"space-y-6\">\n            {/* Current Status */}\n            <div className=\"flex items-center justify-between p-4 bg-muted rounded-lg\">\n              <div className=\"flex items-center gap-3\">\n                <div>{statusIcon}</div>\n                <div>\n                  <div className=\"font-medium\">Connection Status</div>\n                  <div className=\"text-sm text-muted-foreground\">\n                    {integration.status === 'connected' ? 'Successfully connected' : 'Not connected'}\n                  </div>\n                </div>\n              </div>\n              {statusBadge}\n            </div>\n\n            {/* Settings */}\n            {integration.settings && (\n              <div className=\"space-y-4\">\n                <h4 className=\"font-medium\">Settings</h4>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  {Object.entries(integration.settings).map(([key, value]) => (\n                    <div key={key} className=\"space-y-2\">\n                      <Label className=\"capitalize\">{key.replace(/([A-Z])/g, ' $1').toLowerCase()}</Label>\n                      {typeof value === 'boolean' ? (\n                        <div className=\"flex items-center space-x-2\">\n                          <Switch checked={value} />\n                          <span className=\"text-sm text-muted-foreground\">\n                            {value ? 'Enabled' : 'Disabled'}\n                          </span>\n                        </div>\n                      ) : (\n                        <Input \n                          value={Array.isArray(value) ? value.join(', ') : String(value)}\n                          placeholder={`Enter ${key.replace(/([A-Z])/g, ' $1').toLowerCase()}`}\n                        />\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n            \n            {/* Features */}\n            <div className=\"space-y-4\">\n              <h4 className=\"font-medium\">Available Features</h4>\n              <div className=\"grid grid-cols-2 gap-2\">\n                {integration.features.map((feature, index) => (\n                  <div key={index} className=\"flex items-center gap-2\">\n                    <CheckCircle2 className=\"h-4 w-4 text-green-500\" />\n                    <span className=\"text-sm\">{feature}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Data Types */}\n            {integration.dataTypes && (\n              <div className=\"space-y-4\">\n                <h4 className=\"font-medium\">Synchronized Data</h4>\n                <div className=\"flex flex-wrap gap-2\">\n                  {integration.dataTypes.map((dataType) => (\n                    <Badge key={dataType} variant=\"secondary\">\n                      {dataType.replace(/[_-]/g, ' ')}\n                    </Badge>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            <Separator />\n\n            {/* Actions */}\n            <div className=\"flex justify-end gap-2\">\n              <Button variant=\"outline\" onClick={() => setIsConfigOpen(false)}>\n                Cancel\n              </Button>\n              <Button>\n                Save Changes\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1587, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/components/integrations/integrations-view.tsx"],"sourcesContent":["// components/integrations/integrations-view.tsx\n'use client'\n\nimport { useState } from 'react'\nimport { \n  Card, \n  CardContent, \n  CardDescription, \n  CardHeader, \n  CardTitle \n} from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport { \n  Tabs, \n  TabsContent, \n  TabsList, \n  TabsTrigger \n} from '@/components/ui/tabs'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport {\n  Plug,\n  AlertTriangle,\n  CheckCircle,\n  XCircle,\n  Clock,\n  BarChart3,\n  MessageSquare,\n  Cloud,\n  Github,\n  Grid3X3,\n  Calendar,\n  HardDrive,\n  FileText,\n  MessageCircle,\n  Users,\n  Bug,\n  Activity,\n  Zap,\n  Settings2,\n  Webhook,\n  Trello,\n  Droplets,\n  GitBranch\n} from 'lucide-react'\nimport { integrations, webhooks, apiKeys, type Integration } from '@/lib/utils/dummy-data-integrations'\nimport { IntegrationCard } from './integration-card'\nimport { WebhooksList } from './webhooks-list'\nimport { ApiKeysList } from './api-keys-list'\n\n// Icon mapping for integrations\nconst iconMap = {\n  Calendar,\n  Grid3X3,\n  FileText,\n  HardDrive,\n  Cloud,\n  Droplets,\n  MessageSquare,\n  MessageCircle,\n  Users,\n  Github,\n  GitBranch,\n  Bug,\n  BarChart3,\n  Activity,\n  Zap,\n  Settings2,\n  Webhook,\n  Trello,\n  CheckCircle,\n  XCircle,\n  Clock\n}\n\nexport function IntegrationsView() {\n  const [selectedCategory, setSelectedCategory] = useState<string>('all')\n\n  // Group integrations by category\n  const categories = [\n    { key: 'all', label: 'All Integrations', icon: Plug },\n    { key: 'productivity', label: 'Productivity', icon: CheckCircle },\n    { key: 'storage', label: 'Storage', icon: Cloud },\n    { key: 'communication', label: 'Communication', icon: MessageSquare },\n    { key: 'development', label: 'Development', icon: Github },\n    { key: 'analytics', label: 'Analytics', icon: BarChart3 },\n    { key: 'automation', label: 'Automation', icon: Zap }\n  ]\n\n  const filteredIntegrations = selectedCategory === 'all' \n    ? integrations \n    : integrations.filter(integration => integration.category === selectedCategory)\n\n  // Statistics\n  const connectedCount = integrations.filter(i => i.status === 'connected').length\n  const availableCount = integrations.filter(i => i.status === 'disconnected').length\n  const errorCount = integrations.filter(i => i.status === 'error').length\n  const activeWebhooksCount = webhooks.filter(w => w.status === 'active').length\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'connected': return <CheckCircle className=\"h-4 w-4 text-green-500\" />\n      case 'error': return <XCircle className=\"h-4 w-4 text-red-500\" />\n      case 'pending': return <Clock className=\"h-4 w-4 text-yellow-500\" />\n      default: return <XCircle className=\"h-4 w-4 text-gray-400\" />\n    }\n  }\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'connected':\n        return <Badge variant=\"default\" className=\"bg-green-100 text-green-800 hover:bg-green-100\">Connected</Badge>\n      case 'error':\n        return <Badge variant=\"destructive\">Error</Badge>\n      case 'pending':\n        return <Badge variant=\"secondary\" className=\"bg-yellow-100 text-yellow-800\">Pending</Badge>\n      default:\n        return <Badge variant=\"outline\">Available</Badge>\n    }\n  }\n\n  const getPlanBadge = (plan: string | null) => {\n    if (!plan) return null\n    \n    switch (plan) {\n      case 'free':\n        return <Badge variant=\"secondary\" className=\"text-xs\">Free</Badge>\n      case 'pro':\n        return <Badge variant=\"default\" className=\"text-xs bg-blue-100 text-blue-800 hover:bg-blue-100\">Pro</Badge>\n      case 'enterprise':\n        return <Badge variant=\"default\" className=\"text-xs bg-purple-100 text-purple-800 hover:bg-purple-100\">Enterprise</Badge>\n      default:\n        return null\n    }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n\n\n        {/* Integrations Tab */}\n        <div className=\"space-y-6\">\n          {/* Category Filter */}\n          <div className=\"flex flex-wrap gap-2 mb-6\">\n            {categories.map((category) => {\n              const IconComponent = category.icon\n              return (\n                <Button\n                  key={category.key}\n                  variant={selectedCategory === category.key ? 'default' : 'outline'}\n                  size=\"sm\"\n                  onClick={() => setSelectedCategory(category.key)}\n                  className=\"flex items-center gap-2\"\n                >\n                  <IconComponent className=\"h-4 w-4\" />\n                  {category.label}\n                </Button>\n              )\n            })}\n          </div>\n\n          {/* Integrations Grid */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {filteredIntegrations.map((integration) => {\n              const IconComponent = iconMap[integration.icon as keyof typeof iconMap] || Plug\n              \n              return (\n                <IntegrationCard\n                  key={integration.id}\n                  integration={integration}\n                  icon={IconComponent}\n                  statusIcon={getStatusIcon(integration.status)}\n                  statusBadge={getStatusBadge(integration.status)}\n                  planBadge={getPlanBadge(integration.plan)}\n                />\n              )\n            })}\n          </div>\n\n          {filteredIntegrations.length === 0 && (\n            <div className=\"text-center py-12\">\n              <Plug className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-muted-foreground mb-2\">\n                No integrations found\n              </h3>\n              <p className=\"text-sm text-muted-foreground\">\n                Try selecting a different category or check back later for new integrations.\n              </p>\n            </div>\n          )}\n    </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1917, "column": 0}, "map": {"version":3,"sources":["file:///Users/frvncois/Documents/DEV/droplog/droplog-app/src/app/app/integrations/page.tsx"],"sourcesContent":["// app/integrations/page.tsx\n'use client'\n\nimport { IntegrationsView } from '@/components/integrations/integrations-view'\n\nexport default function IntegrationsPage() {\n  return (\n    <div className=\"container p-6 max-w-6xl mx-auto space-y-8\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900\">Integrations</h1>\n        <p className=\"text-gray-600 mt-2\">\n          Connect your favorite tools and services to streamline your workflow across all projects\n        </p>\n      </div>\n\n      <IntegrationsView />\n    </div>\n  )\n}"],"names":[],"mappings":"AAAA,4BAA4B;;;;;;AAG5B;AAFA;;;AAIe,SAAS;IACtB,qBACE,2QAAC;QAAI,WAAU;;0BACb,2QAAC;gBAAI,WAAU;;kCACb,2QAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,2QAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;0BAKpC,2QAAC,2MAAgB;;;;;;;;;;;AAGvB","debugId":null}}]
}